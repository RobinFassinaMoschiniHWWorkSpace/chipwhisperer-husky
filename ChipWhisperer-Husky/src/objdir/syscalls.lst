   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "syscalls.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .text._sbrk,"ax",%progbits
  16              	 .align 1
  17              	 .global _sbrk
  18              	 .arch armv7-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu softvfp
  24              	_sbrk:
  25              	.LFB3:
  26              	 .file 1 ".././hal/sam3u1c/syscalls.c"
   1:.././hal/sam3u1c/syscalls.c **** /**
   2:.././hal/sam3u1c/syscalls.c ****  * \file
   3:.././hal/sam3u1c/syscalls.c ****  *
   4:.././hal/sam3u1c/syscalls.c ****  * \brief Syscalls for SAM (GCC).
   5:.././hal/sam3u1c/syscalls.c ****  *
   6:.././hal/sam3u1c/syscalls.c ****  * Copyright (c) 2011-2013 Atmel Corporation. All rights reserved.
   7:.././hal/sam3u1c/syscalls.c ****  *
   8:.././hal/sam3u1c/syscalls.c ****  * \asf_license_start
   9:.././hal/sam3u1c/syscalls.c ****  *
  10:.././hal/sam3u1c/syscalls.c ****  * \page License
  11:.././hal/sam3u1c/syscalls.c ****  *
  12:.././hal/sam3u1c/syscalls.c ****  * Redistribution and use in source and binary forms, with or without
  13:.././hal/sam3u1c/syscalls.c ****  * modification, are permitted provided that the following conditions are met:
  14:.././hal/sam3u1c/syscalls.c ****  *
  15:.././hal/sam3u1c/syscalls.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:.././hal/sam3u1c/syscalls.c ****  *    this list of conditions and the following disclaimer.
  17:.././hal/sam3u1c/syscalls.c ****  *
  18:.././hal/sam3u1c/syscalls.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/sam3u1c/syscalls.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:.././hal/sam3u1c/syscalls.c ****  *    and/or other materials provided with the distribution.
  21:.././hal/sam3u1c/syscalls.c ****  *
  22:.././hal/sam3u1c/syscalls.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:.././hal/sam3u1c/syscalls.c ****  *    from this software without specific prior written permission.
  24:.././hal/sam3u1c/syscalls.c ****  *
  25:.././hal/sam3u1c/syscalls.c ****  * 4. This software may only be redistributed and used in connection with an
  26:.././hal/sam3u1c/syscalls.c ****  *    Atmel microcontroller product.
  27:.././hal/sam3u1c/syscalls.c ****  *
  28:.././hal/sam3u1c/syscalls.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:.././hal/sam3u1c/syscalls.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:.././hal/sam3u1c/syscalls.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:.././hal/sam3u1c/syscalls.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:.././hal/sam3u1c/syscalls.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/sam3u1c/syscalls.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:.././hal/sam3u1c/syscalls.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:.././hal/sam3u1c/syscalls.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:.././hal/sam3u1c/syscalls.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:.././hal/sam3u1c/syscalls.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:.././hal/sam3u1c/syscalls.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:.././hal/sam3u1c/syscalls.c ****  *
  40:.././hal/sam3u1c/syscalls.c ****  * \asf_license_stop
  41:.././hal/sam3u1c/syscalls.c ****  *
  42:.././hal/sam3u1c/syscalls.c ****  */
  43:.././hal/sam3u1c/syscalls.c **** 
  44:.././hal/sam3u1c/syscalls.c **** #include <stdio.h>
  45:.././hal/sam3u1c/syscalls.c **** #include <stdarg.h>
  46:.././hal/sam3u1c/syscalls.c **** #include <sys/types.h>
  47:.././hal/sam3u1c/syscalls.c **** #include <sys/stat.h>
  48:.././hal/sam3u1c/syscalls.c **** 
  49:.././hal/sam3u1c/syscalls.c **** /// @cond 0
  50:.././hal/sam3u1c/syscalls.c **** /**INDENT-OFF**/
  51:.././hal/sam3u1c/syscalls.c **** #ifdef __cplusplus
  52:.././hal/sam3u1c/syscalls.c **** extern "C" {
  53:.././hal/sam3u1c/syscalls.c **** #endif
  54:.././hal/sam3u1c/syscalls.c **** /**INDENT-ON**/
  55:.././hal/sam3u1c/syscalls.c **** /// @endcond
  56:.././hal/sam3u1c/syscalls.c **** 
  57:.././hal/sam3u1c/syscalls.c **** #undef errno
  58:.././hal/sam3u1c/syscalls.c **** extern int errno;
  59:.././hal/sam3u1c/syscalls.c **** extern int _end;
  60:.././hal/sam3u1c/syscalls.c **** extern int __ram_end__;
  61:.././hal/sam3u1c/syscalls.c **** 
  62:.././hal/sam3u1c/syscalls.c **** extern caddr_t _sbrk(int incr);
  63:.././hal/sam3u1c/syscalls.c **** extern int link(char *old, char *new);
  64:.././hal/sam3u1c/syscalls.c **** extern int _close(int file);
  65:.././hal/sam3u1c/syscalls.c **** extern int _fstat(int file, struct stat *st);
  66:.././hal/sam3u1c/syscalls.c **** extern int _isatty(int file);
  67:.././hal/sam3u1c/syscalls.c **** extern int _lseek(int file, int ptr, int dir);
  68:.././hal/sam3u1c/syscalls.c **** extern void _exit(int status);
  69:.././hal/sam3u1c/syscalls.c **** extern void _kill(int pid, int sig);
  70:.././hal/sam3u1c/syscalls.c **** extern int _getpid(void);
  71:.././hal/sam3u1c/syscalls.c **** 
  72:.././hal/sam3u1c/syscalls.c **** extern caddr_t _sbrk(int incr)
  73:.././hal/sam3u1c/syscalls.c **** {
  27              	 .loc 1 73 1
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  74:.././hal/sam3u1c/syscalls.c **** 	static unsigned char *heap = NULL;
  75:.././hal/sam3u1c/syscalls.c **** 	unsigned char *prev_heap;
  76:.././hal/sam3u1c/syscalls.c **** 	int ramend = (int)&__ram_end__;
  43              	 .loc 1 76 6
  44 0008 104B     	 ldr r3,.L5
  45 000a FB60     	 str r3,[r7,#12]
  77:.././hal/sam3u1c/syscalls.c **** 
  78:.././hal/sam3u1c/syscalls.c **** 	if (heap == NULL) {
  46              	 .loc 1 78 11
  47 000c 104B     	 ldr r3,.L5+4
  48 000e 1B68     	 ldr r3,[r3]
  49              	 .loc 1 78 5
  50 0010 002B     	 cmp r3,#0
  51 0012 02D1     	 bne .L2
  79:.././hal/sam3u1c/syscalls.c **** 		heap = (unsigned char *)&_end;
  52              	 .loc 1 79 8
  53 0014 0E4B     	 ldr r3,.L5+4
  54 0016 0F4A     	 ldr r2,.L5+8
  55 0018 1A60     	 str r2,[r3]
  56              	.L2:
  80:.././hal/sam3u1c/syscalls.c **** 	}
  81:.././hal/sam3u1c/syscalls.c **** 	prev_heap = heap;
  57              	 .loc 1 81 12
  58 001a 0D4B     	 ldr r3,.L5+4
  59 001c 1B68     	 ldr r3,[r3]
  60 001e BB60     	 str r3,[r7,#8]
  82:.././hal/sam3u1c/syscalls.c **** 
  83:.././hal/sam3u1c/syscalls.c **** 	if (((int)prev_heap + incr) > ramend) {
  61              	 .loc 1 83 7
  62 0020 BA68     	 ldr r2,[r7,#8]
  63              	 .loc 1 83 22
  64 0022 7B68     	 ldr r3,[r7,#4]
  65 0024 1344     	 add r3,r3,r2
  66              	 .loc 1 83 5
  67 0026 FA68     	 ldr r2,[r7,#12]
  68 0028 9A42     	 cmp r2,r3
  69 002a 02DA     	 bge .L3
  84:.././hal/sam3u1c/syscalls.c **** 		return (caddr_t) -1;	
  70              	 .loc 1 84 10
  71 002c 4FF0FF33 	 mov r3,#-1
  72 0030 06E0     	 b .L4
  73              	.L3:
  85:.././hal/sam3u1c/syscalls.c **** 	}
  86:.././hal/sam3u1c/syscalls.c **** 
  87:.././hal/sam3u1c/syscalls.c **** 	heap += incr;
  74              	 .loc 1 87 7
  75 0032 074B     	 ldr r3,.L5+4
  76 0034 1A68     	 ldr r2,[r3]
  77 0036 7B68     	 ldr r3,[r7,#4]
  78 0038 1344     	 add r3,r3,r2
  79 003a 054A     	 ldr r2,.L5+4
  80 003c 1360     	 str r3,[r2]
  88:.././hal/sam3u1c/syscalls.c **** 
  89:.././hal/sam3u1c/syscalls.c **** 	return (caddr_t) prev_heap;
  81              	 .loc 1 89 9
  82 003e BB68     	 ldr r3,[r7,#8]
  83              	.L4:
  90:.././hal/sam3u1c/syscalls.c **** }
  84              	 .loc 1 90 1
  85 0040 1846     	 mov r0,r3
  86 0042 1437     	 adds r7,r7,#20
  87              	.LCFI3:
  88              	 .cfi_def_cfa_offset 4
  89 0044 BD46     	 mov sp,r7
  90              	.LCFI4:
  91              	 .cfi_def_cfa_register 13
  92              	 
  93 0046 80BC     	 pop {r7}
  94              	.LCFI5:
  95              	 .cfi_restore 7
  96              	 .cfi_def_cfa_offset 0
  97 0048 7047     	 bx lr
  98              	.L6:
  99 004a 00BF     	 .align 2
 100              	.L5:
 101 004c 00000000 	 .word __ram_end__
 102 0050 00000000 	 .word heap.5362
 103 0054 00000000 	 .word _end
 104              	 .cfi_endproc
 105              	.LFE3:
 107              	 .section .text.link,"ax",%progbits
 108              	 .align 1
 109              	 .global link
 110              	 .syntax unified
 111              	 .thumb
 112              	 .thumb_func
 113              	 .fpu softvfp
 115              	link:
 116              	.LFB4:
  91:.././hal/sam3u1c/syscalls.c **** 
  92:.././hal/sam3u1c/syscalls.c **** extern int link(char *old, char *new)
  93:.././hal/sam3u1c/syscalls.c **** {
 117              	 .loc 1 93 1
 118              	 .cfi_startproc
 119              	 
 120              	 
 121              	 
 122 0000 80B4     	 push {r7}
 123              	.LCFI6:
 124              	 .cfi_def_cfa_offset 4
 125              	 .cfi_offset 7,-4
 126 0002 83B0     	 sub sp,sp,#12
 127              	.LCFI7:
 128              	 .cfi_def_cfa_offset 16
 129 0004 00AF     	 add r7,sp,#0
 130              	.LCFI8:
 131              	 .cfi_def_cfa_register 7
 132 0006 7860     	 str r0,[r7,#4]
 133 0008 3960     	 str r1,[r7]
  94:.././hal/sam3u1c/syscalls.c **** 	return -1;
 134              	 .loc 1 94 9
 135 000a 4FF0FF33 	 mov r3,#-1
  95:.././hal/sam3u1c/syscalls.c **** }
 136              	 .loc 1 95 1
 137 000e 1846     	 mov r0,r3
 138 0010 0C37     	 adds r7,r7,#12
 139              	.LCFI9:
 140              	 .cfi_def_cfa_offset 4
 141 0012 BD46     	 mov sp,r7
 142              	.LCFI10:
 143              	 .cfi_def_cfa_register 13
 144              	 
 145 0014 80BC     	 pop {r7}
 146              	.LCFI11:
 147              	 .cfi_restore 7
 148              	 .cfi_def_cfa_offset 0
 149 0016 7047     	 bx lr
 150              	 .cfi_endproc
 151              	.LFE4:
 153              	 .section .text._close,"ax",%progbits
 154              	 .align 1
 155              	 .global _close
 156              	 .syntax unified
 157              	 .thumb
 158              	 .thumb_func
 159              	 .fpu softvfp
 161              	_close:
 162              	.LFB5:
  96:.././hal/sam3u1c/syscalls.c **** 
  97:.././hal/sam3u1c/syscalls.c **** extern int _close(int file)
  98:.././hal/sam3u1c/syscalls.c **** {
 163              	 .loc 1 98 1
 164              	 .cfi_startproc
 165              	 
 166              	 
 167              	 
 168 0000 80B4     	 push {r7}
 169              	.LCFI12:
 170              	 .cfi_def_cfa_offset 4
 171              	 .cfi_offset 7,-4
 172 0002 83B0     	 sub sp,sp,#12
 173              	.LCFI13:
 174              	 .cfi_def_cfa_offset 16
 175 0004 00AF     	 add r7,sp,#0
 176              	.LCFI14:
 177              	 .cfi_def_cfa_register 7
 178 0006 7860     	 str r0,[r7,#4]
  99:.././hal/sam3u1c/syscalls.c **** 	return -1;
 179              	 .loc 1 99 9
 180 0008 4FF0FF33 	 mov r3,#-1
 100:.././hal/sam3u1c/syscalls.c **** }
 181              	 .loc 1 100 1
 182 000c 1846     	 mov r0,r3
 183 000e 0C37     	 adds r7,r7,#12
 184              	.LCFI15:
 185              	 .cfi_def_cfa_offset 4
 186 0010 BD46     	 mov sp,r7
 187              	.LCFI16:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 0012 80BC     	 pop {r7}
 191              	.LCFI17:
 192              	 .cfi_restore 7
 193              	 .cfi_def_cfa_offset 0
 194 0014 7047     	 bx lr
 195              	 .cfi_endproc
 196              	.LFE5:
 198              	 .section .text._fstat,"ax",%progbits
 199              	 .align 1
 200              	 .global _fstat
 201              	 .syntax unified
 202              	 .thumb
 203              	 .thumb_func
 204              	 .fpu softvfp
 206              	_fstat:
 207              	.LFB6:
 101:.././hal/sam3u1c/syscalls.c **** 
 102:.././hal/sam3u1c/syscalls.c **** extern int _fstat(int file, struct stat *st)
 103:.././hal/sam3u1c/syscalls.c **** {
 208              	 .loc 1 103 1
 209              	 .cfi_startproc
 210              	 
 211              	 
 212              	 
 213 0000 80B4     	 push {r7}
 214              	.LCFI18:
 215              	 .cfi_def_cfa_offset 4
 216              	 .cfi_offset 7,-4
 217 0002 83B0     	 sub sp,sp,#12
 218              	.LCFI19:
 219              	 .cfi_def_cfa_offset 16
 220 0004 00AF     	 add r7,sp,#0
 221              	.LCFI20:
 222              	 .cfi_def_cfa_register 7
 223 0006 7860     	 str r0,[r7,#4]
 224 0008 3960     	 str r1,[r7]
 104:.././hal/sam3u1c/syscalls.c **** 	st->st_mode = S_IFCHR;
 225              	 .loc 1 104 14
 226 000a 3B68     	 ldr r3,[r7]
 227 000c 4FF40052 	 mov r2,#8192
 228 0010 5A60     	 str r2,[r3,#4]
 105:.././hal/sam3u1c/syscalls.c **** 
 106:.././hal/sam3u1c/syscalls.c **** 	return 0;
 229              	 .loc 1 106 9
 230 0012 0023     	 movs r3,#0
 107:.././hal/sam3u1c/syscalls.c **** }
 231              	 .loc 1 107 1
 232 0014 1846     	 mov r0,r3
 233 0016 0C37     	 adds r7,r7,#12
 234              	.LCFI21:
 235              	 .cfi_def_cfa_offset 4
 236 0018 BD46     	 mov sp,r7
 237              	.LCFI22:
 238              	 .cfi_def_cfa_register 13
 239              	 
 240 001a 80BC     	 pop {r7}
 241              	.LCFI23:
 242              	 .cfi_restore 7
 243              	 .cfi_def_cfa_offset 0
 244 001c 7047     	 bx lr
 245              	 .cfi_endproc
 246              	.LFE6:
 248              	 .section .text._isatty,"ax",%progbits
 249              	 .align 1
 250              	 .global _isatty
 251              	 .syntax unified
 252              	 .thumb
 253              	 .thumb_func
 254              	 .fpu softvfp
 256              	_isatty:
 257              	.LFB7:
 108:.././hal/sam3u1c/syscalls.c **** 
 109:.././hal/sam3u1c/syscalls.c **** extern int _isatty(int file)
 110:.././hal/sam3u1c/syscalls.c **** {
 258              	 .loc 1 110 1
 259              	 .cfi_startproc
 260              	 
 261              	 
 262              	 
 263 0000 80B4     	 push {r7}
 264              	.LCFI24:
 265              	 .cfi_def_cfa_offset 4
 266              	 .cfi_offset 7,-4
 267 0002 83B0     	 sub sp,sp,#12
 268              	.LCFI25:
 269              	 .cfi_def_cfa_offset 16
 270 0004 00AF     	 add r7,sp,#0
 271              	.LCFI26:
 272              	 .cfi_def_cfa_register 7
 273 0006 7860     	 str r0,[r7,#4]
 111:.././hal/sam3u1c/syscalls.c **** 	return 1;
 274              	 .loc 1 111 9
 275 0008 0123     	 movs r3,#1
 112:.././hal/sam3u1c/syscalls.c **** }
 276              	 .loc 1 112 1
 277 000a 1846     	 mov r0,r3
 278 000c 0C37     	 adds r7,r7,#12
 279              	.LCFI27:
 280              	 .cfi_def_cfa_offset 4
 281 000e BD46     	 mov sp,r7
 282              	.LCFI28:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 0010 80BC     	 pop {r7}
 286              	.LCFI29:
 287              	 .cfi_restore 7
 288              	 .cfi_def_cfa_offset 0
 289 0012 7047     	 bx lr
 290              	 .cfi_endproc
 291              	.LFE7:
 293              	 .section .text._lseek,"ax",%progbits
 294              	 .align 1
 295              	 .global _lseek
 296              	 .syntax unified
 297              	 .thumb
 298              	 .thumb_func
 299              	 .fpu softvfp
 301              	_lseek:
 302              	.LFB8:
 113:.././hal/sam3u1c/syscalls.c **** 
 114:.././hal/sam3u1c/syscalls.c **** extern int _lseek(int file, int ptr, int dir)
 115:.././hal/sam3u1c/syscalls.c **** {
 303              	 .loc 1 115 1
 304              	 .cfi_startproc
 305              	 
 306              	 
 307              	 
 308 0000 80B4     	 push {r7}
 309              	.LCFI30:
 310              	 .cfi_def_cfa_offset 4
 311              	 .cfi_offset 7,-4
 312 0002 85B0     	 sub sp,sp,#20
 313              	.LCFI31:
 314              	 .cfi_def_cfa_offset 24
 315 0004 00AF     	 add r7,sp,#0
 316              	.LCFI32:
 317              	 .cfi_def_cfa_register 7
 318 0006 F860     	 str r0,[r7,#12]
 319 0008 B960     	 str r1,[r7,#8]
 320 000a 7A60     	 str r2,[r7,#4]
 116:.././hal/sam3u1c/syscalls.c **** 	return 0;
 321              	 .loc 1 116 9
 322 000c 0023     	 movs r3,#0
 117:.././hal/sam3u1c/syscalls.c **** }
 323              	 .loc 1 117 1
 324 000e 1846     	 mov r0,r3
 325 0010 1437     	 adds r7,r7,#20
 326              	.LCFI33:
 327              	 .cfi_def_cfa_offset 4
 328 0012 BD46     	 mov sp,r7
 329              	.LCFI34:
 330              	 .cfi_def_cfa_register 13
 331              	 
 332 0014 80BC     	 pop {r7}
 333              	.LCFI35:
 334              	 .cfi_restore 7
 335              	 .cfi_def_cfa_offset 0
 336 0016 7047     	 bx lr
 337              	 .cfi_endproc
 338              	.LFE8:
 340              	 .section .rodata
 341              	 .align 2
 342              	.LC0:
 343 0000 45786974 	 .ascii "Exiting with status %d.\012\000"
 343      696E6720 
 343      77697468 
 343      20737461 
 343      74757320 
 344              	 .section .text._exit,"ax",%progbits
 345              	 .align 1
 346              	 .global _exit
 347              	 .syntax unified
 348              	 .thumb
 349              	 .thumb_func
 350              	 .fpu softvfp
 352              	_exit:
 353              	.LFB9:
 118:.././hal/sam3u1c/syscalls.c **** 
 119:.././hal/sam3u1c/syscalls.c **** extern void _exit(int status)
 120:.././hal/sam3u1c/syscalls.c **** {
 354              	 .loc 1 120 1
 355              	 .cfi_startproc
 356              	 
 357              	 
 358 0000 80B5     	 push {r7,lr}
 359              	.LCFI36:
 360              	 .cfi_def_cfa_offset 8
 361              	 .cfi_offset 7,-8
 362              	 .cfi_offset 14,-4
 363 0002 82B0     	 sub sp,sp,#8
 364              	.LCFI37:
 365              	 .cfi_def_cfa_offset 16
 366 0004 00AF     	 add r7,sp,#0
 367              	.LCFI38:
 368              	 .cfi_def_cfa_register 7
 369 0006 7860     	 str r0,[r7,#4]
 121:.././hal/sam3u1c/syscalls.c **** 	printf("Exiting with status %d.\n", status);
 370              	 .loc 1 121 2
 371 0008 7968     	 ldr r1,[r7,#4]
 372 000a 0248     	 ldr r0,.L19
 373 000c 024B     	 ldr r3,.L19+4
 374 000e 9847     	 blx r3
 375              	.LVL0:
 376              	.L18:
 122:.././hal/sam3u1c/syscalls.c **** 
 123:.././hal/sam3u1c/syscalls.c **** 	for (;;);
 377              	 .loc 1 123 2 discriminator 1
 378 0010 FEE7     	 b .L18
 379              	.L20:
 380 0012 00BF     	 .align 2
 381              	.L19:
 382 0014 00000000 	 .word .LC0
 383 0018 00000000 	 .word iprintf
 384              	 .cfi_endproc
 385              	.LFE9:
 387              	 .section .text._kill,"ax",%progbits
 388              	 .align 1
 389              	 .global _kill
 390              	 .syntax unified
 391              	 .thumb
 392              	 .thumb_func
 393              	 .fpu softvfp
 395              	_kill:
 396              	.LFB10:
 124:.././hal/sam3u1c/syscalls.c **** }
 125:.././hal/sam3u1c/syscalls.c **** 
 126:.././hal/sam3u1c/syscalls.c **** extern void _kill(int pid, int sig)
 127:.././hal/sam3u1c/syscalls.c **** {
 397              	 .loc 1 127 1
 398              	 .cfi_startproc
 399              	 
 400              	 
 401              	 
 402 0000 80B4     	 push {r7}
 403              	.LCFI39:
 404              	 .cfi_def_cfa_offset 4
 405              	 .cfi_offset 7,-4
 406 0002 83B0     	 sub sp,sp,#12
 407              	.LCFI40:
 408              	 .cfi_def_cfa_offset 16
 409 0004 00AF     	 add r7,sp,#0
 410              	.LCFI41:
 411              	 .cfi_def_cfa_register 7
 412 0006 7860     	 str r0,[r7,#4]
 413 0008 3960     	 str r1,[r7]
 128:.././hal/sam3u1c/syscalls.c **** 	return;
 414              	 .loc 1 128 2
 415 000a 00BF     	 nop
 129:.././hal/sam3u1c/syscalls.c **** }
 416              	 .loc 1 129 1
 417 000c 0C37     	 adds r7,r7,#12
 418              	.LCFI42:
 419              	 .cfi_def_cfa_offset 4
 420 000e BD46     	 mov sp,r7
 421              	.LCFI43:
 422              	 .cfi_def_cfa_register 13
 423              	 
 424 0010 80BC     	 pop {r7}
 425              	.LCFI44:
 426              	 .cfi_restore 7
 427              	 .cfi_def_cfa_offset 0
 428 0012 7047     	 bx lr
 429              	 .cfi_endproc
 430              	.LFE10:
 432              	 .section .text._getpid,"ax",%progbits
 433              	 .align 1
 434              	 .global _getpid
 435              	 .syntax unified
 436              	 .thumb
 437              	 .thumb_func
 438              	 .fpu softvfp
 440              	_getpid:
 441              	.LFB11:
 130:.././hal/sam3u1c/syscalls.c **** 
 131:.././hal/sam3u1c/syscalls.c **** extern int _getpid(void)
 132:.././hal/sam3u1c/syscalls.c **** {
 442              	 .loc 1 132 1
 443              	 .cfi_startproc
 444              	 
 445              	 
 446              	 
 447 0000 80B4     	 push {r7}
 448              	.LCFI45:
 449              	 .cfi_def_cfa_offset 4
 450              	 .cfi_offset 7,-4
 451 0002 00AF     	 add r7,sp,#0
 452              	.LCFI46:
 453              	 .cfi_def_cfa_register 7
 133:.././hal/sam3u1c/syscalls.c **** 	return -1;
 454              	 .loc 1 133 9
 455 0004 4FF0FF33 	 mov r3,#-1
 134:.././hal/sam3u1c/syscalls.c **** }
 456              	 .loc 1 134 1
 457 0008 1846     	 mov r0,r3
 458 000a BD46     	 mov sp,r7
 459              	.LCFI47:
 460              	 .cfi_def_cfa_register 13
 461              	 
 462 000c 80BC     	 pop {r7}
 463              	.LCFI48:
 464              	 .cfi_restore 7
 465              	 .cfi_def_cfa_offset 0
 466 000e 7047     	 bx lr
 467              	 .cfi_endproc
 468              	.LFE11:
 470              	 .section .bss.heap.5362,"aw",%nobits
 471              	 .align 2
 474              	heap.5362:
 475 0000 00000000 	 .space 4
 476              	 .text
 477              	.Letext0:
 478              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 479              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 480              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 481              	 .file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 482              	 .file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 483              	 .file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_timeval.h"
 484              	 .file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_timespec.h"
 485              	 .file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\types.h"
 486              	 .file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\time.h"
 487              	 .file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\stat.h"
 488              	 .file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\stdio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
    {standard input}:16     .text._sbrk:00000000 $t
    {standard input}:24     .text._sbrk:00000000 _sbrk
    {standard input}:101    .text._sbrk:0000004c $d
    {standard input}:474    .bss.heap.5362:00000000 heap.5362
    {standard input}:108    .text.link:00000000 $t
    {standard input}:115    .text.link:00000000 link
    {standard input}:154    .text._close:00000000 $t
    {standard input}:161    .text._close:00000000 _close
    {standard input}:199    .text._fstat:00000000 $t
    {standard input}:206    .text._fstat:00000000 _fstat
    {standard input}:249    .text._isatty:00000000 $t
    {standard input}:256    .text._isatty:00000000 _isatty
    {standard input}:294    .text._lseek:00000000 $t
    {standard input}:301    .text._lseek:00000000 _lseek
    {standard input}:341    .rodata:00000000 $d
    {standard input}:345    .text._exit:00000000 $t
    {standard input}:352    .text._exit:00000000 _exit
    {standard input}:382    .text._exit:00000014 $d
    {standard input}:388    .text._kill:00000000 $t
    {standard input}:395    .text._kill:00000000 _kill
    {standard input}:433    .text._getpid:00000000 $t
    {standard input}:440    .text._getpid:00000000 _getpid
    {standard input}:471    .bss.heap.5362:00000000 $d
                           .group:00000000 wm4.0.2cd8a2cb7ff4c48cec7eeec776a1dd8c
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.newlib.h.18.1c9fedb6b3cd797cff253cc0fd593ef2
                           .group:00000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:00000000 wm4.features.h.22.026edb2397769f4ae13f35900dbdb560
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.2bf373aedffd8b393ccd11dc057e8547
                           .group:00000000 wm4.stddef.h.39.c161261b198ee3a963897077fd6fa59f
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.time.h.8.db4619001f026d0b4874c029fef0e91f
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:00000000 wm4.time.h.25.0e6a0fdbc9955f5707ed54246ed2e089
                           .group:00000000 wm4.time.h.162.85256a1e684b58f061361067da714e0e
                           .group:00000000 wm4.stat.h.54.5a9b823658423102e7a8de4ed089eedc

UNDEFINED SYMBOLS
__ram_end__
_end
iprintf
