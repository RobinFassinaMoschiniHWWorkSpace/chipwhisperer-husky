   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "chipid.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .section .text.chipid_read,"ax",%progbits
  27              	 .align 1
  28              	 .global chipid_read
  29              	 .arch armv7-m
  30              	 .syntax unified
  31              	 .thumb
  32              	 .thumb_func
  33              	 .fpu softvfp
  35              	chipid_read:
  36              	.LFB69:
  37              	 .file 1 ".././hal/sam3u1c/chipid.c"
   1:.././hal/sam3u1c/chipid.c **** /**
   2:.././hal/sam3u1c/chipid.c ****  * \file
   3:.././hal/sam3u1c/chipid.c ****  *
   4:.././hal/sam3u1c/chipid.c ****  * \brief Chip Identifier (CHIPID) driver for SAM.
   5:.././hal/sam3u1c/chipid.c ****  *
   6:.././hal/sam3u1c/chipid.c ****  * Copyright (c) 2011-2013 Atmel Corporation. All rights reserved.
   7:.././hal/sam3u1c/chipid.c ****  *
   8:.././hal/sam3u1c/chipid.c ****  * \asf_license_start
   9:.././hal/sam3u1c/chipid.c ****  *
  10:.././hal/sam3u1c/chipid.c ****  * \page License
  11:.././hal/sam3u1c/chipid.c ****  *
  12:.././hal/sam3u1c/chipid.c ****  * Redistribution and use in source and binary forms, with or without
  13:.././hal/sam3u1c/chipid.c ****  * modification, are permitted provided that the following conditions are met:
  14:.././hal/sam3u1c/chipid.c ****  *
  15:.././hal/sam3u1c/chipid.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:.././hal/sam3u1c/chipid.c ****  *    this list of conditions and the following disclaimer.
  17:.././hal/sam3u1c/chipid.c ****  *
  18:.././hal/sam3u1c/chipid.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/sam3u1c/chipid.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:.././hal/sam3u1c/chipid.c ****  *    and/or other materials provided with the distribution.
  21:.././hal/sam3u1c/chipid.c ****  *
  22:.././hal/sam3u1c/chipid.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:.././hal/sam3u1c/chipid.c ****  *    from this software without specific prior written permission.
  24:.././hal/sam3u1c/chipid.c ****  *
  25:.././hal/sam3u1c/chipid.c ****  * 4. This software may only be redistributed and used in connection with an
  26:.././hal/sam3u1c/chipid.c ****  *    Atmel microcontroller product.
  27:.././hal/sam3u1c/chipid.c ****  *
  28:.././hal/sam3u1c/chipid.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:.././hal/sam3u1c/chipid.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:.././hal/sam3u1c/chipid.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:.././hal/sam3u1c/chipid.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:.././hal/sam3u1c/chipid.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/sam3u1c/chipid.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:.././hal/sam3u1c/chipid.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:.././hal/sam3u1c/chipid.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:.././hal/sam3u1c/chipid.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:.././hal/sam3u1c/chipid.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:.././hal/sam3u1c/chipid.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:.././hal/sam3u1c/chipid.c ****  *
  40:.././hal/sam3u1c/chipid.c ****  * \asf_license_stop
  41:.././hal/sam3u1c/chipid.c ****  *
  42:.././hal/sam3u1c/chipid.c ****  */
  43:.././hal/sam3u1c/chipid.c **** 
  44:.././hal/sam3u1c/chipid.c **** #include "chipid.h"
  45:.././hal/sam3u1c/chipid.c **** 
  46:.././hal/sam3u1c/chipid.c **** /// @cond 0
  47:.././hal/sam3u1c/chipid.c **** /**INDENT-OFF**/
  48:.././hal/sam3u1c/chipid.c **** #ifdef __cplusplus
  49:.././hal/sam3u1c/chipid.c **** extern "C" {
  50:.././hal/sam3u1c/chipid.c **** #endif
  51:.././hal/sam3u1c/chipid.c **** /**INDENT-ON**/
  52:.././hal/sam3u1c/chipid.c **** /// @endcond
  53:.././hal/sam3u1c/chipid.c **** 
  54:.././hal/sam3u1c/chipid.c **** /**
  55:.././hal/sam3u1c/chipid.c ****  * \defgroup sam_drivers_chipid_group Chip Identifier (CHIPID)
  56:.././hal/sam3u1c/chipid.c ****  *
  57:.././hal/sam3u1c/chipid.c ****  * \par Purpose
  58:.././hal/sam3u1c/chipid.c ****  *
  59:.././hal/sam3u1c/chipid.c ****  * Driver for the Chip Identifier. This driver provides access to the main 
  60:.././hal/sam3u1c/chipid.c ****  * features of the CHIPID.
  61:.././hal/sam3u1c/chipid.c ****  *
  62:.././hal/sam3u1c/chipid.c ****  * \par Usage
  63:.././hal/sam3u1c/chipid.c ****  *
  64:.././hal/sam3u1c/chipid.c ****  * -# Read whole Chip ID information to a struct using \ref chipid_read().
  65:.././hal/sam3u1c/chipid.c ****  *    The read data is defined using \ref chipid_data_t.
  66:.././hal/sam3u1c/chipid.c ****  * -# Read Chip ID fields using following functions:
  67:.././hal/sam3u1c/chipid.c ****  *    - Device version: \ref chipid_read_version();
  68:.././hal/sam3u1c/chipid.c ****  *    - Embedded processor: \ref chipid_read_processor();
  69:.././hal/sam3u1c/chipid.c ****  *    - Non volatile program memory size: \ref chipid_read_sramsize();
  70:.././hal/sam3u1c/chipid.c ****  *    - Second non volatile program memory size: \ref chipid_read_nvpm2size();
  71:.././hal/sam3u1c/chipid.c ****  *    - Internal SRAM size: \ref chipid_read_sramsize();
  72:.././hal/sam3u1c/chipid.c ****  *    - Architecture Identifier: \ref chipid_read_arch();
  73:.././hal/sam3u1c/chipid.c ****  *    - Non volatile program memory type: \ref chipid_read_nvpmtype();
  74:.././hal/sam3u1c/chipid.c ****  *    - Extension flag: \ref chipid_read_extchipid().
  75:.././hal/sam3u1c/chipid.c ****  *
  76:.././hal/sam3u1c/chipid.c ****  * \section dependencies Dependencies
  77:.././hal/sam3u1c/chipid.c ****  * This driver does not depend on other modules.
  78:.././hal/sam3u1c/chipid.c ****  *
  79:.././hal/sam3u1c/chipid.c ****  * @{
  80:.././hal/sam3u1c/chipid.c ****  */
  81:.././hal/sam3u1c/chipid.c **** 
  82:.././hal/sam3u1c/chipid.c **** /**
  83:.././hal/sam3u1c/chipid.c ****  * \brief Get chip identifier information.
  84:.././hal/sam3u1c/chipid.c ****  *
  85:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
  86:.././hal/sam3u1c/chipid.c ****  * \param p_chipid_data Pointer to a data structure to store chip information.
  87:.././hal/sam3u1c/chipid.c ****  *
  88:.././hal/sam3u1c/chipid.c ****  * \return 0 on success.
  89:.././hal/sam3u1c/chipid.c ****  */
  90:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read(Chipid *p_chipid, chipid_data_t *p_chipid_data)
  91:.././hal/sam3u1c/chipid.c **** {
  38              	 .loc 1 91 1
  39              	 .cfi_startproc
  40              	 
  41              	 
  42              	 
  43 0000 80B4     	 push {r7}
  44              	.LCFI0:
  45              	 .cfi_def_cfa_offset 4
  46              	 .cfi_offset 7,-4
  47 0002 83B0     	 sub sp,sp,#12
  48              	.LCFI1:
  49              	 .cfi_def_cfa_offset 16
  50 0004 00AF     	 add r7,sp,#0
  51              	.LCFI2:
  52              	 .cfi_def_cfa_register 7
  53 0006 7860     	 str r0,[r7,#4]
  54 0008 3960     	 str r1,[r7]
  92:.././hal/sam3u1c/chipid.c **** 	if (NULL == p_chipid_data) {
  55              	 .loc 1 92 5
  56 000a 3B68     	 ldr r3,[r7]
  57 000c 002B     	 cmp r3,#0
  58 000e 02D1     	 bne .L2
  93:.././hal/sam3u1c/chipid.c **** 		return 0xFFFFFFFF;
  59              	 .loc 1 93 10
  60 0010 4FF0FF33 	 mov r3,#-1
  61 0014 3CE0     	 b .L3
  62              	.L2:
  94:.././hal/sam3u1c/chipid.c **** 	}
  95:.././hal/sam3u1c/chipid.c **** 	
  96:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_version =
  97:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_VERSION_Msk) >>
  63              	 .loc 1 97 12
  64 0016 7B68     	 ldr r3,[r7,#4]
  65 0018 1B68     	 ldr r3,[r3]
  66              	 .loc 1 97 53
  67 001a 03F01F02 	 and r2,r3,#31
  96:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_VERSION_Msk) >>
  68              	 .loc 1 96 28
  69 001e 3B68     	 ldr r3,[r7]
  70 0020 1A60     	 str r2,[r3]
  98:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_VERSION_Pos;
  99:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_eproc =
 100:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_EPROC_Msk) >>
  71              	 .loc 1 100 12
  72 0022 7B68     	 ldr r3,[r7,#4]
  73 0024 1B68     	 ldr r3,[r3]
  74              	 .loc 1 100 51
  75 0026 5B09     	 lsrs r3,r3,#5
  76 0028 03F00702 	 and r2,r3,#7
  99:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_EPROC_Msk) >>
  77              	 .loc 1 99 26
  78 002c 3B68     	 ldr r3,[r7]
  79 002e 5A60     	 str r2,[r3,#4]
 101:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_EPROC_Pos;
 102:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_nvpsiz =
 103:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ_Msk) >>
  80              	 .loc 1 103 12
  81 0030 7B68     	 ldr r3,[r7,#4]
  82 0032 1B68     	 ldr r3,[r3]
  83              	 .loc 1 103 52
  84 0034 1B0A     	 lsrs r3,r3,#8
  85 0036 03F00F02 	 and r2,r3,#15
 102:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ_Msk) >>
  86              	 .loc 1 102 27
  87 003a 3B68     	 ldr r3,[r7]
  88 003c 9A60     	 str r2,[r3,#8]
 104:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_NVPSIZ_Pos;
 105:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_nvpsiz2 =
 106:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ2_Pos) >>
  89              	 .loc 1 106 12
  90 003e 7B68     	 ldr r3,[r7,#4]
  91 0040 1B68     	 ldr r3,[r3]
 105:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ2_Pos) >>
  92              	 .loc 1 105 28
  93 0042 3B68     	 ldr r3,[r7]
  94 0044 0022     	 movs r2,#0
  95 0046 DA60     	 str r2,[r3,#12]
 107:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_NVPSIZ2_Pos;
 108:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_sramsiz =
 109:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_SRAMSIZ_Msk) >>
  96              	 .loc 1 109 12
  97 0048 7B68     	 ldr r3,[r7,#4]
  98 004a 1B68     	 ldr r3,[r3]
  99              	 .loc 1 109 53
 100 004c 1B0C     	 lsrs r3,r3,#16
 101 004e 03F00F02 	 and r2,r3,#15
 108:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_SRAMSIZ_Msk) >>
 102              	 .loc 1 108 28
 103 0052 3B68     	 ldr r3,[r7]
 104 0054 1A61     	 str r2,[r3,#16]
 110:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_SRAMSIZ_Pos;
 111:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_arch =
 112:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_ARCH_Msk) >>
 105              	 .loc 1 112 12
 106 0056 7B68     	 ldr r3,[r7,#4]
 107 0058 1B68     	 ldr r3,[r3]
 108              	 .loc 1 112 50
 109 005a 1B0D     	 lsrs r3,r3,#20
 110 005c DAB2     	 uxtb r2,r3
 111:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_ARCH_Msk) >>
 111              	 .loc 1 111 25
 112 005e 3B68     	 ldr r3,[r7]
 113 0060 5A61     	 str r2,[r3,#20]
 113:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_ARCH_Pos;
 114:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_nvptyp =
 115:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPTYP_Msk) >>
 114              	 .loc 1 115 12
 115 0062 7B68     	 ldr r3,[r7,#4]
 116 0064 1B68     	 ldr r3,[r3]
 117              	 .loc 1 115 52
 118 0066 1B0F     	 lsrs r3,r3,#28
 119 0068 03F00702 	 and r2,r3,#7
 114:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPTYP_Msk) >>
 120              	 .loc 1 114 27
 121 006c 3B68     	 ldr r3,[r7]
 122 006e 9A61     	 str r2,[r3,#24]
 116:.././hal/sam3u1c/chipid.c **** 			CHIPID_CIDR_NVPTYP_Pos;
 117:.././hal/sam3u1c/chipid.c **** 	p_chipid_data->ul_extflag =
 118:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_EXT) >> 31;
 123              	 .loc 1 118 12
 124 0070 7B68     	 ldr r3,[r7,#4]
 125 0072 1B68     	 ldr r3,[r3]
 126              	 .loc 1 118 45
 127 0074 DB0F     	 lsrs r3,r3,#31
 128 0076 03F00102 	 and r2,r3,#1
 117:.././hal/sam3u1c/chipid.c **** 		(p_chipid->CHIPID_CIDR & CHIPID_CIDR_EXT) >> 31;
 129              	 .loc 1 117 28
 130 007a 3B68     	 ldr r3,[r7]
 131 007c DA61     	 str r2,[r3,#28]
 119:.././hal/sam3u1c/chipid.c **** 		
 120:.././hal/sam3u1c/chipid.c **** 	if (p_chipid_data->ul_extflag) {
 132              	 .loc 1 120 19
 133 007e 3B68     	 ldr r3,[r7]
 134 0080 DB69     	 ldr r3,[r3,#28]
 135              	 .loc 1 120 5
 136 0082 002B     	 cmp r3,#0
 137 0084 03D0     	 beq .L4
 121:.././hal/sam3u1c/chipid.c **** 		p_chipid_data->ul_extid =
 122:.././hal/sam3u1c/chipid.c **** 			p_chipid->CHIPID_EXID & CHIPID_EXID_EXID_Msk;
 138              	 .loc 1 122 12
 139 0086 7B68     	 ldr r3,[r7,#4]
 140 0088 5A68     	 ldr r2,[r3,#4]
 121:.././hal/sam3u1c/chipid.c **** 		p_chipid_data->ul_extid =
 141              	 .loc 1 121 27
 142 008a 3B68     	 ldr r3,[r7]
 143 008c 1A62     	 str r2,[r3,#32]
 144              	.L4:
 123:.././hal/sam3u1c/chipid.c **** 	}
 124:.././hal/sam3u1c/chipid.c **** 	return 0;
 145              	 .loc 1 124 9
 146 008e 0023     	 movs r3,#0
 147              	.L3:
 125:.././hal/sam3u1c/chipid.c **** }
 148              	 .loc 1 125 1
 149 0090 1846     	 mov r0,r3
 150 0092 0C37     	 adds r7,r7,#12
 151              	.LCFI3:
 152              	 .cfi_def_cfa_offset 4
 153 0094 BD46     	 mov sp,r7
 154              	.LCFI4:
 155              	 .cfi_def_cfa_register 13
 156              	 
 157 0096 80BC     	 pop {r7}
 158              	.LCFI5:
 159              	 .cfi_restore 7
 160              	 .cfi_def_cfa_offset 0
 161 0098 7047     	 bx lr
 162              	 .cfi_endproc
 163              	.LFE69:
 165              	 .section .text.chipid_read_version,"ax",%progbits
 166              	 .align 1
 167              	 .global chipid_read_version
 168              	 .syntax unified
 169              	 .thumb
 170              	 .thumb_func
 171              	 .fpu softvfp
 173              	chipid_read_version:
 174              	.LFB70:
 126:.././hal/sam3u1c/chipid.c **** 
 127:.././hal/sam3u1c/chipid.c **** /**
 128:.././hal/sam3u1c/chipid.c ****  * \brief Get the revision number of the silicon.
 129:.././hal/sam3u1c/chipid.c ****  *
 130:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 131:.././hal/sam3u1c/chipid.c ****  *
 132:.././hal/sam3u1c/chipid.c ****  * \return Revision number of the silicon.
 133:.././hal/sam3u1c/chipid.c ****  */
 134:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_version(Chipid *p_chipid)
 135:.././hal/sam3u1c/chipid.c **** {
 175              	 .loc 1 135 1
 176              	 .cfi_startproc
 177              	 
 178              	 
 179              	 
 180 0000 80B4     	 push {r7}
 181              	.LCFI6:
 182              	 .cfi_def_cfa_offset 4
 183              	 .cfi_offset 7,-4
 184 0002 83B0     	 sub sp,sp,#12
 185              	.LCFI7:
 186              	 .cfi_def_cfa_offset 16
 187 0004 00AF     	 add r7,sp,#0
 188              	.LCFI8:
 189              	 .cfi_def_cfa_register 7
 190 0006 7860     	 str r0,[r7,#4]
 136:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_VERSION_Msk;
 191              	 .loc 1 136 17
 192 0008 7B68     	 ldr r3,[r7,#4]
 193 000a 1B68     	 ldr r3,[r3]
 194              	 .loc 1 136 31
 195 000c 03F01F03 	 and r3,r3,#31
 137:.././hal/sam3u1c/chipid.c **** }
 196              	 .loc 1 137 1
 197 0010 1846     	 mov r0,r3
 198 0012 0C37     	 adds r7,r7,#12
 199              	.LCFI9:
 200              	 .cfi_def_cfa_offset 4
 201 0014 BD46     	 mov sp,r7
 202              	.LCFI10:
 203              	 .cfi_def_cfa_register 13
 204              	 
 205 0016 80BC     	 pop {r7}
 206              	.LCFI11:
 207              	 .cfi_restore 7
 208              	 .cfi_def_cfa_offset 0
 209 0018 7047     	 bx lr
 210              	 .cfi_endproc
 211              	.LFE70:
 213              	 .section .text.chipid_read_processor,"ax",%progbits
 214              	 .align 1
 215              	 .global chipid_read_processor
 216              	 .syntax unified
 217              	 .thumb
 218              	 .thumb_func
 219              	 .fpu softvfp
 221              	chipid_read_processor:
 222              	.LFB71:
 138:.././hal/sam3u1c/chipid.c **** 
 139:.././hal/sam3u1c/chipid.c **** /**
 140:.././hal/sam3u1c/chipid.c ****  * \brief Get the version of the embedded ARM processor.
 141:.././hal/sam3u1c/chipid.c ****  *
 142:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 143:.././hal/sam3u1c/chipid.c ****  *
 144:.././hal/sam3u1c/chipid.c ****  * \return Version of the embedded ARM processor.
 145:.././hal/sam3u1c/chipid.c ****  */
 146:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_processor(Chipid *p_chipid)
 147:.././hal/sam3u1c/chipid.c **** {
 223              	 .loc 1 147 1
 224              	 .cfi_startproc
 225              	 
 226              	 
 227              	 
 228 0000 80B4     	 push {r7}
 229              	.LCFI12:
 230              	 .cfi_def_cfa_offset 4
 231              	 .cfi_offset 7,-4
 232 0002 83B0     	 sub sp,sp,#12
 233              	.LCFI13:
 234              	 .cfi_def_cfa_offset 16
 235 0004 00AF     	 add r7,sp,#0
 236              	.LCFI14:
 237              	 .cfi_def_cfa_register 7
 238 0006 7860     	 str r0,[r7,#4]
 148:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_EPROC_Msk;
 239              	 .loc 1 148 17
 240 0008 7B68     	 ldr r3,[r7,#4]
 241 000a 1B68     	 ldr r3,[r3]
 242              	 .loc 1 148 31
 243 000c 03F0E003 	 and r3,r3,#224
 149:.././hal/sam3u1c/chipid.c **** }
 244              	 .loc 1 149 1
 245 0010 1846     	 mov r0,r3
 246 0012 0C37     	 adds r7,r7,#12
 247              	.LCFI15:
 248              	 .cfi_def_cfa_offset 4
 249 0014 BD46     	 mov sp,r7
 250              	.LCFI16:
 251              	 .cfi_def_cfa_register 13
 252              	 
 253 0016 80BC     	 pop {r7}
 254              	.LCFI17:
 255              	 .cfi_restore 7
 256              	 .cfi_def_cfa_offset 0
 257 0018 7047     	 bx lr
 258              	 .cfi_endproc
 259              	.LFE71:
 261              	 .section .text.chipid_read_arch,"ax",%progbits
 262              	 .align 1
 263              	 .global chipid_read_arch
 264              	 .syntax unified
 265              	 .thumb
 266              	 .thumb_func
 267              	 .fpu softvfp
 269              	chipid_read_arch:
 270              	.LFB72:
 150:.././hal/sam3u1c/chipid.c **** 
 151:.././hal/sam3u1c/chipid.c **** /**
 152:.././hal/sam3u1c/chipid.c ****  * \brief Get the identifier of the architecture.
 153:.././hal/sam3u1c/chipid.c ****  *
 154:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 155:.././hal/sam3u1c/chipid.c ****  *
 156:.././hal/sam3u1c/chipid.c ****  * \return Identifier of the architecture.
 157:.././hal/sam3u1c/chipid.c ****  */
 158:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_arch(Chipid *p_chipid)
 159:.././hal/sam3u1c/chipid.c **** {
 271              	 .loc 1 159 1
 272              	 .cfi_startproc
 273              	 
 274              	 
 275              	 
 276 0000 80B4     	 push {r7}
 277              	.LCFI18:
 278              	 .cfi_def_cfa_offset 4
 279              	 .cfi_offset 7,-4
 280 0002 83B0     	 sub sp,sp,#12
 281              	.LCFI19:
 282              	 .cfi_def_cfa_offset 16
 283 0004 00AF     	 add r7,sp,#0
 284              	.LCFI20:
 285              	 .cfi_def_cfa_register 7
 286 0006 7860     	 str r0,[r7,#4]
 160:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_ARCH_Msk;
 287              	 .loc 1 160 17
 288 0008 7B68     	 ldr r3,[r7,#4]
 289 000a 1B68     	 ldr r3,[r3]
 290              	 .loc 1 160 31
 291 000c 03F07F63 	 and r3,r3,#267386880
 161:.././hal/sam3u1c/chipid.c **** }
 292              	 .loc 1 161 1
 293 0010 1846     	 mov r0,r3
 294 0012 0C37     	 adds r7,r7,#12
 295              	.LCFI21:
 296              	 .cfi_def_cfa_offset 4
 297 0014 BD46     	 mov sp,r7
 298              	.LCFI22:
 299              	 .cfi_def_cfa_register 13
 300              	 
 301 0016 80BC     	 pop {r7}
 302              	.LCFI23:
 303              	 .cfi_restore 7
 304              	 .cfi_def_cfa_offset 0
 305 0018 7047     	 bx lr
 306              	 .cfi_endproc
 307              	.LFE72:
 309              	 .section .text.chipid_read_sramsize,"ax",%progbits
 310              	 .align 1
 311              	 .global chipid_read_sramsize
 312              	 .syntax unified
 313              	 .thumb
 314              	 .thumb_func
 315              	 .fpu softvfp
 317              	chipid_read_sramsize:
 318              	.LFB73:
 162:.././hal/sam3u1c/chipid.c **** 
 163:.././hal/sam3u1c/chipid.c **** /**
 164:.././hal/sam3u1c/chipid.c ****  * \brief Get the size of the embedded SRAM.
 165:.././hal/sam3u1c/chipid.c ****  *
 166:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 167:.././hal/sam3u1c/chipid.c ****  *
 168:.././hal/sam3u1c/chipid.c ****  * \return SRAM size value.
 169:.././hal/sam3u1c/chipid.c ****  */
 170:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_sramsize(Chipid *p_chipid)
 171:.././hal/sam3u1c/chipid.c **** {
 319              	 .loc 1 171 1
 320              	 .cfi_startproc
 321              	 
 322              	 
 323              	 
 324 0000 80B4     	 push {r7}
 325              	.LCFI24:
 326              	 .cfi_def_cfa_offset 4
 327              	 .cfi_offset 7,-4
 328 0002 83B0     	 sub sp,sp,#12
 329              	.LCFI25:
 330              	 .cfi_def_cfa_offset 16
 331 0004 00AF     	 add r7,sp,#0
 332              	.LCFI26:
 333              	 .cfi_def_cfa_register 7
 334 0006 7860     	 str r0,[r7,#4]
 172:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_SRAMSIZ_Msk;
 335              	 .loc 1 172 17
 336 0008 7B68     	 ldr r3,[r7,#4]
 337 000a 1B68     	 ldr r3,[r3]
 338              	 .loc 1 172 31
 339 000c 03F47023 	 and r3,r3,#983040
 173:.././hal/sam3u1c/chipid.c **** }
 340              	 .loc 1 173 1
 341 0010 1846     	 mov r0,r3
 342 0012 0C37     	 adds r7,r7,#12
 343              	.LCFI27:
 344              	 .cfi_def_cfa_offset 4
 345 0014 BD46     	 mov sp,r7
 346              	.LCFI28:
 347              	 .cfi_def_cfa_register 13
 348              	 
 349 0016 80BC     	 pop {r7}
 350              	.LCFI29:
 351              	 .cfi_restore 7
 352              	 .cfi_def_cfa_offset 0
 353 0018 7047     	 bx lr
 354              	 .cfi_endproc
 355              	.LFE73:
 357              	 .section .text.chipid_read_nvpmsize,"ax",%progbits
 358              	 .align 1
 359              	 .global chipid_read_nvpmsize
 360              	 .syntax unified
 361              	 .thumb
 362              	 .thumb_func
 363              	 .fpu softvfp
 365              	chipid_read_nvpmsize:
 366              	.LFB74:
 174:.././hal/sam3u1c/chipid.c **** 
 175:.././hal/sam3u1c/chipid.c **** /**
 176:.././hal/sam3u1c/chipid.c ****  * \brief Get the size of the first non-volatile program memory.
 177:.././hal/sam3u1c/chipid.c ****  *
 178:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 179:.././hal/sam3u1c/chipid.c ****  *
 180:.././hal/sam3u1c/chipid.c ****  * \return Memory size value.
 181:.././hal/sam3u1c/chipid.c ****  */
 182:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_nvpmsize(Chipid *p_chipid)
 183:.././hal/sam3u1c/chipid.c **** {
 367              	 .loc 1 183 1
 368              	 .cfi_startproc
 369              	 
 370              	 
 371              	 
 372 0000 80B4     	 push {r7}
 373              	.LCFI30:
 374              	 .cfi_def_cfa_offset 4
 375              	 .cfi_offset 7,-4
 376 0002 83B0     	 sub sp,sp,#12
 377              	.LCFI31:
 378              	 .cfi_def_cfa_offset 16
 379 0004 00AF     	 add r7,sp,#0
 380              	.LCFI32:
 381              	 .cfi_def_cfa_register 7
 382 0006 7860     	 str r0,[r7,#4]
 184:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ_Msk;
 383              	 .loc 1 184 17
 384 0008 7B68     	 ldr r3,[r7,#4]
 385 000a 1B68     	 ldr r3,[r3]
 386              	 .loc 1 184 31
 387 000c 03F47063 	 and r3,r3,#3840
 185:.././hal/sam3u1c/chipid.c **** }
 388              	 .loc 1 185 1
 389 0010 1846     	 mov r0,r3
 390 0012 0C37     	 adds r7,r7,#12
 391              	.LCFI33:
 392              	 .cfi_def_cfa_offset 4
 393 0014 BD46     	 mov sp,r7
 394              	.LCFI34:
 395              	 .cfi_def_cfa_register 13
 396              	 
 397 0016 80BC     	 pop {r7}
 398              	.LCFI35:
 399              	 .cfi_restore 7
 400              	 .cfi_def_cfa_offset 0
 401 0018 7047     	 bx lr
 402              	 .cfi_endproc
 403              	.LFE74:
 405              	 .section .text.chipid_read_nvpm2size,"ax",%progbits
 406              	 .align 1
 407              	 .global chipid_read_nvpm2size
 408              	 .syntax unified
 409              	 .thumb
 410              	 .thumb_func
 411              	 .fpu softvfp
 413              	chipid_read_nvpm2size:
 414              	.LFB75:
 186:.././hal/sam3u1c/chipid.c **** 
 187:.././hal/sam3u1c/chipid.c **** /**
 188:.././hal/sam3u1c/chipid.c ****  * \brief Get the size of the second non-volatile program memory.
 189:.././hal/sam3u1c/chipid.c ****  *
 190:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 191:.././hal/sam3u1c/chipid.c ****  *
 192:.././hal/sam3u1c/chipid.c ****  * \return Memory size value.
 193:.././hal/sam3u1c/chipid.c ****  */
 194:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_nvpm2size(Chipid *p_chipid)
 195:.././hal/sam3u1c/chipid.c **** {
 415              	 .loc 1 195 1
 416              	 .cfi_startproc
 417              	 
 418              	 
 419              	 
 420 0000 80B4     	 push {r7}
 421              	.LCFI36:
 422              	 .cfi_def_cfa_offset 4
 423              	 .cfi_offset 7,-4
 424 0002 83B0     	 sub sp,sp,#12
 425              	.LCFI37:
 426              	 .cfi_def_cfa_offset 16
 427 0004 00AF     	 add r7,sp,#0
 428              	.LCFI38:
 429              	 .cfi_def_cfa_register 7
 430 0006 7860     	 str r0,[r7,#4]
 196:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPSIZ2_Pos;
 431              	 .loc 1 196 17
 432 0008 7B68     	 ldr r3,[r7,#4]
 433 000a 1B68     	 ldr r3,[r3]
 434              	 .loc 1 196 31
 435 000c 03F00C03 	 and r3,r3,#12
 197:.././hal/sam3u1c/chipid.c **** }
 436              	 .loc 1 197 1
 437 0010 1846     	 mov r0,r3
 438 0012 0C37     	 adds r7,r7,#12
 439              	.LCFI39:
 440              	 .cfi_def_cfa_offset 4
 441 0014 BD46     	 mov sp,r7
 442              	.LCFI40:
 443              	 .cfi_def_cfa_register 13
 444              	 
 445 0016 80BC     	 pop {r7}
 446              	.LCFI41:
 447              	 .cfi_restore 7
 448              	 .cfi_def_cfa_offset 0
 449 0018 7047     	 bx lr
 450              	 .cfi_endproc
 451              	.LFE75:
 453              	 .section .text.chipid_read_nvpmtype,"ax",%progbits
 454              	 .align 1
 455              	 .global chipid_read_nvpmtype
 456              	 .syntax unified
 457              	 .thumb
 458              	 .thumb_func
 459              	 .fpu softvfp
 461              	chipid_read_nvpmtype:
 462              	.LFB76:
 198:.././hal/sam3u1c/chipid.c **** 
 199:.././hal/sam3u1c/chipid.c **** /**
 200:.././hal/sam3u1c/chipid.c ****  * \brief Get the type of non-volatile program memory.
 201:.././hal/sam3u1c/chipid.c ****  *
 202:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 203:.././hal/sam3u1c/chipid.c ****  *
 204:.././hal/sam3u1c/chipid.c ****  * \return Memory type.
 205:.././hal/sam3u1c/chipid.c ****  */
 206:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_nvpmtype(Chipid *p_chipid)
 207:.././hal/sam3u1c/chipid.c **** {
 463              	 .loc 1 207 1
 464              	 .cfi_startproc
 465              	 
 466              	 
 467              	 
 468 0000 80B4     	 push {r7}
 469              	.LCFI42:
 470              	 .cfi_def_cfa_offset 4
 471              	 .cfi_offset 7,-4
 472 0002 83B0     	 sub sp,sp,#12
 473              	.LCFI43:
 474              	 .cfi_def_cfa_offset 16
 475 0004 00AF     	 add r7,sp,#0
 476              	.LCFI44:
 477              	 .cfi_def_cfa_register 7
 478 0006 7860     	 str r0,[r7,#4]
 208:.././hal/sam3u1c/chipid.c **** 	return p_chipid->CHIPID_CIDR & CHIPID_CIDR_NVPTYP_Msk;
 479              	 .loc 1 208 17
 480 0008 7B68     	 ldr r3,[r7,#4]
 481 000a 1B68     	 ldr r3,[r3]
 482              	 .loc 1 208 31
 483 000c 03F0E043 	 and r3,r3,#1879048192
 209:.././hal/sam3u1c/chipid.c **** }
 484              	 .loc 1 209 1
 485 0010 1846     	 mov r0,r3
 486 0012 0C37     	 adds r7,r7,#12
 487              	.LCFI45:
 488              	 .cfi_def_cfa_offset 4
 489 0014 BD46     	 mov sp,r7
 490              	.LCFI46:
 491              	 .cfi_def_cfa_register 13
 492              	 
 493 0016 80BC     	 pop {r7}
 494              	.LCFI47:
 495              	 .cfi_restore 7
 496              	 .cfi_def_cfa_offset 0
 497 0018 7047     	 bx lr
 498              	 .cfi_endproc
 499              	.LFE76:
 501              	 .section .text.chipid_read_extchipid,"ax",%progbits
 502              	 .align 1
 503              	 .global chipid_read_extchipid
 504              	 .syntax unified
 505              	 .thumb
 506              	 .thumb_func
 507              	 .fpu softvfp
 509              	chipid_read_extchipid:
 510              	.LFB77:
 210:.././hal/sam3u1c/chipid.c **** 
 211:.././hal/sam3u1c/chipid.c **** /**
 212:.././hal/sam3u1c/chipid.c ****  * \brief Get the chip extension identifier.
 213:.././hal/sam3u1c/chipid.c ****  *
 214:.././hal/sam3u1c/chipid.c ****  * \param p_chipid Pointer to a CHIPID instance.
 215:.././hal/sam3u1c/chipid.c ****  *
 216:.././hal/sam3u1c/chipid.c ****  * \return Chip extension identifier if available, else 0.
 217:.././hal/sam3u1c/chipid.c ****  */
 218:.././hal/sam3u1c/chipid.c **** uint32_t chipid_read_extchipid(Chipid *p_chipid)
 219:.././hal/sam3u1c/chipid.c **** {
 511              	 .loc 1 219 1
 512              	 .cfi_startproc
 513              	 
 514              	 
 515              	 
 516 0000 80B4     	 push {r7}
 517              	.LCFI48:
 518              	 .cfi_def_cfa_offset 4
 519              	 .cfi_offset 7,-4
 520 0002 83B0     	 sub sp,sp,#12
 521              	.LCFI49:
 522              	 .cfi_def_cfa_offset 16
 523 0004 00AF     	 add r7,sp,#0
 524              	.LCFI50:
 525              	 .cfi_def_cfa_register 7
 526 0006 7860     	 str r0,[r7,#4]
 220:.././hal/sam3u1c/chipid.c **** 	if ((p_chipid->CHIPID_CIDR) & CHIPID_CIDR_EXT)
 527              	 .loc 1 220 15
 528 0008 7B68     	 ldr r3,[r7,#4]
 529 000a 1B68     	 ldr r3,[r3]
 530              	 .loc 1 220 5
 531 000c 002B     	 cmp r3,#0
 532 000e 02DA     	 bge .L20
 221:.././hal/sam3u1c/chipid.c **** 		return p_chipid->CHIPID_EXID & CHIPID_EXID_EXID_Msk;
 533              	 .loc 1 221 32
 534 0010 7B68     	 ldr r3,[r7,#4]
 535 0012 5B68     	 ldr r3,[r3,#4]
 536 0014 00E0     	 b .L21
 537              	.L20:
 222:.././hal/sam3u1c/chipid.c **** 	else
 223:.././hal/sam3u1c/chipid.c **** 		return 0;
 538              	 .loc 1 223 10
 539 0016 0023     	 movs r3,#0
 540              	.L21:
 224:.././hal/sam3u1c/chipid.c **** }
 541              	 .loc 1 224 1
 542 0018 1846     	 mov r0,r3
 543 001a 0C37     	 adds r7,r7,#12
 544              	.LCFI51:
 545              	 .cfi_def_cfa_offset 4
 546 001c BD46     	 mov sp,r7
 547              	.LCFI52:
 548              	 .cfi_def_cfa_register 13
 549              	 
 550 001e 80BC     	 pop {r7}
 551              	.LCFI53:
 552              	 .cfi_restore 7
 553              	 .cfi_def_cfa_offset 0
 554 0020 7047     	 bx lr
 555              	 .cfi_endproc
 556              	.LFE77:
 558              	 .text
 559              	.Letext0:
 560              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 561              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 562              	 .file 4 ".././hal/sam3u1c/inc/sam3u1c.h"
 563              	 .file 5 ".././hal/sam3u1c/inc/core_cm3.h"
 564              	 .file 6 ".././hal/sam3u1c/inc/system_sam3u.h"
 565              	 .file 7 ".././hal/sam3u1c/inc/component/component_chipid.h"
 566              	 .file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 567              	 .file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 568              	 .file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 569              	 .file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 570              	 .file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\stdlib.h"
 571              	 .file 13 ".././hal/sam3u1c/inc/interrupt/interrupt_sam_nvic.h"
 572              	 .file 14 ".././hal/sam3u1c/inc/chipid.h"
DEFINED SYMBOLS
                            *ABS*:00000000 chipid.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:27     .text.chipid_read:00000000 $t
    {standard input}:35     .text.chipid_read:00000000 chipid_read
    {standard input}:166    .text.chipid_read_version:00000000 $t
    {standard input}:173    .text.chipid_read_version:00000000 chipid_read_version
    {standard input}:214    .text.chipid_read_processor:00000000 $t
    {standard input}:221    .text.chipid_read_processor:00000000 chipid_read_processor
    {standard input}:262    .text.chipid_read_arch:00000000 $t
    {standard input}:269    .text.chipid_read_arch:00000000 chipid_read_arch
    {standard input}:310    .text.chipid_read_sramsize:00000000 $t
    {standard input}:317    .text.chipid_read_sramsize:00000000 chipid_read_sramsize
    {standard input}:358    .text.chipid_read_nvpmsize:00000000 $t
    {standard input}:365    .text.chipid_read_nvpmsize:00000000 chipid_read_nvpmsize
    {standard input}:406    .text.chipid_read_nvpm2size:00000000 $t
    {standard input}:413    .text.chipid_read_nvpm2size:00000000 chipid_read_nvpm2size
    {standard input}:454    .text.chipid_read_nvpmtype:00000000 $t
    {standard input}:461    .text.chipid_read_nvpmtype:00000000 chipid_read_nvpmtype
    {standard input}:502    .text.chipid_read_extchipid:00000000 $t
    {standard input}:509    .text.chipid_read_extchipid:00000000 chipid_read_extchipid
                           .group:00000000 wm4.0.2cd8a2cb7ff4c48cec7eeec776a1dd8c
                           .group:00000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:00000000 wm4.parts.h.45.afc900689b2c82332e69d798acedc875
                           .group:00000000 wm4.tpaste.h.45.af3ee36765243b162c88f7f944858426
                           .group:00000000 wm4.stringz.h.45.c4f6cbe0005e6c1d2139bc6c0e4f4722
                           .group:00000000 wm4.mrepeat.h.59.c5daaed201a4340b0edf435161d0b77f
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.sam3u1c.h.220.c0b54b5a55bc87791749ae17b1487779
                           .group:00000000 wm4.core_cm3.h.32.5c59c312db585622d253fdb887b0afb1
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm3.h.127.b561404f2a159dc517b409bc244d16c1
                           .group:00000000 wm4.component_adc.h.43.d49887380d07d1cd08cc4e37b3485e31
                           .group:00000000 wm4.component_adc12b.h.43.eadc09f1073923fb91f1f393cc397dcb
                           .group:00000000 wm4.component_chipid.h.43.15825c969b1cc9eeea3d9416499874c8
                           .group:00000000 wm4.component_dmac.h.43.cc8187b1cf6bfeadc91b14fdd28b9e8b
                           .group:00000000 wm4.component_efc.h.43.cb1b3997ad9ea3733ad421ecbfd02fdd
                           .group:00000000 wm4.component_gpbr.h.43.49b7e13894fe38b29f2243bbbe530227
                           .group:00000000 wm4.component_hsmci.h.43.7b7194c92e1480c038f3342f7cec440a
                           .group:00000000 wm4.component_matrix.h.43.1d209838fb75b4827119203a357141ee
                           .group:00000000 wm4.component_pdc.h.43.19528a5f9ef5a348234ea06f89069c55
                           .group:00000000 wm4.component_pio.h.43.163b46c3683ccf92e8de39a5554f50e8
                           .group:00000000 wm4.component_pmc.h.43.ee4f030602866917aeed15fb2b948de8
                           .group:00000000 wm4.component_pwm.h.43.ab6262a86f0aea354b43fe6dce7e7eb3
                           .group:00000000 wm4.component_rstc.h.43.4eb59dc2ddcf585fabf251d0c329fcdd
                           .group:00000000 wm4.component_rtc.h.43.ba8ccafc772b11d562a3cceab8b95072
                           .group:00000000 wm4.component_rtt.h.43.3206ef8f067e5e747c3c4c7e719c1429
                           .group:00000000 wm4.component_smc.h.43.907847915f1a5616734199d7e34424fa
                           .group:00000000 wm4.component_spi.h.43.a2a09df64ab768c0a32be55285c74ded
                           .group:00000000 wm4.component_ssc.h.43.d7c78f990c13fc511671b64798c4bcd0
                           .group:00000000 wm4.component_supc.h.43.7d17f8e5ed3ba815e84381152735062f
                           .group:00000000 wm4.component_tc.h.43.662eac8137408372b4f9d26c0b5f8621
                           .group:00000000 wm4.component_twi.h.43.eda18625bd851fc4605861f5b3240c0b
                           .group:00000000 wm4.component_uart.h.43.2d92735c5ea05c973661e1ba99a2f37c
                           .group:00000000 wm4.component_udphs.h.43.21cecd26a4e44df0013037f29f2716e4
                           .group:00000000 wm4.component_usart.h.43.7872f8f455adb38b67b9fbdb15657fbe
                           .group:00000000 wm4.component_wdt.h.43.e31e10a5469b62c3660b49ab250f802f
                           .group:00000000 wm4.instance_hsmci.h.43.e233236cc7fd5a805539a7ecc0e1d8d2
                           .group:00000000 wm4.instance_ssc.h.43.c0cfabc3b9f3bb60745c913111bce965
                           .group:00000000 wm4.instance_spi.h.43.570ae46af19e4179d9796872b9a8b9bc
                           .group:00000000 wm4.instance_tc0.h.43.049b3a82387d2961594190609e896a29
                           .group:00000000 wm4.instance_twi0.h.43.255dc0afa9e0d45eaea0a935eca2f103
                           .group:00000000 wm4.instance_twi1.h.43.652d1d407893f259f2a817544ba662c2
                           .group:00000000 wm4.instance_pwm.h.43.88294acec3ca56d6fc521038521a1567
                           .group:00000000 wm4.instance_usart0.h.43.e26677512aee3dd3bedd71d394410000
                           .group:00000000 wm4.instance_usart1.h.43.1ba97dbc6610d9fb3132b9d845688201
                           .group:00000000 wm4.instance_usart2.h.43.baa1bf30b3c5acdee90c4a1f50fe9ebd
                           .group:00000000 wm4.instance_udphs.h.43.b1ce94181e0d1f22877b81c6040a4363
                           .group:00000000 wm4.instance_adc12b.h.43.d73ed59e867ccdfdb846d9ef32a50c0c
                           .group:00000000 wm4.instance_adc.h.43.2b7611a00afeb4c555339b844d4b8456
                           .group:00000000 wm4.instance_dmac.h.43.ee72691d84889c8f285932be4a075ddb
                           .group:00000000 wm4.instance_smc.h.43.29610fd00979caaaa65821ad40e9da06
                           .group:00000000 wm4.instance_matrix.h.43.01ee474141594385374c41a29daeeefe
                           .group:00000000 wm4.instance_pmc.h.43.37430325ed7b8b24c3fe640c41c29ef5
                           .group:00000000 wm4.instance_uart.h.43.bd378395ba022bc8670c82ebe656fbbd
                           .group:00000000 wm4.instance_chipid.h.43.29cd8fb600f149aa58830fcc78fe36f9
                           .group:00000000 wm4.instance_efc0.h.43.6b85dba20721a7e9fc4350e78d193680
                           .group:00000000 wm4.instance_efc1.h.43.2c5e94fc4d2742678318d73450d08d57
                           .group:00000000 wm4.instance_pioa.h.43.eeb46cc3bfe01a1f28e67aa3a6851ed8
                           .group:00000000 wm4.instance_piob.h.43.652ce26b6c37ac56f9ed42a9216d9aca
                           .group:00000000 wm4.instance_rstc.h.43.c5de224364a50a85f237c0b864aa4c8f
                           .group:00000000 wm4.instance_supc.h.43.a5f1a5ca08f468ccf34ed3653e045f1f
                           .group:00000000 wm4.instance_rtt.h.43.8622b192c23334996132415e3095df7f
                           .group:00000000 wm4.instance_wdt.h.43.407ea53e133eacf09acf2c7fcb6b7524
                           .group:00000000 wm4.instance_rtc.h.43.f70b77f9180401c8d9d920cb4a1cd166
                           .group:00000000 wm4.instance_gpbr.h.43.9066cb40d557f6755101368854272348
                           .group:00000000 wm4.sam3u1c.h.312.ae446d8e874d34ca3df78faf190c678f
                           .group:00000000 wm4.pio_sam3u1c.h.43.18b24f16e1710ff2a400d88fe33c5107
                           .group:00000000 wm4.sam3u1c.h.442.cd4bbc3af493e98bc9b60c2905132ed0
                           .group:00000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:00000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.cdefs.h.49.2bf373aedffd8b393ccd11dc057e8547
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.compiler.h.88.0e6ad966134fa012ce9a34053d3f48aa
                           .group:00000000 wm4.interrupt_sam_nvic.h.45.4876da6c127868305d66389e87e0876f
                           .group:00000000 wm4.compiler.h.425.66dd29c210af3287ed85ec3553a3e6b1

NO UNDEFINED SYMBOLS
