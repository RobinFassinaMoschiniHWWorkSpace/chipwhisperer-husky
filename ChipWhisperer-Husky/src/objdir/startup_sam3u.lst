   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "startup_sam3u.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .global exception_table
  27              	 .section .vectors,"aw"
  28              	 .align 2
  31              	exception_table:
  32 0000 00000000 	 .word _estack
  33 0004 00000000 	 .word Reset_Handler
  34 0008 00000000 	 .word NMI_Handler
  35 000c 00000000 	 .word HardFault_Handler
  36 0010 00000000 	 .word MemManage_Handler
  37 0014 00000000 	 .word BusFault_Handler
  38 0018 00000000 	 .word UsageFault_Handler
  39 001c 00000000 	 .word 0
  40 0020 00000000 	 .word 0
  41 0024 00000000 	 .word 0
  42 0028 00000000 	 .word 0
  43 002c 00000000 	 .word SVC_Handler
  44 0030 00000000 	 .word DebugMon_Handler
  45 0034 00000000 	 .word 0
  46 0038 00000000 	 .word PendSV_Handler
  47 003c 00000000 	 .word SysTick_Handler
  48 0040 00000000 	 .word SUPC_Handler
  49 0044 00000000 	 .word RSTC_Handler
  50 0048 00000000 	 .word RTC_Handler
  51 004c 00000000 	 .word RTT_Handler
  52 0050 00000000 	 .word WDT_Handler
  53 0054 00000000 	 .word PMC_Handler
  54 0058 00000000 	 .word EFC0_Handler
  55 005c 00000000 	 .word EFC1_Handler
  56 0060 00000000 	 .word UART_Handler
  57 0064 00000000 	 .word SMC_Handler
  58 0068 00000000 	 .word PIOA_Handler
  59 006c 00000000 	 .word PIOB_Handler
  60 0070 00000000 	 .word Dummy_Handler
  61 0074 00000000 	 .word USART0_Handler
  62 0078 00000000 	 .word USART1_Handler
  63 007c 00000000 	 .word USART2_Handler
  64 0080 00000000 	 .word Dummy_Handler
  65 0084 00000000 	 .word HSMCI_Handler
  66 0088 00000000 	 .word TWI0_Handler
  67 008c 00000000 	 .word TWI1_Handler
  68 0090 00000000 	 .word SPI_Handler
  69 0094 00000000 	 .word SSC_Handler
  70 0098 00000000 	 .word TC0_Handler
  71 009c 00000000 	 .word TC1_Handler
  72 00a0 00000000 	 .word TC2_Handler
  73 00a4 00000000 	 .word PWM_Handler
  74 00a8 00000000 	 .word ADC12B_Handler
  75 00ac 00000000 	 .word ADC_Handler
  76 00b0 00000000 	 .word DMAC_Handler
  77 00b4 00000000 	 .word UDPHS_Handler
  78 00b8 00000000 	 .word Dummy_Handler
  79              	 .section .text.Reset_Handler,"ax",%progbits
  80              	 .align 1
  81              	 .global Reset_Handler
  82              	 .arch armv7-m
  83              	 .syntax unified
  84              	 .thumb
  85              	 .thumb_func
  86              	 .fpu softvfp
  88              	Reset_Handler:
  89              	.LFB69:
  90              	 .file 1 ".././hal/sam3u1c/startup_sam3u.c"
   1:.././hal/sam3u1c/startup_sam3u.c **** /**
   2:.././hal/sam3u1c/startup_sam3u.c ****  * \file
   3:.././hal/sam3u1c/startup_sam3u.c ****  *
   4:.././hal/sam3u1c/startup_sam3u.c ****  * \brief Startup file for SAM3U.
   5:.././hal/sam3u1c/startup_sam3u.c ****  *
   6:.././hal/sam3u1c/startup_sam3u.c ****  * Copyright (c) 2011-2012 Atmel Corporation. All rights reserved.
   7:.././hal/sam3u1c/startup_sam3u.c ****  *
   8:.././hal/sam3u1c/startup_sam3u.c ****  * \asf_license_start
   9:.././hal/sam3u1c/startup_sam3u.c ****  *
  10:.././hal/sam3u1c/startup_sam3u.c ****  * \page License
  11:.././hal/sam3u1c/startup_sam3u.c ****  *
  12:.././hal/sam3u1c/startup_sam3u.c ****  * Redistribution and use in source and binary forms, with or without
  13:.././hal/sam3u1c/startup_sam3u.c ****  * modification, are permitted provided that the following conditions are met:
  14:.././hal/sam3u1c/startup_sam3u.c ****  *
  15:.././hal/sam3u1c/startup_sam3u.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:.././hal/sam3u1c/startup_sam3u.c ****  *    this list of conditions and the following disclaimer.
  17:.././hal/sam3u1c/startup_sam3u.c ****  *
  18:.././hal/sam3u1c/startup_sam3u.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/sam3u1c/startup_sam3u.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:.././hal/sam3u1c/startup_sam3u.c ****  *    and/or other materials provided with the distribution.
  21:.././hal/sam3u1c/startup_sam3u.c ****  *
  22:.././hal/sam3u1c/startup_sam3u.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:.././hal/sam3u1c/startup_sam3u.c ****  *    from this software without specific prior written permission.
  24:.././hal/sam3u1c/startup_sam3u.c ****  *
  25:.././hal/sam3u1c/startup_sam3u.c ****  * 4. This software may only be redistributed and used in connection with an
  26:.././hal/sam3u1c/startup_sam3u.c ****  *    Atmel microcontroller product.
  27:.././hal/sam3u1c/startup_sam3u.c ****  *
  28:.././hal/sam3u1c/startup_sam3u.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:.././hal/sam3u1c/startup_sam3u.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:.././hal/sam3u1c/startup_sam3u.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:.././hal/sam3u1c/startup_sam3u.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:.././hal/sam3u1c/startup_sam3u.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/sam3u1c/startup_sam3u.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:.././hal/sam3u1c/startup_sam3u.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:.././hal/sam3u1c/startup_sam3u.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:.././hal/sam3u1c/startup_sam3u.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:.././hal/sam3u1c/startup_sam3u.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:.././hal/sam3u1c/startup_sam3u.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:.././hal/sam3u1c/startup_sam3u.c ****  *
  40:.././hal/sam3u1c/startup_sam3u.c ****  * \asf_license_stop
  41:.././hal/sam3u1c/startup_sam3u.c ****  *
  42:.././hal/sam3u1c/startup_sam3u.c ****  */
  43:.././hal/sam3u1c/startup_sam3u.c **** 
  44:.././hal/sam3u1c/startup_sam3u.c **** #include "exceptions.h"
  45:.././hal/sam3u1c/startup_sam3u.c **** #include "sam3u.h"
  46:.././hal/sam3u1c/startup_sam3u.c **** #include "system_sam3u.h"
  47:.././hal/sam3u1c/startup_sam3u.c **** 
  48:.././hal/sam3u1c/startup_sam3u.c **** /* Initialize segments */
  49:.././hal/sam3u1c/startup_sam3u.c **** extern uint32_t _sfixed;
  50:.././hal/sam3u1c/startup_sam3u.c **** extern uint32_t _efixed;
  51:.././hal/sam3u1c/startup_sam3u.c **** extern uint32_t _etext;
  52:.././hal/sam3u1c/startup_sam3u.c **** extern uint32_t _srelocate;
  53:.././hal/sam3u1c/startup_sam3u.c **** extern uint32_t _erelocate;
  54:.././hal/sam3u1c/startup_sam3u.c **** extern uint32_t _szero;
  55:.././hal/sam3u1c/startup_sam3u.c **** extern uint32_t _ezero;
  56:.././hal/sam3u1c/startup_sam3u.c **** extern uint32_t _sstack;
  57:.././hal/sam3u1c/startup_sam3u.c **** extern uint32_t _estack;
  58:.././hal/sam3u1c/startup_sam3u.c **** 
  59:.././hal/sam3u1c/startup_sam3u.c **** /** \cond DOXYGEN_SHOULD_SKIP_THIS */
  60:.././hal/sam3u1c/startup_sam3u.c **** int main(void);
  61:.././hal/sam3u1c/startup_sam3u.c **** /** \endcond */
  62:.././hal/sam3u1c/startup_sam3u.c **** 
  63:.././hal/sam3u1c/startup_sam3u.c **** void __libc_init_array(void);
  64:.././hal/sam3u1c/startup_sam3u.c **** 
  65:.././hal/sam3u1c/startup_sam3u.c **** /* Exception Table */
  66:.././hal/sam3u1c/startup_sam3u.c **** __attribute__ ((section(".vectors")))
  67:.././hal/sam3u1c/startup_sam3u.c **** IntFunc exception_table[] = {
  68:.././hal/sam3u1c/startup_sam3u.c **** 
  69:.././hal/sam3u1c/startup_sam3u.c **** 	/* Configure Initial Stack Pointer, using linker-generated symbols */
  70:.././hal/sam3u1c/startup_sam3u.c **** 	(IntFunc) (&_estack),
  71:.././hal/sam3u1c/startup_sam3u.c **** 	Reset_Handler,
  72:.././hal/sam3u1c/startup_sam3u.c **** 	NMI_Handler,
  73:.././hal/sam3u1c/startup_sam3u.c **** 	HardFault_Handler,
  74:.././hal/sam3u1c/startup_sam3u.c **** 	MemManage_Handler,
  75:.././hal/sam3u1c/startup_sam3u.c **** 	BusFault_Handler,
  76:.././hal/sam3u1c/startup_sam3u.c **** 	UsageFault_Handler,
  77:.././hal/sam3u1c/startup_sam3u.c **** 	0, 0, 0, 0,	          /*  Reserved */
  78:.././hal/sam3u1c/startup_sam3u.c **** 	SVC_Handler,
  79:.././hal/sam3u1c/startup_sam3u.c **** 	DebugMon_Handler,
  80:.././hal/sam3u1c/startup_sam3u.c **** 	0,	                  /*  Reserved */
  81:.././hal/sam3u1c/startup_sam3u.c **** 	PendSV_Handler,
  82:.././hal/sam3u1c/startup_sam3u.c **** 	SysTick_Handler,
  83:.././hal/sam3u1c/startup_sam3u.c **** 
  84:.././hal/sam3u1c/startup_sam3u.c **** 	/* Configurable interrupts */
  85:.././hal/sam3u1c/startup_sam3u.c **** 	SUPC_Handler,      /* 0  Supply Controller */
  86:.././hal/sam3u1c/startup_sam3u.c **** 	RSTC_Handler,      /* 1  Reset Controller */
  87:.././hal/sam3u1c/startup_sam3u.c **** 	RTC_Handler,       /* 2  Real Time Clock */
  88:.././hal/sam3u1c/startup_sam3u.c **** 	RTT_Handler,       /* 3  Real Time Timer */
  89:.././hal/sam3u1c/startup_sam3u.c **** 	WDT_Handler,       /* 4  Watchdog Timer */
  90:.././hal/sam3u1c/startup_sam3u.c **** 	PMC_Handler,       /* 5  PMC */
  91:.././hal/sam3u1c/startup_sam3u.c **** 	EFC0_Handler,      /* 6  EEFC 0 */
  92:.././hal/sam3u1c/startup_sam3u.c **** 	EFC1_Handler,      /* 7  EEFC 1 */
  93:.././hal/sam3u1c/startup_sam3u.c **** 	UART_Handler,      /* 8  UART0 */
  94:.././hal/sam3u1c/startup_sam3u.c **** 	SMC_Handler,       /* 9  SMC */
  95:.././hal/sam3u1c/startup_sam3u.c **** 	PIOA_Handler,      /* 10 Parallel IO Controller A */
  96:.././hal/sam3u1c/startup_sam3u.c **** 	PIOB_Handler,      /* 11 Parallel IO Controller B */
  97:.././hal/sam3u1c/startup_sam3u.c **** #ifdef ID_PIOC
  98:.././hal/sam3u1c/startup_sam3u.c **** 	PIOC_Handler,      /* 12 Parallel IO Controller C */
  99:.././hal/sam3u1c/startup_sam3u.c **** #else
 100:.././hal/sam3u1c/startup_sam3u.c **** 	Dummy_Handler,
 101:.././hal/sam3u1c/startup_sam3u.c **** #endif
 102:.././hal/sam3u1c/startup_sam3u.c **** 	USART0_Handler,    /* 13 USART 0 */
 103:.././hal/sam3u1c/startup_sam3u.c **** 	USART1_Handler,    /* 14 USART 1 */
 104:.././hal/sam3u1c/startup_sam3u.c **** 	USART2_Handler,    /* 15 USART 2 */
 105:.././hal/sam3u1c/startup_sam3u.c **** #ifdef ID_USART3
 106:.././hal/sam3u1c/startup_sam3u.c **** 	USART3_Handler,    /* 16 USART 3 */
 107:.././hal/sam3u1c/startup_sam3u.c **** #else
 108:.././hal/sam3u1c/startup_sam3u.c **** 	Dummy_Handler,
 109:.././hal/sam3u1c/startup_sam3u.c **** #endif
 110:.././hal/sam3u1c/startup_sam3u.c **** 	HSMCI_Handler,     /* 17 MCI */
 111:.././hal/sam3u1c/startup_sam3u.c **** 	TWI0_Handler,      /* 18 TWI 0 */
 112:.././hal/sam3u1c/startup_sam3u.c **** 	TWI1_Handler,      /* 19 TWI 1 */
 113:.././hal/sam3u1c/startup_sam3u.c **** 	SPI_Handler,       /* 20 SPI */
 114:.././hal/sam3u1c/startup_sam3u.c **** 	SSC_Handler,       /* 21 SSC */
 115:.././hal/sam3u1c/startup_sam3u.c **** 	TC0_Handler,       /* 22 Timer Counter 0 */
 116:.././hal/sam3u1c/startup_sam3u.c **** 	TC1_Handler,       /* 23 Timer Counter 1 */
 117:.././hal/sam3u1c/startup_sam3u.c **** 	TC2_Handler,       /* 24 Timer Counter 2 */
 118:.././hal/sam3u1c/startup_sam3u.c **** 	PWM_Handler,       /* 25 PWM */
 119:.././hal/sam3u1c/startup_sam3u.c **** 	ADC12B_Handler,    /* 26 ADC12B controller */
 120:.././hal/sam3u1c/startup_sam3u.c **** 	ADC_Handler,       /* 27 ADC controller */
 121:.././hal/sam3u1c/startup_sam3u.c **** 	DMAC_Handler,      /* 28 DMA controller */
 122:.././hal/sam3u1c/startup_sam3u.c **** 	UDPHS_Handler,     /* 29 USB High Speed Port */
 123:.././hal/sam3u1c/startup_sam3u.c **** 	Dummy_Handler      /* 30 not used */
 124:.././hal/sam3u1c/startup_sam3u.c **** };
 125:.././hal/sam3u1c/startup_sam3u.c **** 
 126:.././hal/sam3u1c/startup_sam3u.c **** /* TEMPORARY PATCH FOR SCB */
 127:.././hal/sam3u1c/startup_sam3u.c **** #define SCB_VTOR_TBLBASE_Pos               29                            /*!< SCB VTOR: TBLBASE Pos
 128:.././hal/sam3u1c/startup_sam3u.c **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos) /*!< SCB VTOR: TBLBASE Mas
 129:.././hal/sam3u1c/startup_sam3u.c **** 
 130:.././hal/sam3u1c/startup_sam3u.c **** /**
 131:.././hal/sam3u1c/startup_sam3u.c ****  * \brief This is the code that gets called on processor reset.
 132:.././hal/sam3u1c/startup_sam3u.c ****  * To initialize the device, and call the main() routine.
 133:.././hal/sam3u1c/startup_sam3u.c ****  */
 134:.././hal/sam3u1c/startup_sam3u.c **** void Reset_Handler(void)
 135:.././hal/sam3u1c/startup_sam3u.c **** {
  91              	 .loc 1 135 1
  92              	 .cfi_startproc
  93              	 
  94              	 
  95 0000 80B5     	 push {r7,lr}
  96              	.LCFI0:
  97              	 .cfi_def_cfa_offset 8
  98              	 .cfi_offset 7,-8
  99              	 .cfi_offset 14,-4
 100 0002 82B0     	 sub sp,sp,#8
 101              	.LCFI1:
 102              	 .cfi_def_cfa_offset 16
 103 0004 00AF     	 add r7,sp,#0
 104              	.LCFI2:
 105              	 .cfi_def_cfa_register 7
 136:.././hal/sam3u1c/startup_sam3u.c **** 	uint32_t *pSrc, *pDest;
 137:.././hal/sam3u1c/startup_sam3u.c **** 
 138:.././hal/sam3u1c/startup_sam3u.c **** 	/* Initialize the relocate segment */
 139:.././hal/sam3u1c/startup_sam3u.c **** 	pSrc = &_etext;
 106              	 .loc 1 139 7
 107 0006 1E4B     	 ldr r3,.L9
 108 0008 7B60     	 str r3,[r7,#4]
 140:.././hal/sam3u1c/startup_sam3u.c **** 	pDest = &_srelocate;
 109              	 .loc 1 140 8
 110 000a 1E4B     	 ldr r3,.L9+4
 111 000c 3B60     	 str r3,[r7]
 141:.././hal/sam3u1c/startup_sam3u.c **** 
 142:.././hal/sam3u1c/startup_sam3u.c **** 	if (pSrc != pDest) {
 112              	 .loc 1 142 5
 113 000e 7A68     	 ldr r2,[r7,#4]
 114 0010 3B68     	 ldr r3,[r7]
 115 0012 9A42     	 cmp r2,r3
 116 0014 0CD0     	 beq .L2
 143:.././hal/sam3u1c/startup_sam3u.c **** 		for (; pDest < &_erelocate;) {
 117              	 .loc 1 143 3
 118 0016 07E0     	 b .L3
 119              	.L4:
 144:.././hal/sam3u1c/startup_sam3u.c **** 			*pDest++ = *pSrc++;
 120              	 .loc 1 144 20
 121 0018 7A68     	 ldr r2,[r7,#4]
 122 001a 131D     	 adds r3,r2,#4
 123 001c 7B60     	 str r3,[r7,#4]
 124              	 .loc 1 144 10
 125 001e 3B68     	 ldr r3,[r7]
 126 0020 191D     	 adds r1,r3,#4
 127 0022 3960     	 str r1,[r7]
 128              	 .loc 1 144 15
 129 0024 1268     	 ldr r2,[r2]
 130              	 .loc 1 144 13
 131 0026 1A60     	 str r2,[r3]
 132              	.L3:
 143:.././hal/sam3u1c/startup_sam3u.c **** 		for (; pDest < &_erelocate;) {
 133              	 .loc 1 143 3
 134 0028 3B68     	 ldr r3,[r7]
 135 002a 174A     	 ldr r2,.L9+8
 136 002c 9342     	 cmp r3,r2
 137 002e F3D3     	 bcc .L4
 138              	.L2:
 145:.././hal/sam3u1c/startup_sam3u.c **** 		}
 146:.././hal/sam3u1c/startup_sam3u.c **** 	}
 147:.././hal/sam3u1c/startup_sam3u.c **** 
 148:.././hal/sam3u1c/startup_sam3u.c **** 	/* Clear the zero segment */
 149:.././hal/sam3u1c/startup_sam3u.c **** 	for (pDest = &_szero; pDest < &_ezero;) {
 139              	 .loc 1 149 13
 140 0030 164B     	 ldr r3,.L9+12
 141 0032 3B60     	 str r3,[r7]
 142              	 .loc 1 149 2
 143 0034 04E0     	 b .L5
 144              	.L6:
 150:.././hal/sam3u1c/startup_sam3u.c **** 		*pDest++ = 0;
 145              	 .loc 1 150 9
 146 0036 3B68     	 ldr r3,[r7]
 147 0038 1A1D     	 adds r2,r3,#4
 148 003a 3A60     	 str r2,[r7]
 149              	 .loc 1 150 12
 150 003c 0022     	 movs r2,#0
 151 003e 1A60     	 str r2,[r3]
 152              	.L5:
 149:.././hal/sam3u1c/startup_sam3u.c **** 		*pDest++ = 0;
 153              	 .loc 1 149 2 discriminator 1
 154 0040 3B68     	 ldr r3,[r7]
 155 0042 134A     	 ldr r2,.L9+16
 156 0044 9342     	 cmp r3,r2
 157 0046 F6D3     	 bcc .L6
 151:.././hal/sam3u1c/startup_sam3u.c **** 	}
 152:.././hal/sam3u1c/startup_sam3u.c **** 
 153:.././hal/sam3u1c/startup_sam3u.c **** 	/* Set the vector table base address */
 154:.././hal/sam3u1c/startup_sam3u.c **** 	pSrc = (uint32_t *) & _sfixed;
 158              	 .loc 1 154 7
 159 0048 124B     	 ldr r3,.L9+20
 160 004a 7B60     	 str r3,[r7,#4]
 155:.././hal/sam3u1c/startup_sam3u.c **** 	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
 161              	 .loc 1 155 15
 162 004c 7B68     	 ldr r3,[r7,#4]
 163              	 .loc 1 155 5
 164 004e 124A     	 ldr r2,.L9+24
 165              	 .loc 1 155 31
 166 0050 23F06043 	 bic r3,r3,#-536870912
 167 0054 23F07F03 	 bic r3,r3,#127
 168              	 .loc 1 155 12
 169 0058 9360     	 str r3,[r2,#8]
 156:.././hal/sam3u1c/startup_sam3u.c **** 
 157:.././hal/sam3u1c/startup_sam3u.c **** 	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
 170              	 .loc 1 157 7
 171 005a 7B68     	 ldr r3,[r7,#4]
 172              	 .loc 1 157 5
 173 005c B3F1005F 	 cmp r3,#536870912
 174 0060 09D3     	 bcc .L7
 175              	 .loc 1 157 42 discriminator 1
 176 0062 7B68     	 ldr r3,[r7,#4]
 177              	 .loc 1 157 38 discriminator 1
 178 0064 0D4A     	 ldr r2,.L9+28
 179 0066 9342     	 cmp r3,r2
 180 0068 05D2     	 bcs .L7
 158:.././hal/sam3u1c/startup_sam3u.c **** 		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
 181              	 .loc 1 158 13
 182 006a 0B4B     	 ldr r3,.L9+24
 183 006c 9B68     	 ldr r3,[r3,#8]
 184 006e 0A4A     	 ldr r2,.L9+24
 185 0070 43F00053 	 orr r3,r3,#536870912
 186 0074 9360     	 str r3,[r2,#8]
 187              	.L7:
 159:.././hal/sam3u1c/startup_sam3u.c **** 	}
 160:.././hal/sam3u1c/startup_sam3u.c **** 
 161:.././hal/sam3u1c/startup_sam3u.c **** 	/* Initialize the C library */
 162:.././hal/sam3u1c/startup_sam3u.c **** 	__libc_init_array();
 188              	 .loc 1 162 2
 189 0076 0A4B     	 ldr r3,.L9+32
 190 0078 9847     	 blx r3
 191              	.LVL0:
 163:.././hal/sam3u1c/startup_sam3u.c **** 
 164:.././hal/sam3u1c/startup_sam3u.c **** 	/* Branch to main function */
 165:.././hal/sam3u1c/startup_sam3u.c **** 	main();
 192              	 .loc 1 165 2
 193 007a 0A4B     	 ldr r3,.L9+36
 194 007c 9847     	 blx r3
 195              	.LVL1:
 196              	.L8:
 166:.././hal/sam3u1c/startup_sam3u.c **** 
 167:.././hal/sam3u1c/startup_sam3u.c **** 	/* Infinite loop */
 168:.././hal/sam3u1c/startup_sam3u.c **** 	while (1);
 197              	 .loc 1 168 8 discriminator 1
 198 007e FEE7     	 b .L8
 199              	.L10:
 200              	 .align 2
 201              	.L9:
 202 0080 00000000 	 .word _etext
 203 0084 00000000 	 .word _srelocate
 204 0088 00000000 	 .word _erelocate
 205 008c 00000000 	 .word _szero
 206 0090 00000000 	 .word _ezero
 207 0094 00000000 	 .word _sfixed
 208 0098 00ED00E0 	 .word -536810240
 209 009c 00400020 	 .word 536887296
 210 00a0 00000000 	 .word __libc_init_array
 211 00a4 00000000 	 .word main
 212              	 .cfi_endproc
 213              	.LFE69:
 215              	 .text
 216              	.Letext0:
 217              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 218              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 219              	 .file 4 ".././hal/sam3u1c/inc/core_cm3.h"
 220              	 .file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 221              	 .file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 222              	 .file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 223              	 .file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 224              	 .file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\stdlib.h"
 225              	 .file 10 ".././hal/sam3u1c/inc/interrupt/interrupt_sam_nvic.h"
 226              	 .file 11 ".././hal/sam3u1c/inc/system_sam3u.h"
 227              	 .file 12 ".././hal/sam3u1c/inc/exceptions.h"
DEFINED SYMBOLS
                            *ABS*:00000000 startup_sam3u.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:31     .vectors:00000000 exception_table
    {standard input}:28     .vectors:00000000 $d
    {standard input}:88     .text.Reset_Handler:00000000 Reset_Handler
    {standard input}:80     .text.Reset_Handler:00000000 $t
    {standard input}:202    .text.Reset_Handler:00000080 $d
                           .group:00000000 wm4.0.2cd8a2cb7ff4c48cec7eeec776a1dd8c
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.sam3u1c.h.220.c0b54b5a55bc87791749ae17b1487779
                           .group:00000000 wm4.core_cm3.h.32.5c59c312db585622d253fdb887b0afb1
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm3.h.127.b561404f2a159dc517b409bc244d16c1
                           .group:00000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:00000000 wm4.parts.h.45.afc900689b2c82332e69d798acedc875
                           .group:00000000 wm4.tpaste.h.45.af3ee36765243b162c88f7f944858426
                           .group:00000000 wm4.stringz.h.45.c4f6cbe0005e6c1d2139bc6c0e4f4722
                           .group:00000000 wm4.mrepeat.h.59.c5daaed201a4340b0edf435161d0b77f
                           .group:00000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:00000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.cdefs.h.49.2bf373aedffd8b393ccd11dc057e8547
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.compiler.h.88.0e6ad966134fa012ce9a34053d3f48aa
                           .group:00000000 wm4.interrupt_sam_nvic.h.84.12b72da0cfda407ab49bd5ed390be386
                           .group:00000000 wm4.compiler.h.425.66dd29c210af3287ed85ec3553a3e6b1
                           .group:00000000 wm4.component_adc.h.43.d49887380d07d1cd08cc4e37b3485e31
                           .group:00000000 wm4.component_adc12b.h.43.eadc09f1073923fb91f1f393cc397dcb
                           .group:00000000 wm4.component_chipid.h.43.15825c969b1cc9eeea3d9416499874c8
                           .group:00000000 wm4.component_dmac.h.43.cc8187b1cf6bfeadc91b14fdd28b9e8b
                           .group:00000000 wm4.component_efc.h.43.cb1b3997ad9ea3733ad421ecbfd02fdd
                           .group:00000000 wm4.component_gpbr.h.43.49b7e13894fe38b29f2243bbbe530227
                           .group:00000000 wm4.component_hsmci.h.43.7b7194c92e1480c038f3342f7cec440a
                           .group:00000000 wm4.component_matrix.h.43.1d209838fb75b4827119203a357141ee
                           .group:00000000 wm4.component_pdc.h.43.19528a5f9ef5a348234ea06f89069c55
                           .group:00000000 wm4.component_pio.h.43.163b46c3683ccf92e8de39a5554f50e8
                           .group:00000000 wm4.component_pmc.h.43.ee4f030602866917aeed15fb2b948de8
                           .group:00000000 wm4.component_pwm.h.43.ab6262a86f0aea354b43fe6dce7e7eb3
                           .group:00000000 wm4.component_rstc.h.43.4eb59dc2ddcf585fabf251d0c329fcdd
                           .group:00000000 wm4.component_rtc.h.43.ba8ccafc772b11d562a3cceab8b95072
                           .group:00000000 wm4.component_rtt.h.43.3206ef8f067e5e747c3c4c7e719c1429
                           .group:00000000 wm4.component_smc.h.43.907847915f1a5616734199d7e34424fa
                           .group:00000000 wm4.component_spi.h.43.a2a09df64ab768c0a32be55285c74ded
                           .group:00000000 wm4.component_ssc.h.43.d7c78f990c13fc511671b64798c4bcd0
                           .group:00000000 wm4.component_supc.h.43.7d17f8e5ed3ba815e84381152735062f
                           .group:00000000 wm4.component_tc.h.43.662eac8137408372b4f9d26c0b5f8621
                           .group:00000000 wm4.component_twi.h.43.eda18625bd851fc4605861f5b3240c0b
                           .group:00000000 wm4.component_uart.h.43.2d92735c5ea05c973661e1ba99a2f37c
                           .group:00000000 wm4.component_udphs.h.43.21cecd26a4e44df0013037f29f2716e4
                           .group:00000000 wm4.component_usart.h.43.7872f8f455adb38b67b9fbdb15657fbe
                           .group:00000000 wm4.component_wdt.h.43.e31e10a5469b62c3660b49ab250f802f
                           .group:00000000 wm4.instance_hsmci.h.43.e233236cc7fd5a805539a7ecc0e1d8d2
                           .group:00000000 wm4.instance_ssc.h.43.c0cfabc3b9f3bb60745c913111bce965
                           .group:00000000 wm4.instance_spi.h.43.570ae46af19e4179d9796872b9a8b9bc
                           .group:00000000 wm4.instance_tc0.h.43.049b3a82387d2961594190609e896a29
                           .group:00000000 wm4.instance_twi0.h.43.255dc0afa9e0d45eaea0a935eca2f103
                           .group:00000000 wm4.instance_twi1.h.43.652d1d407893f259f2a817544ba662c2
                           .group:00000000 wm4.instance_pwm.h.43.88294acec3ca56d6fc521038521a1567
                           .group:00000000 wm4.instance_usart0.h.43.e26677512aee3dd3bedd71d394410000
                           .group:00000000 wm4.instance_usart1.h.43.1ba97dbc6610d9fb3132b9d845688201
                           .group:00000000 wm4.instance_usart2.h.43.baa1bf30b3c5acdee90c4a1f50fe9ebd
                           .group:00000000 wm4.instance_udphs.h.43.b1ce94181e0d1f22877b81c6040a4363
                           .group:00000000 wm4.instance_adc12b.h.43.d73ed59e867ccdfdb846d9ef32a50c0c
                           .group:00000000 wm4.instance_adc.h.43.2b7611a00afeb4c555339b844d4b8456
                           .group:00000000 wm4.instance_dmac.h.43.ee72691d84889c8f285932be4a075ddb
                           .group:00000000 wm4.instance_smc.h.43.29610fd00979caaaa65821ad40e9da06
                           .group:00000000 wm4.instance_matrix.h.43.01ee474141594385374c41a29daeeefe
                           .group:00000000 wm4.instance_pmc.h.43.37430325ed7b8b24c3fe640c41c29ef5
                           .group:00000000 wm4.instance_uart.h.43.bd378395ba022bc8670c82ebe656fbbd
                           .group:00000000 wm4.instance_chipid.h.43.29cd8fb600f149aa58830fcc78fe36f9
                           .group:00000000 wm4.instance_efc0.h.43.6b85dba20721a7e9fc4350e78d193680
                           .group:00000000 wm4.instance_efc1.h.43.2c5e94fc4d2742678318d73450d08d57
                           .group:00000000 wm4.instance_pioa.h.43.eeb46cc3bfe01a1f28e67aa3a6851ed8
                           .group:00000000 wm4.instance_piob.h.43.652ce26b6c37ac56f9ed42a9216d9aca
                           .group:00000000 wm4.instance_rstc.h.43.c5de224364a50a85f237c0b864aa4c8f
                           .group:00000000 wm4.instance_supc.h.43.a5f1a5ca08f468ccf34ed3653e045f1f
                           .group:00000000 wm4.instance_rtt.h.43.8622b192c23334996132415e3095df7f
                           .group:00000000 wm4.instance_wdt.h.43.407ea53e133eacf09acf2c7fcb6b7524
                           .group:00000000 wm4.instance_rtc.h.43.f70b77f9180401c8d9d920cb4a1cd166
                           .group:00000000 wm4.instance_gpbr.h.43.9066cb40d557f6755101368854272348
                           .group:00000000 wm4.sam3u1c.h.312.ae446d8e874d34ca3df78faf190c678f
                           .group:00000000 wm4.pio_sam3u1c.h.43.18b24f16e1710ff2a400d88fe33c5107
                           .group:00000000 wm4.sam3u1c.h.442.cd4bbc3af493e98bc9b60c2905132ed0

UNDEFINED SYMBOLS
_estack
NMI_Handler
HardFault_Handler
MemManage_Handler
BusFault_Handler
UsageFault_Handler
SVC_Handler
DebugMon_Handler
PendSV_Handler
SysTick_Handler
SUPC_Handler
RSTC_Handler
RTC_Handler
RTT_Handler
WDT_Handler
PMC_Handler
EFC0_Handler
EFC1_Handler
UART_Handler
SMC_Handler
PIOA_Handler
PIOB_Handler
Dummy_Handler
USART0_Handler
USART1_Handler
USART2_Handler
HSMCI_Handler
TWI0_Handler
TWI1_Handler
SPI_Handler
SSC_Handler
TC0_Handler
TC1_Handler
TC2_Handler
PWM_Handler
ADC12B_Handler
ADC_Handler
DMAC_Handler
UDPHS_Handler
_etext
_srelocate
_erelocate
_szero
_ezero
_sfixed
__libc_init_array
main
