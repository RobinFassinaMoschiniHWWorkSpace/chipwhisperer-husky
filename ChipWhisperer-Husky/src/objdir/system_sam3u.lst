   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "system_sam3u.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .global SystemCoreClock
  27              	 .section .data.SystemCoreClock,"aw"
  28              	 .align 2
  31              	SystemCoreClock:
  32 0000 00093D00 	 .word 4000000
  33              	 .section .ramfunc,"ax",%progbits
  34              	 .align 1
  35              	 .global SystemInit
  36              	 .arch armv7-m
  37              	 .syntax unified
  38              	 .thumb
  39              	 .thumb_func
  40              	 .fpu softvfp
  42              	SystemInit:
  43              	.LFB69:
  44              	 .file 1 ".././hal/sam3u1c/system_sam3u.c"
   1:.././hal/sam3u1c/system_sam3u.c **** /**
   2:.././hal/sam3u1c/system_sam3u.c ****  * \file
   3:.././hal/sam3u1c/system_sam3u.c ****  *
   4:.././hal/sam3u1c/system_sam3u.c ****  * \brief Provides the low-level initialization functions that called 
   5:.././hal/sam3u1c/system_sam3u.c ****  * on chip startup.
   6:.././hal/sam3u1c/system_sam3u.c ****  *
   7:.././hal/sam3u1c/system_sam3u.c ****  * Copyright (c) 2011 - 2014 Atmel Corporation. All rights reserved.
   8:.././hal/sam3u1c/system_sam3u.c ****  *
   9:.././hal/sam3u1c/system_sam3u.c ****  * \asf_license_start
  10:.././hal/sam3u1c/system_sam3u.c ****  *
  11:.././hal/sam3u1c/system_sam3u.c ****  * \page License
  12:.././hal/sam3u1c/system_sam3u.c ****  *
  13:.././hal/sam3u1c/system_sam3u.c ****  * Redistribution and use in source and binary forms, with or without
  14:.././hal/sam3u1c/system_sam3u.c ****  * modification, are permitted provided that the following conditions are met:
  15:.././hal/sam3u1c/system_sam3u.c ****  *
  16:.././hal/sam3u1c/system_sam3u.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:.././hal/sam3u1c/system_sam3u.c ****  *    this list of conditions and the following disclaimer.
  18:.././hal/sam3u1c/system_sam3u.c ****  *
  19:.././hal/sam3u1c/system_sam3u.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  20:.././hal/sam3u1c/system_sam3u.c ****  *    this list of conditions and the following disclaimer in the documentation
  21:.././hal/sam3u1c/system_sam3u.c ****  *    and/or other materials provided with the distribution.
  22:.././hal/sam3u1c/system_sam3u.c ****  *
  23:.././hal/sam3u1c/system_sam3u.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  24:.././hal/sam3u1c/system_sam3u.c ****  *    from this software without specific prior written permission.
  25:.././hal/sam3u1c/system_sam3u.c ****  *
  26:.././hal/sam3u1c/system_sam3u.c ****  * 4. This software may only be redistributed and used in connection with an
  27:.././hal/sam3u1c/system_sam3u.c ****  *    Atmel microcontroller product.
  28:.././hal/sam3u1c/system_sam3u.c ****  *
  29:.././hal/sam3u1c/system_sam3u.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  30:.././hal/sam3u1c/system_sam3u.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  31:.././hal/sam3u1c/system_sam3u.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  32:.././hal/sam3u1c/system_sam3u.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  33:.././hal/sam3u1c/system_sam3u.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:.././hal/sam3u1c/system_sam3u.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  35:.././hal/sam3u1c/system_sam3u.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  36:.././hal/sam3u1c/system_sam3u.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  37:.././hal/sam3u1c/system_sam3u.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:.././hal/sam3u1c/system_sam3u.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:.././hal/sam3u1c/system_sam3u.c ****  * POSSIBILITY OF SUCH DAMAGE.
  40:.././hal/sam3u1c/system_sam3u.c ****  *
  41:.././hal/sam3u1c/system_sam3u.c ****  * \asf_license_stop
  42:.././hal/sam3u1c/system_sam3u.c ****  *
  43:.././hal/sam3u1c/system_sam3u.c ****  */
  44:.././hal/sam3u1c/system_sam3u.c **** 
  45:.././hal/sam3u1c/system_sam3u.c **** #include "system_sam3u.h"
  46:.././hal/sam3u1c/system_sam3u.c **** #include "sam3u.h"
  47:.././hal/sam3u1c/system_sam3u.c **** 
  48:.././hal/sam3u1c/system_sam3u.c **** /* @cond 0 */
  49:.././hal/sam3u1c/system_sam3u.c **** /**INDENT-OFF**/
  50:.././hal/sam3u1c/system_sam3u.c **** #ifdef __cplusplus
  51:.././hal/sam3u1c/system_sam3u.c **** extern "C" {
  52:.././hal/sam3u1c/system_sam3u.c **** #endif
  53:.././hal/sam3u1c/system_sam3u.c **** /**INDENT-ON**/
  54:.././hal/sam3u1c/system_sam3u.c **** /* @endcond */
  55:.././hal/sam3u1c/system_sam3u.c **** 
  56:.././hal/sam3u1c/system_sam3u.c **** /* Clock settings (96MHz) */
  57:.././hal/sam3u1c/system_sam3u.c **** #define SYS_BOARD_OSCOUNT   (CKGR_MOR_MOSCXTST(0x8UL))
  58:.././hal/sam3u1c/system_sam3u.c **** #define SYS_BOARD_PLLAR     (CKGR_PLLAR_ONE \
  59:.././hal/sam3u1c/system_sam3u.c **** 							| CKGR_PLLAR_MULA(0xfUL) \
  60:.././hal/sam3u1c/system_sam3u.c **** 							| CKGR_PLLAR_PLLACOUNT(0x3fUL) \
  61:.././hal/sam3u1c/system_sam3u.c **** 							| CKGR_PLLAR_DIVA(0x1UL))
  62:.././hal/sam3u1c/system_sam3u.c **** #define SYS_BOARD_MCKR      (PMC_MCKR_PRES_CLK_2 | PMC_MCKR_CSS_PLLA_CLK)
  63:.././hal/sam3u1c/system_sam3u.c **** 
  64:.././hal/sam3u1c/system_sam3u.c **** /* Clock Definitions */
  65:.././hal/sam3u1c/system_sam3u.c **** #define SYS_UTMIPLL     		(480000000UL)	/* UTMI PLL frequency */
  66:.././hal/sam3u1c/system_sam3u.c **** 
  67:.././hal/sam3u1c/system_sam3u.c **** #define SYS_CKGR_MOR_KEY_VALUE	CKGR_MOR_KEY(0x37UL) /* Key to unlock MOR register */
  68:.././hal/sam3u1c/system_sam3u.c **** 
  69:.././hal/sam3u1c/system_sam3u.c **** /* FIXME: should be generated by sock */
  70:.././hal/sam3u1c/system_sam3u.c **** uint32_t SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  71:.././hal/sam3u1c/system_sam3u.c **** 
  72:.././hal/sam3u1c/system_sam3u.c **** /**
  73:.././hal/sam3u1c/system_sam3u.c ****  * \brief Setup the microcontroller system.
  74:.././hal/sam3u1c/system_sam3u.c ****  * Initialize the System and update the SystemFrequency variable.
  75:.././hal/sam3u1c/system_sam3u.c ****  */
  76:.././hal/sam3u1c/system_sam3u.c **** __no_inline
  77:.././hal/sam3u1c/system_sam3u.c **** RAMFUNC
  78:.././hal/sam3u1c/system_sam3u.c **** void SystemInit(void)
  79:.././hal/sam3u1c/system_sam3u.c **** {
  45              	 .loc 1 79 1
  46              	 .cfi_startproc
  47              	 
  48              	 
  49              	 
  50 0000 80B4     	 push {r7}
  51              	.LCFI0:
  52              	 .cfi_def_cfa_offset 4
  53              	 .cfi_offset 7,-4
  54 0002 00AF     	 add r7,sp,#0
  55              	.LCFI1:
  56              	 .cfi_def_cfa_register 7
  80:.././hal/sam3u1c/system_sam3u.c **** 	/* Set FWS according to SYS_BOARD_MCKR configuration */
  81:.././hal/sam3u1c/system_sam3u.c **** 	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
  57              	 .loc 1 81 6
  58 0004 2A4B     	 ldr r3,.L9
  59              	 .loc 1 81 17
  60 0006 4FF48062 	 mov r2,#1024
  61 000a 1A60     	 str r2,[r3]
  82:.././hal/sam3u1c/system_sam3u.c **** 	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
  62              	 .loc 1 82 6
  63 000c 294B     	 ldr r3,.L9+4
  64              	 .loc 1 82 17
  65 000e 4FF48062 	 mov r2,#1024
  66 0012 1A60     	 str r2,[r3]
  83:.././hal/sam3u1c/system_sam3u.c **** 
  84:.././hal/sam3u1c/system_sam3u.c **** 	/* Initialize main oscillator */
  85:.././hal/sam3u1c/system_sam3u.c **** 	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  67              	 .loc 1 85 11
  68 0014 284B     	 ldr r3,.L9+8
  69 0016 1B6A     	 ldr r3,[r3,#32]
  70              	 .loc 1 85 22
  71 0018 03F08073 	 and r3,r3,#16777216
  72              	 .loc 1 85 5
  73 001c 002B     	 cmp r3,#0
  74 001e 09D1     	 bne .L2
  86:.././hal/sam3u1c/system_sam3u.c **** 		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
  75              	 .loc 1 86 6
  76 0020 254B     	 ldr r3,.L9+8
  77              	 .loc 1 86 17
  78 0022 264A     	 ldr r2,.L9+12
  79 0024 1A62     	 str r2,[r3,#32]
  87:.././hal/sam3u1c/system_sam3u.c **** 			                    CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
  88:.././hal/sam3u1c/system_sam3u.c **** 		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
  80              	 .loc 1 88 9
  81 0026 00BF     	 nop
  82              	.L3:
  83              	 .loc 1 88 15 discriminator 1
  84 0028 234B     	 ldr r3,.L9+8
  85 002a 9B6E     	 ldr r3,[r3,#104]
  86              	 .loc 1 88 24 discriminator 1
  87 002c 03F00103 	 and r3,r3,#1
  88              	 .loc 1 88 9 discriminator 1
  89 0030 002B     	 cmp r3,#0
  90 0032 F9D0     	 beq .L3
  91              	.L2:
  89:.././hal/sam3u1c/system_sam3u.c **** 		}
  90:.././hal/sam3u1c/system_sam3u.c **** 	}
  91:.././hal/sam3u1c/system_sam3u.c **** 
  92:.././hal/sam3u1c/system_sam3u.c **** 	/* Switch to 3-20MHz Xtal oscillator */
  93:.././hal/sam3u1c/system_sam3u.c **** 	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
  92              	 .loc 1 93 5
  93 0034 204B     	 ldr r3,.L9+8
  94              	 .loc 1 93 16
  95 0036 224A     	 ldr r2,.L9+16
  96 0038 1A62     	 str r2,[r3,#32]
  94:.././hal/sam3u1c/system_sam3u.c **** 	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;
  95:.././hal/sam3u1c/system_sam3u.c **** 
  96:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
  97              	 .loc 1 96 8
  98 003a 00BF     	 nop
  99              	.L4:
 100              	 .loc 1 96 14 discriminator 1
 101 003c 1E4B     	 ldr r3,.L9+8
 102 003e 9B6E     	 ldr r3,[r3,#104]
 103              	 .loc 1 96 23 discriminator 1
 104 0040 03F48033 	 and r3,r3,#65536
 105              	 .loc 1 96 8 discriminator 1
 106 0044 002B     	 cmp r3,#0
 107 0046 F9D0     	 beq .L4
  97:.././hal/sam3u1c/system_sam3u.c **** 	}
  98:.././hal/sam3u1c/system_sam3u.c **** 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
 108              	 .loc 1 98 22
 109 0048 1B4B     	 ldr r3,.L9+8
 110 004a 1B6B     	 ldr r3,[r3,#48]
 111              	 .loc 1 98 33
 112 004c 23F00303 	 bic r3,r3,#3
 113              	 .loc 1 98 5
 114 0050 194A     	 ldr r2,.L9+8
 115              	 .loc 1 98 64
 116 0052 43F00103 	 orr r3,r3,#1
 117              	 .loc 1 98 16
 118 0056 1363     	 str r3,[r2,#48]
  99:.././hal/sam3u1c/system_sam3u.c **** 		                      PMC_MCKR_CSS_MAIN_CLK;
 100:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
 119              	 .loc 1 100 8
 120 0058 00BF     	 nop
 121              	.L5:
 122              	 .loc 1 100 14 discriminator 1
 123 005a 174B     	 ldr r3,.L9+8
 124 005c 9B6E     	 ldr r3,[r3,#104]
 125              	 .loc 1 100 23 discriminator 1
 126 005e 03F00803 	 and r3,r3,#8
 127              	 .loc 1 100 8 discriminator 1
 128 0062 002B     	 cmp r3,#0
 129 0064 F9D0     	 beq .L5
 101:.././hal/sam3u1c/system_sam3u.c **** 	}
 102:.././hal/sam3u1c/system_sam3u.c **** 
 103:.././hal/sam3u1c/system_sam3u.c **** 	/* Initialize PLLA */
 104:.././hal/sam3u1c/system_sam3u.c **** 	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
 130              	 .loc 1 104 5
 131 0066 144B     	 ldr r3,.L9+8
 132              	 .loc 1 104 18
 133 0068 164A     	 ldr r2,.L9+20
 134 006a 9A62     	 str r2,[r3,#40]
 105:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
 135              	 .loc 1 105 8
 136 006c 00BF     	 nop
 137              	.L6:
 138              	 .loc 1 105 14 discriminator 1
 139 006e 124B     	 ldr r3,.L9+8
 140 0070 9B6E     	 ldr r3,[r3,#104]
 141              	 .loc 1 105 23 discriminator 1
 142 0072 03F00203 	 and r3,r3,#2
 143              	 .loc 1 105 8 discriminator 1
 144 0076 002B     	 cmp r3,#0
 145 0078 F9D0     	 beq .L6
 106:.././hal/sam3u1c/system_sam3u.c **** 	}
 107:.././hal/sam3u1c/system_sam3u.c **** 
 108:.././hal/sam3u1c/system_sam3u.c **** 	/* Switch to main clock */
 109:.././hal/sam3u1c/system_sam3u.c **** 	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
 146              	 .loc 1 109 5
 147 007a 0F4B     	 ldr r3,.L9+8
 148              	 .loc 1 109 16
 149 007c 1122     	 movs r2,#17
 150 007e 1A63     	 str r2,[r3,#48]
 110:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
 151              	 .loc 1 110 8
 152 0080 00BF     	 nop
 153              	.L7:
 154              	 .loc 1 110 14 discriminator 1
 155 0082 0D4B     	 ldr r3,.L9+8
 156 0084 9B6E     	 ldr r3,[r3,#104]
 157              	 .loc 1 110 23 discriminator 1
 158 0086 03F00803 	 and r3,r3,#8
 159              	 .loc 1 110 8 discriminator 1
 160 008a 002B     	 cmp r3,#0
 161 008c F9D0     	 beq .L7
 111:.././hal/sam3u1c/system_sam3u.c **** 	}
 112:.././hal/sam3u1c/system_sam3u.c **** 
 113:.././hal/sam3u1c/system_sam3u.c **** 	/* Switch to PLLA */
 114:.././hal/sam3u1c/system_sam3u.c **** 	PMC->PMC_MCKR = SYS_BOARD_MCKR;
 162              	 .loc 1 114 5
 163 008e 0A4B     	 ldr r3,.L9+8
 164              	 .loc 1 114 16
 165 0090 1222     	 movs r2,#18
 166 0092 1A63     	 str r2,[r3,#48]
 115:.././hal/sam3u1c/system_sam3u.c **** 	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
 167              	 .loc 1 115 8
 168 0094 00BF     	 nop
 169              	.L8:
 170              	 .loc 1 115 14 discriminator 1
 171 0096 084B     	 ldr r3,.L9+8
 172 0098 9B6E     	 ldr r3,[r3,#104]
 173              	 .loc 1 115 23 discriminator 1
 174 009a 03F00803 	 and r3,r3,#8
 175              	 .loc 1 115 8 discriminator 1
 176 009e 002B     	 cmp r3,#0
 177 00a0 F9D0     	 beq .L8
 116:.././hal/sam3u1c/system_sam3u.c **** 	}
 117:.././hal/sam3u1c/system_sam3u.c **** 
 118:.././hal/sam3u1c/system_sam3u.c **** 	SystemCoreClock = CHIP_FREQ_CPU_MAX;
 178              	 .loc 1 118 18
 179 00a2 094B     	 ldr r3,.L9+24
 180 00a4 094A     	 ldr r2,.L9+28
 181 00a6 1A60     	 str r2,[r3]
 119:.././hal/sam3u1c/system_sam3u.c **** }
 182              	 .loc 1 119 1
 183 00a8 00BF     	 nop
 184 00aa BD46     	 mov sp,r7
 185              	.LCFI2:
 186              	 .cfi_def_cfa_register 13
 187              	 
 188 00ac 80BC     	 pop {r7}
 189              	.LCFI3:
 190              	 .cfi_restore 7
 191              	 .cfi_def_cfa_offset 0
 192 00ae 7047     	 bx lr
 193              	.L10:
 194              	 .align 2
 195              	.L9:
 196 00b0 00080E40 	 .word 1074661376
 197 00b4 000A0E40 	 .word 1074661888
 198 00b8 00040E40 	 .word 1074660352
 199 00bc 09083700 	 .word 3606537
 200 00c0 09083701 	 .word 20383753
 201 00c4 013F0F20 	 .word 537870081
 202 00c8 00000000 	 .word SystemCoreClock
 203 00cc 00D8B805 	 .word 96000000
 204              	 .cfi_endproc
 205              	.LFE69:
 207              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
 208              	 .align 1
 209              	 .global SystemCoreClockUpdate
 210              	 .syntax unified
 211              	 .thumb
 212              	 .thumb_func
 213              	 .fpu softvfp
 215              	SystemCoreClockUpdate:
 216              	.LFB70:
 120:.././hal/sam3u1c/system_sam3u.c **** 
 121:.././hal/sam3u1c/system_sam3u.c **** void SystemCoreClockUpdate(void)
 122:.././hal/sam3u1c/system_sam3u.c **** {
 217              	 .loc 1 122 1
 218              	 .cfi_startproc
 219              	 
 220              	 
 221              	 
 222 0000 80B4     	 push {r7}
 223              	.LCFI4:
 224              	 .cfi_def_cfa_offset 4
 225              	 .cfi_offset 7,-4
 226 0002 00AF     	 add r7,sp,#0
 227              	.LCFI5:
 228              	 .cfi_def_cfa_register 7
 123:.././hal/sam3u1c/system_sam3u.c **** 	/* Determine clock frequency according to clock register values */
 124:.././hal/sam3u1c/system_sam3u.c **** 	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
 229              	 .loc 1 124 13
 230 0004 584B     	 ldr r3,.L40
 231 0006 1B6B     	 ldr r3,[r3,#48]
 232              	 .loc 1 124 24
 233 0008 03F00303 	 and r3,r3,#3
 234              	 .loc 1 124 2
 235 000c 032B     	 cmp r3,#3
 236 000e 00F28C80 	 bhi .L12
 237 0012 022B     	 cmp r3,#2
 238 0014 3FD2     	 bcs .L13
 239 0016 002B     	 cmp r3,#0
 240 0018 02D0     	 beq .L14
 241 001a 012B     	 cmp r3,#1
 242 001c 10D0     	 beq .L15
 243 001e 84E0     	 b .L12
 244              	.L14:
 125:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
 126:.././hal/sam3u1c/system_sam3u.c **** 		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
 245              	 .loc 1 126 11
 246 0020 524B     	 ldr r3,.L40+4
 247 0022 5B69     	 ldr r3,[r3,#20]
 248              	 .loc 1 126 21
 249 0024 03F08003 	 and r3,r3,#128
 250              	 .loc 1 126 6
 251 0028 002B     	 cmp r3,#0
 252 002a 04D0     	 beq .L16
 127:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_XTAL_32K;
 253              	 .loc 1 127 20
 254 002c 504B     	 ldr r3,.L40+8
 255 002e 4FF40042 	 mov r2,#32768
 256 0032 1A60     	 str r2,[r3]
 128:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 129:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_SLCK_RC;
 130:.././hal/sam3u1c/system_sam3u.c **** 		}
 131:.././hal/sam3u1c/system_sam3u.c **** 		break;
 257              	 .loc 1 131 3
 258 0034 79E0     	 b .L12
 259              	.L16:
 129:.././hal/sam3u1c/system_sam3u.c **** 		}
 260              	 .loc 1 129 20
 261 0036 4E4B     	 ldr r3,.L40+8
 262 0038 4FF4FA42 	 mov r2,#32000
 263 003c 1A60     	 str r2,[r3]
 264              	 .loc 1 131 3
 265 003e 74E0     	 b .L12
 266              	.L15:
 132:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
 133:.././hal/sam3u1c/system_sam3u.c **** 		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
 267              	 .loc 1 133 10
 268 0040 494B     	 ldr r3,.L40
 269 0042 1B6A     	 ldr r3,[r3,#32]
 270              	 .loc 1 133 21
 271 0044 03F08073 	 and r3,r3,#16777216
 272              	 .loc 1 133 6
 273 0048 002B     	 cmp r3,#0
 274 004a 03D0     	 beq .L18
 134:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_XTAL_12M;
 275              	 .loc 1 134 20
 276 004c 484B     	 ldr r3,.L40+8
 277 004e 494A     	 ldr r2,.L40+12
 278 0050 1A60     	 str r2,[r3]
 135:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 136:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
 137:.././hal/sam3u1c/system_sam3u.c **** 
 138:.././hal/sam3u1c/system_sam3u.c **** 			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
 139:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 140:.././hal/sam3u1c/system_sam3u.c **** 				break;
 141:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 142:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 2U;
 143:.././hal/sam3u1c/system_sam3u.c **** 				break;
 144:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 145:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 3U;
 146:.././hal/sam3u1c/system_sam3u.c **** 				break;
 147:.././hal/sam3u1c/system_sam3u.c **** 			default:
 148:.././hal/sam3u1c/system_sam3u.c **** 				break;
 149:.././hal/sam3u1c/system_sam3u.c **** 			}
 150:.././hal/sam3u1c/system_sam3u.c **** 		}
 151:.././hal/sam3u1c/system_sam3u.c **** 		break;
 279              	 .loc 1 151 3
 280 0052 6AE0     	 b .L12
 281              	.L18:
 136:.././hal/sam3u1c/system_sam3u.c **** 
 282              	 .loc 1 136 20
 283 0054 464B     	 ldr r3,.L40+8
 284 0056 484A     	 ldr r2,.L40+16
 285 0058 1A60     	 str r2,[r3]
 138:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 286              	 .loc 1 138 15
 287 005a 434B     	 ldr r3,.L40
 288 005c 1B6A     	 ldr r3,[r3,#32]
 138:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 289              	 .loc 1 138 26
 290 005e 03F07003 	 and r3,r3,#112
 291 0062 202B     	 cmp r3,#32
 292 0064 0BD0     	 beq .L20
 293 0066 202B     	 cmp r3,#32
 294 0068 11D8     	 bhi .L34
 295 006a 002B     	 cmp r3,#0
 296 006c 11D0     	 beq .L35
 297 006e 102B     	 cmp r3,#16
 298 0070 0DD1     	 bne .L34
 142:.././hal/sam3u1c/system_sam3u.c **** 				break;
 299              	 .loc 1 142 21
 300 0072 3F4B     	 ldr r3,.L40+8
 301 0074 1B68     	 ldr r3,[r3]
 302 0076 5B00     	 lsls r3,r3,#1
 303 0078 3D4A     	 ldr r2,.L40+8
 304 007a 1360     	 str r3,[r2]
 143:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 305              	 .loc 1 143 5
 306 007c 0AE0     	 b .L19
 307              	.L20:
 145:.././hal/sam3u1c/system_sam3u.c **** 				break;
 308              	 .loc 1 145 21
 309 007e 3C4B     	 ldr r3,.L40+8
 310 0080 1A68     	 ldr r2,[r3]
 311 0082 1346     	 mov r3,r2
 312 0084 5B00     	 lsls r3,r3,#1
 313 0086 1344     	 add r3,r3,r2
 314 0088 394A     	 ldr r2,.L40+8
 315 008a 1360     	 str r3,[r2]
 146:.././hal/sam3u1c/system_sam3u.c **** 			default:
 316              	 .loc 1 146 5
 317 008c 02E0     	 b .L19
 318              	.L34:
 148:.././hal/sam3u1c/system_sam3u.c **** 			}
 319              	 .loc 1 148 5
 320 008e 00BF     	 nop
 321 0090 4BE0     	 b .L12
 322              	.L35:
 140:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 323              	 .loc 1 140 5
 324 0092 00BF     	 nop
 325              	.L19:
 326              	 .loc 1 151 3
 327 0094 49E0     	 b .L12
 328              	.L13:
 152:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
 153:.././hal/sam3u1c/system_sam3u.c **** 	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
 154:.././hal/sam3u1c/system_sam3u.c **** 		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
 329              	 .loc 1 154 10
 330 0096 344B     	 ldr r3,.L40
 331 0098 1B6A     	 ldr r3,[r3,#32]
 332              	 .loc 1 154 21
 333 009a 03F08073 	 and r3,r3,#16777216
 334              	 .loc 1 154 6
 335 009e 002B     	 cmp r3,#0
 336 00a0 03D0     	 beq .L24
 155:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_XTAL_12M;
 337              	 .loc 1 155 20
 338 00a2 334B     	 ldr r3,.L40+8
 339 00a4 334A     	 ldr r2,.L40+12
 340 00a6 1A60     	 str r2,[r3]
 341 00a8 1FE0     	 b .L25
 342              	.L24:
 156:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 157:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
 343              	 .loc 1 157 20
 344 00aa 314B     	 ldr r3,.L40+8
 345 00ac 324A     	 ldr r2,.L40+16
 346 00ae 1A60     	 str r2,[r3]
 158:.././hal/sam3u1c/system_sam3u.c **** 
 159:.././hal/sam3u1c/system_sam3u.c **** 			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
 347              	 .loc 1 159 15
 348 00b0 2D4B     	 ldr r3,.L40
 349 00b2 1B6A     	 ldr r3,[r3,#32]
 350              	 .loc 1 159 26
 351 00b4 03F07003 	 and r3,r3,#112
 352 00b8 202B     	 cmp r3,#32
 353 00ba 0BD0     	 beq .L26
 354 00bc 202B     	 cmp r3,#32
 355 00be 11D8     	 bhi .L36
 356 00c0 002B     	 cmp r3,#0
 357 00c2 11D0     	 beq .L37
 358 00c4 102B     	 cmp r3,#16
 359 00c6 0DD1     	 bne .L36
 160:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 161:.././hal/sam3u1c/system_sam3u.c **** 				break;
 162:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 163:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 2U;
 360              	 .loc 1 163 21
 361 00c8 294B     	 ldr r3,.L40+8
 362 00ca 1B68     	 ldr r3,[r3]
 363 00cc 5B00     	 lsls r3,r3,#1
 364 00ce 284A     	 ldr r2,.L40+8
 365 00d0 1360     	 str r3,[r2]
 164:.././hal/sam3u1c/system_sam3u.c **** 				break;
 366              	 .loc 1 164 5
 367 00d2 0AE0     	 b .L25
 368              	.L26:
 165:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 166:.././hal/sam3u1c/system_sam3u.c **** 				SystemCoreClock *= 3U;
 369              	 .loc 1 166 21
 370 00d4 264B     	 ldr r3,.L40+8
 371 00d6 1A68     	 ldr r2,[r3]
 372 00d8 1346     	 mov r3,r2
 373 00da 5B00     	 lsls r3,r3,#1
 374 00dc 1344     	 add r3,r3,r2
 375 00de 244A     	 ldr r2,.L40+8
 376 00e0 1360     	 str r3,[r2]
 167:.././hal/sam3u1c/system_sam3u.c **** 				break;
 377              	 .loc 1 167 5
 378 00e2 02E0     	 b .L25
 379              	.L36:
 168:.././hal/sam3u1c/system_sam3u.c **** 			default:
 169:.././hal/sam3u1c/system_sam3u.c **** 				break;
 380              	 .loc 1 169 5
 381 00e4 00BF     	 nop
 382 00e6 00E0     	 b .L25
 383              	.L37:
 161:.././hal/sam3u1c/system_sam3u.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 384              	 .loc 1 161 5
 385 00e8 00BF     	 nop
 386              	.L25:
 170:.././hal/sam3u1c/system_sam3u.c **** 			}
 171:.././hal/sam3u1c/system_sam3u.c **** 		}
 172:.././hal/sam3u1c/system_sam3u.c **** 		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
 387              	 .loc 1 172 11
 388 00ea 1F4B     	 ldr r3,.L40
 389 00ec 1B6B     	 ldr r3,[r3,#48]
 390              	 .loc 1 172 22
 391 00ee 03F00303 	 and r3,r3,#3
 392              	 .loc 1 172 6
 393 00f2 022B     	 cmp r3,#2
 394 00f4 15D1     	 bne .L30
 173:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
 395              	 .loc 1 173 30
 396 00f6 1C4B     	 ldr r3,.L40
 397 00f8 9B6A     	 ldr r3,[r3,#40]
 398              	 .loc 1 173 67
 399 00fa 1B0C     	 lsrs r3,r3,#16
 400 00fc C3F30A03 	 ubfx r3,r3,#0,#11
 174:.././hal/sam3u1c/system_sam3u.c **** 				                          CKGR_PLLAR_MULA_Pos) + 1U);
 401              	 .loc 1 174 52
 402 0100 0133     	 adds r3,r3,#1
 173:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
 403              	 .loc 1 173 20
 404 0102 1B4A     	 ldr r2,.L40+8
 405 0104 1268     	 ldr r2,[r2]
 406 0106 02FB03F3 	 mul r3,r2,r3
 407 010a 194A     	 ldr r2,.L40+8
 408 010c 1360     	 str r3,[r2]
 175:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
 409              	 .loc 1 175 30
 410 010e 164B     	 ldr r3,.L40
 411 0110 9B6A     	 ldr r3,[r3,#40]
 412              	 .loc 1 175 67
 413 0112 DBB2     	 uxtb r3,r3
 414              	 .loc 1 175 20
 415 0114 164A     	 ldr r2,.L40+8
 416 0116 1268     	 ldr r2,[r2]
 417 0118 B2FBF3F3 	 udiv r3,r2,r3
 418 011c 144A     	 ldr r2,.L40+8
 419 011e 1360     	 str r3,[r2]
 176:.././hal/sam3u1c/system_sam3u.c **** 				                           CKGR_PLLAR_DIVA_Pos));
 177:.././hal/sam3u1c/system_sam3u.c **** 		} else {
 178:.././hal/sam3u1c/system_sam3u.c **** 			SystemCoreClock = SYS_UTMIPLL / 2U;
 179:.././hal/sam3u1c/system_sam3u.c **** 		}
 180:.././hal/sam3u1c/system_sam3u.c **** 		break;
 420              	 .loc 1 180 3
 421 0120 02E0     	 b .L38
 422              	.L30:
 178:.././hal/sam3u1c/system_sam3u.c **** 		}
 423              	 .loc 1 178 20
 424 0122 134B     	 ldr r3,.L40+8
 425 0124 154A     	 ldr r2,.L40+20
 426 0126 1A60     	 str r2,[r3]
 427              	.L38:
 428              	 .loc 1 180 3
 429 0128 00BF     	 nop
 430              	.L12:
 181:.././hal/sam3u1c/system_sam3u.c **** 	}
 182:.././hal/sam3u1c/system_sam3u.c **** 
 183:.././hal/sam3u1c/system_sam3u.c **** 	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
 431              	 .loc 1 183 10
 432 012a 0F4B     	 ldr r3,.L40
 433 012c 1B6B     	 ldr r3,[r3,#48]
 434              	 .loc 1 183 21
 435 012e 03F07003 	 and r3,r3,#112
 436              	 .loc 1 183 5
 437 0132 702B     	 cmp r3,#112
 438 0134 08D1     	 bne .L32
 184:.././hal/sam3u1c/system_sam3u.c **** 		SystemCoreClock /= 3U;
 439              	 .loc 1 184 19
 440 0136 0E4B     	 ldr r3,.L40+8
 441 0138 1B68     	 ldr r3,[r3]
 442 013a 114A     	 ldr r2,.L40+24
 443 013c A2FB0323 	 umull r2,r3,r2,r3
 444 0140 5B08     	 lsrs r3,r3,#1
 445 0142 0B4A     	 ldr r2,.L40+8
 446 0144 1360     	 str r3,[r2]
 185:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 186:.././hal/sam3u1c/system_sam3u.c **** 		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
 187:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 188:.././hal/sam3u1c/system_sam3u.c **** 	}
 189:.././hal/sam3u1c/system_sam3u.c **** }
 447              	 .loc 1 189 1
 448 0146 0AE0     	 b .L39
 449              	.L32:
 186:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 450              	 .loc 1 186 28
 451 0148 074B     	 ldr r3,.L40
 452 014a 1B6B     	 ldr r3,[r3,#48]
 186:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 453              	 .loc 1 186 60
 454 014c 1B09     	 lsrs r3,r3,#4
 455 014e 03F00703 	 and r3,r3,#7
 186:.././hal/sam3u1c/system_sam3u.c **** 			                           PMC_MCKR_PRES_Pos);
 456              	 .loc 1 186 19
 457 0152 074A     	 ldr r2,.L40+8
 458 0154 1268     	 ldr r2,[r2]
 459 0156 22FA03F3 	 lsr r3,r2,r3
 460 015a 054A     	 ldr r2,.L40+8
 461 015c 1360     	 str r3,[r2]
 462              	.L39:
 463              	 .loc 1 189 1
 464 015e 00BF     	 nop
 465 0160 BD46     	 mov sp,r7
 466              	.LCFI6:
 467              	 .cfi_def_cfa_register 13
 468              	 
 469 0162 80BC     	 pop {r7}
 470              	.LCFI7:
 471              	 .cfi_restore 7
 472              	 .cfi_def_cfa_offset 0
 473 0164 7047     	 bx lr
 474              	.L41:
 475 0166 00BF     	 .align 2
 476              	.L40:
 477 0168 00040E40 	 .word 1074660352
 478 016c 10120E40 	 .word 1074663952
 479 0170 00000000 	 .word SystemCoreClock
 480 0174 001BB700 	 .word 12000000
 481 0178 00093D00 	 .word 4000000
 482 017c 001C4E0E 	 .word 240000000
 483 0180 ABAAAAAA 	 .word -1431655765
 484              	 .cfi_endproc
 485              	.LFE70:
 487              	 .section .ramfunc
 488              	 .align 1
 489              	 .global system_init_flash
 490              	 .syntax unified
 491              	 .thumb
 492              	 .thumb_func
 493              	 .fpu softvfp
 495              	system_init_flash:
 496              	.LFB71:
 190:.././hal/sam3u1c/system_sam3u.c **** 
 191:.././hal/sam3u1c/system_sam3u.c **** /** 
 192:.././hal/sam3u1c/system_sam3u.c ****  * Initialize flash.
 193:.././hal/sam3u1c/system_sam3u.c ****  */
 194:.././hal/sam3u1c/system_sam3u.c **** __no_inline
 195:.././hal/sam3u1c/system_sam3u.c **** RAMFUNC
 196:.././hal/sam3u1c/system_sam3u.c **** void system_init_flash(uint32_t ul_clk)
 197:.././hal/sam3u1c/system_sam3u.c **** {
 497              	 .loc 1 197 1
 498              	 .cfi_startproc
 499              	 
 500              	 
 501              	 
 502 00d0 80B4     	 push {r7}
 503              	.LCFI8:
 504              	 .cfi_def_cfa_offset 4
 505              	 .cfi_offset 7,-4
 506 00d2 83B0     	 sub sp,sp,#12
 507              	.LCFI9:
 508              	 .cfi_def_cfa_offset 16
 509 00d4 00AF     	 add r7,sp,#0
 510              	.LCFI10:
 511              	 .cfi_def_cfa_register 7
 512 00d6 7860     	 str r0,[r7,#4]
 198:.././hal/sam3u1c/system_sam3u.c **** 	/* Set FWS for embedded Flash access according to operating frequency */
 199:.././hal/sam3u1c/system_sam3u.c **** 	if (ul_clk < CHIP_FREQ_FWS_0) {
 513              	 .loc 1 199 5
 514 00d8 7B68     	 ldr r3,[r7,#4]
 515 00da 1F4A     	 ldr r2,.L49
 516 00dc 9342     	 cmp r3,r2
 517 00de 06D2     	 bcs .L43
 200:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
 518              	 .loc 1 200 7
 519 00e0 1E4B     	 ldr r3,.L49+4
 520              	 .loc 1 200 18
 521 00e2 0022     	 movs r2,#0
 522 00e4 1A60     	 str r2,[r3]
 201:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
 523              	 .loc 1 201 7
 524 00e6 1E4B     	 ldr r3,.L49+8
 525              	 .loc 1 201 18
 526 00e8 0022     	 movs r2,#0
 527 00ea 1A60     	 str r2,[r3]
 202:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_1) {
 203:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
 204:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
 205:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_2) {
 206:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
 207:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
 208:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_3) {
 209:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
 210:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
 211:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 212:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
 213:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
 214:.././hal/sam3u1c/system_sam3u.c **** 	}
 215:.././hal/sam3u1c/system_sam3u.c **** }
 528              	 .loc 1 215 1
 529 00ec 2EE0     	 b .L48
 530              	.L43:
 202:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_1) {
 531              	 .loc 1 202 12
 532 00ee 7B68     	 ldr r3,[r7,#4]
 533 00f0 1C4A     	 ldr r2,.L49+12
 534 00f2 9342     	 cmp r3,r2
 535 00f4 08D2     	 bcs .L45
 203:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
 536              	 .loc 1 203 7
 537 00f6 194B     	 ldr r3,.L49+4
 203:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
 538              	 .loc 1 203 18
 539 00f8 4FF48072 	 mov r2,#256
 540 00fc 1A60     	 str r2,[r3]
 204:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_2) {
 541              	 .loc 1 204 7
 542 00fe 184B     	 ldr r3,.L49+8
 204:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_2) {
 543              	 .loc 1 204 18
 544 0100 4FF48072 	 mov r2,#256
 545 0104 1A60     	 str r2,[r3]
 546              	 .loc 1 215 1
 547 0106 21E0     	 b .L48
 548              	.L45:
 205:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
 549              	 .loc 1 205 12
 550 0108 7B68     	 ldr r3,[r7,#4]
 551 010a 174A     	 ldr r2,.L49+16
 552 010c 9342     	 cmp r3,r2
 553 010e 08D8     	 bhi .L46
 206:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
 554              	 .loc 1 206 7
 555 0110 124B     	 ldr r3,.L49+4
 206:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
 556              	 .loc 1 206 18
 557 0112 4FF40072 	 mov r2,#512
 558 0116 1A60     	 str r2,[r3]
 207:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_3) {
 559              	 .loc 1 207 7
 560 0118 114B     	 ldr r3,.L49+8
 207:.././hal/sam3u1c/system_sam3u.c **** 	} else if (ul_clk < CHIP_FREQ_FWS_3) {
 561              	 .loc 1 207 18
 562 011a 4FF40072 	 mov r2,#512
 563 011e 1A60     	 str r2,[r3]
 564              	 .loc 1 215 1
 565 0120 14E0     	 b .L48
 566              	.L46:
 208:.././hal/sam3u1c/system_sam3u.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
 567              	 .loc 1 208 12
 568 0122 7B68     	 ldr r3,[r7,#4]
 569 0124 114A     	 ldr r2,.L49+20
 570 0126 9342     	 cmp r3,r2
 571 0128 08D8     	 bhi .L47
 209:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
 572              	 .loc 1 209 7
 573 012a 0C4B     	 ldr r3,.L49+4
 209:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
 574              	 .loc 1 209 18
 575 012c 4FF44072 	 mov r2,#768
 576 0130 1A60     	 str r2,[r3]
 210:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 577              	 .loc 1 210 7
 578 0132 0B4B     	 ldr r3,.L49+8
 210:.././hal/sam3u1c/system_sam3u.c **** 	} else {
 579              	 .loc 1 210 18
 580 0134 4FF44072 	 mov r2,#768
 581 0138 1A60     	 str r2,[r3]
 582              	 .loc 1 215 1
 583 013a 07E0     	 b .L48
 584              	.L47:
 212:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
 585              	 .loc 1 212 7
 586 013c 074B     	 ldr r3,.L49+4
 212:.././hal/sam3u1c/system_sam3u.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
 587              	 .loc 1 212 18
 588 013e 4FF48062 	 mov r2,#1024
 589 0142 1A60     	 str r2,[r3]
 213:.././hal/sam3u1c/system_sam3u.c **** 	}
 590              	 .loc 1 213 7
 591 0144 064B     	 ldr r3,.L49+8
 213:.././hal/sam3u1c/system_sam3u.c **** 	}
 592              	 .loc 1 213 18
 593 0146 4FF48062 	 mov r2,#1024
 594 014a 1A60     	 str r2,[r3]
 595              	.L48:
 596              	 .loc 1 215 1
 597 014c 00BF     	 nop
 598 014e 0C37     	 adds r7,r7,#12
 599              	.LCFI11:
 600              	 .cfi_def_cfa_offset 4
 601 0150 BD46     	 mov sp,r7
 602              	.LCFI12:
 603              	 .cfi_def_cfa_register 13
 604              	 
 605 0152 80BC     	 pop {r7}
 606              	.LCFI13:
 607              	 .cfi_restore 7
 608              	 .cfi_def_cfa_offset 0
 609 0154 7047     	 bx lr
 610              	.L50:
 611 0156 00BF     	 .align 2
 612              	.L49:
 613 0158 00366E01 	 .word 24000000
 614 015c 00080E40 	 .word 1074661376
 615 0160 000A0E40 	 .word 1074661888
 616 0164 005A6202 	 .word 40000000
 617 0168 FFA14A04 	 .word 71999999
 618 016c FFBC0105 	 .word 83999999
 619              	 .cfi_endproc
 620              	.LFE71:
 622              	 .text
 623              	.Letext0:
 624              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 625              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 626              	 .file 4 ".././hal/sam3u1c/inc/sam3u1c.h"
 627              	 .file 5 ".././hal/sam3u1c/inc/component/component_efc.h"
 628              	 .file 6 ".././hal/sam3u1c/inc/component/component_pmc.h"
 629              	 .file 7 ".././hal/sam3u1c/inc/component/component_supc.h"
 630              	 .file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 631              	 .file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 632              	 .file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 633              	 .file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 634              	 .file 12 ".././hal/sam3u1c/inc/core_cm3.h"
 635              	 .file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\stdlib.h"
 636              	 .file 14 ".././hal/sam3u1c/inc/interrupt/interrupt_sam_nvic.h"
 637              	 .file 15 ".././hal/sam3u1c/inc/system_sam3u.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_sam3u.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:31     .data.SystemCoreClock:00000000 SystemCoreClock
    {standard input}:28     .data.SystemCoreClock:00000000 $d
    {standard input}:34     .ramfunc:00000000 $t
    {standard input}:42     .ramfunc:00000000 SystemInit
    {standard input}:196    .ramfunc:000000b0 $d
    {standard input}:208    .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:215    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:477    .text.SystemCoreClockUpdate:00000168 $d
    {standard input}:488    .ramfunc:000000d0 $t
    {standard input}:495    .ramfunc:000000d0 system_init_flash
    {standard input}:613    .ramfunc:00000158 $d
                           .group:00000000 wm4.0.2cd8a2cb7ff4c48cec7eeec776a1dd8c
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:00000000 wm4.parts.h.45.afc900689b2c82332e69d798acedc875
                           .group:00000000 wm4.tpaste.h.45.af3ee36765243b162c88f7f944858426
                           .group:00000000 wm4.stringz.h.45.c4f6cbe0005e6c1d2139bc6c0e4f4722
                           .group:00000000 wm4.mrepeat.h.59.c5daaed201a4340b0edf435161d0b77f
                           .group:00000000 wm4.sam3u1c.h.43.efed317e4fd5cd7c5ce8b3ab072a1380
                           .group:00000000 wm4.core_cm3.h.32.5c59c312db585622d253fdb887b0afb1
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm3.h.127.b561404f2a159dc517b409bc244d16c1
                           .group:00000000 wm4.component_adc.h.43.d49887380d07d1cd08cc4e37b3485e31
                           .group:00000000 wm4.component_adc12b.h.43.eadc09f1073923fb91f1f393cc397dcb
                           .group:00000000 wm4.component_chipid.h.43.15825c969b1cc9eeea3d9416499874c8
                           .group:00000000 wm4.component_dmac.h.43.cc8187b1cf6bfeadc91b14fdd28b9e8b
                           .group:00000000 wm4.component_efc.h.43.cb1b3997ad9ea3733ad421ecbfd02fdd
                           .group:00000000 wm4.component_gpbr.h.43.49b7e13894fe38b29f2243bbbe530227
                           .group:00000000 wm4.component_hsmci.h.43.7b7194c92e1480c038f3342f7cec440a
                           .group:00000000 wm4.component_matrix.h.43.1d209838fb75b4827119203a357141ee
                           .group:00000000 wm4.component_pdc.h.43.19528a5f9ef5a348234ea06f89069c55
                           .group:00000000 wm4.component_pio.h.43.163b46c3683ccf92e8de39a5554f50e8
                           .group:00000000 wm4.component_pmc.h.43.ee4f030602866917aeed15fb2b948de8
                           .group:00000000 wm4.component_pwm.h.43.ab6262a86f0aea354b43fe6dce7e7eb3
                           .group:00000000 wm4.component_rstc.h.43.4eb59dc2ddcf585fabf251d0c329fcdd
                           .group:00000000 wm4.component_rtc.h.43.ba8ccafc772b11d562a3cceab8b95072
                           .group:00000000 wm4.component_rtt.h.43.3206ef8f067e5e747c3c4c7e719c1429
                           .group:00000000 wm4.component_smc.h.43.907847915f1a5616734199d7e34424fa
                           .group:00000000 wm4.component_spi.h.43.a2a09df64ab768c0a32be55285c74ded
                           .group:00000000 wm4.component_ssc.h.43.d7c78f990c13fc511671b64798c4bcd0
                           .group:00000000 wm4.component_supc.h.43.7d17f8e5ed3ba815e84381152735062f
                           .group:00000000 wm4.component_tc.h.43.662eac8137408372b4f9d26c0b5f8621
                           .group:00000000 wm4.component_twi.h.43.eda18625bd851fc4605861f5b3240c0b
                           .group:00000000 wm4.component_uart.h.43.2d92735c5ea05c973661e1ba99a2f37c
                           .group:00000000 wm4.component_udphs.h.43.21cecd26a4e44df0013037f29f2716e4
                           .group:00000000 wm4.component_usart.h.43.7872f8f455adb38b67b9fbdb15657fbe
                           .group:00000000 wm4.component_wdt.h.43.e31e10a5469b62c3660b49ab250f802f
                           .group:00000000 wm4.instance_hsmci.h.43.e233236cc7fd5a805539a7ecc0e1d8d2
                           .group:00000000 wm4.instance_ssc.h.43.c0cfabc3b9f3bb60745c913111bce965
                           .group:00000000 wm4.instance_spi.h.43.570ae46af19e4179d9796872b9a8b9bc
                           .group:00000000 wm4.instance_tc0.h.43.049b3a82387d2961594190609e896a29
                           .group:00000000 wm4.instance_twi0.h.43.255dc0afa9e0d45eaea0a935eca2f103
                           .group:00000000 wm4.instance_twi1.h.43.652d1d407893f259f2a817544ba662c2
                           .group:00000000 wm4.instance_pwm.h.43.88294acec3ca56d6fc521038521a1567
                           .group:00000000 wm4.instance_usart0.h.43.e26677512aee3dd3bedd71d394410000
                           .group:00000000 wm4.instance_usart1.h.43.1ba97dbc6610d9fb3132b9d845688201
                           .group:00000000 wm4.instance_usart2.h.43.baa1bf30b3c5acdee90c4a1f50fe9ebd
                           .group:00000000 wm4.instance_udphs.h.43.b1ce94181e0d1f22877b81c6040a4363
                           .group:00000000 wm4.instance_adc12b.h.43.d73ed59e867ccdfdb846d9ef32a50c0c
                           .group:00000000 wm4.instance_adc.h.43.2b7611a00afeb4c555339b844d4b8456
                           .group:00000000 wm4.instance_dmac.h.43.ee72691d84889c8f285932be4a075ddb
                           .group:00000000 wm4.instance_smc.h.43.29610fd00979caaaa65821ad40e9da06
                           .group:00000000 wm4.instance_matrix.h.43.01ee474141594385374c41a29daeeefe
                           .group:00000000 wm4.instance_pmc.h.43.37430325ed7b8b24c3fe640c41c29ef5
                           .group:00000000 wm4.instance_uart.h.43.bd378395ba022bc8670c82ebe656fbbd
                           .group:00000000 wm4.instance_chipid.h.43.29cd8fb600f149aa58830fcc78fe36f9
                           .group:00000000 wm4.instance_efc0.h.43.6b85dba20721a7e9fc4350e78d193680
                           .group:00000000 wm4.instance_efc1.h.43.2c5e94fc4d2742678318d73450d08d57
                           .group:00000000 wm4.instance_pioa.h.43.eeb46cc3bfe01a1f28e67aa3a6851ed8
                           .group:00000000 wm4.instance_piob.h.43.652ce26b6c37ac56f9ed42a9216d9aca
                           .group:00000000 wm4.instance_rstc.h.43.c5de224364a50a85f237c0b864aa4c8f
                           .group:00000000 wm4.instance_supc.h.43.a5f1a5ca08f468ccf34ed3653e045f1f
                           .group:00000000 wm4.instance_rtt.h.43.8622b192c23334996132415e3095df7f
                           .group:00000000 wm4.instance_wdt.h.43.407ea53e133eacf09acf2c7fcb6b7524
                           .group:00000000 wm4.instance_rtc.h.43.f70b77f9180401c8d9d920cb4a1cd166
                           .group:00000000 wm4.instance_gpbr.h.43.9066cb40d557f6755101368854272348
                           .group:00000000 wm4.sam3u1c.h.312.ae446d8e874d34ca3df78faf190c678f
                           .group:00000000 wm4.pio_sam3u1c.h.43.18b24f16e1710ff2a400d88fe33c5107
                           .group:00000000 wm4.sam3u1c.h.442.cd4bbc3af493e98bc9b60c2905132ed0
                           .group:00000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:00000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.cdefs.h.49.2bf373aedffd8b393ccd11dc057e8547
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.compiler.h.88.0e6ad966134fa012ce9a34053d3f48aa
                           .group:00000000 wm4.interrupt_sam_nvic.h.84.12b72da0cfda407ab49bd5ed390be386
                           .group:00000000 wm4.compiler.h.425.66dd29c210af3287ed85ec3553a3e6b1

NO UNDEFINED SYMBOLS
