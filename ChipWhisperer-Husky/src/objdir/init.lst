   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "init.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .section .text.sysclk_enable_peripheral_clock,"ax",%progbits
  27              	 .align 1
  28              	 .arch armv7-m
  29              	 .syntax unified
  30              	 .thumb
  31              	 .thumb_func
  32              	 .fpu softvfp
  34              	sysclk_enable_peripheral_clock:
  35              	.LFB87:
  36              	 .file 1 ".././hal/sam3u1c/inc/sam3u/sysclk.h"
   1:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
   2:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \file
   3:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
   4:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Chip-specific system clock management functions.
   5:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
   6:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Copyright (c) 2011 - 2014 Atmel Corporation. All rights reserved.
   7:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
   8:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \asf_license_start
   9:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  10:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \page License
  11:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  12:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  15:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  18:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  22:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    from this software without specific prior written permission.
  24:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  25:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    Atmel microcontroller product.
  27:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  28:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  40:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \asf_license_stop
  41:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  42:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
  43:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  44:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifndef CHIP_SYSCLK_H_INCLUDED
  45:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define CHIP_SYSCLK_H_INCLUDED
  46:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  47:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #include <osc.h>
  48:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #include <pll.h>
  49:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  50:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
  51:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \page sysclk_quickstart Quick Start Guide for the System Clock Management service (SAM3U)
  52:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  53:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * This is the quick start guide for the \ref sysclk_group "System Clock Management"
  54:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * service, with step-by-step instructions on how to configure and use the service for
  55:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * specific use cases.
  56:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  57:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \section sysclk_quickstart_usecases System Clock Management use cases
  58:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * - \ref sysclk_quickstart_basic
  59:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  60:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \section sysclk_quickstart_basic Basic usage of the System Clock Management service
  61:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * This section will present a basic use case for the System Clock Management service.
  62:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * This use case will configure the main system clock to 96MHz, using an internal PLL
  63:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * module to multiply the frequency of a crystal attached to the microcontroller.
  64:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  65:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_prereq Prerequisites
  66:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  - None
  67:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  68:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps Initialization code
  69:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Add to the application initialization code:
  70:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \code
  71:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	sysclk_init();
  72:.././hal/sam3u1c/inc/sam3u/sysclk.h **** \endcode
  73:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  74:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps_workflow Workflow
  75:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * -# Configure the system clocks according to the settings in conf_clock.h:
  76:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    \code sysclk_init(); \endcode
  77:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  78:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_code Example code
  79:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   Add or uncomment the following in your conf_clock.h header file, commenting out all other
  80:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   definitions of the same symbol(s):
  81:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \code
  82:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_SYSCLK_SOURCE        SYSCLK_SRC_PLLACK
  83:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  84:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   // Fpll0 = (Fclk * PLL_mul) / PLL_div
  85:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_PLL0_SOURCE          PLL_SRC_MAINCK_XTAL
  86:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_PLL0_MUL             (96000000UL / BOARD_FREQ_MAINCK_XTAL)
  87:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_PLL0_DIV             1
  88:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  89:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   // Fbus = Fsys / BUS_div
  90:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_SYSCLK_PRES          SYSCLK_PRES_1
  91:.././hal/sam3u1c/inc/sam3u/sysclk.h **** \endcode
  92:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  93:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_workflow Workflow
  94:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  -# Configure the main system clock to use the output of the PLL module as its source:
  95:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \code #define CONFIG_SYSCLK_SOURCE          SYSCLK_SRC_PLLACK \endcode
  96:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  -# Configure the PLL module to use the fast external fast crystal oscillator as its source:
  97:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \code #define CONFIG_PLL0_SOURCE            PLL_SRC_MAINCK_XTAL \endcode
  98:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  -# Configure the PLL module to multiply the external fast crystal oscillator frequency up to 96
  99:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \code
 100:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	#define CONFIG_PLL0_MUL             (96000000UL / BOARD_FREQ_MAINCK_XTAL)
 101:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	#define CONFIG_PLL0_DIV             1
 102:.././hal/sam3u1c/inc/sam3u/sysclk.h **** \endcode
 103:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \note For user boards, \c BOARD_FREQ_MAINCK_XTAL should be defined in the board \c conf_board.
 104:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *         file as the frequency of the fast crystal attached to the microcontroller.
 105:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  -# Configure the main clock to run at the full 96MHz, disable scaling of the main system clock 
 106:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    \code
 107:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	#define CONFIG_SYSCLK_PRES         SYSCLK_PRES_1
 108:.././hal/sam3u1c/inc/sam3u/sysclk.h **** \endcode
 109:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    \note Some dividers are powers of two, while others are integer division factors. Refer to th
 110:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *          formulas in the conf_clock.h template commented above each division define.
 111:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 112:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 113:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /// @cond 0
 114:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**INDENT-OFF**/
 115:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef __cplusplus
 116:.././hal/sam3u1c/inc/sam3u/sysclk.h **** extern "C" {
 117:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 118:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**INDENT-ON**/
 119:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /// @endcond
 120:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 121:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 122:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \weakgroup sysclk_group
 123:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * @{
 124:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 125:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 126:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //! \name Configuration Symbols
 127:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 128:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 129:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \def CONFIG_SYSCLK_SOURCE
 130:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Initial/static main system clock source
 131:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 132:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * The main system clock will be configured to use this clock during
 133:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * initialization.
 134:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 135:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifndef CONFIG_SYSCLK_SOURCE
 136:.././hal/sam3u1c/inc/sam3u/sysclk.h **** # define CONFIG_SYSCLK_SOURCE   SYSCLK_SRC_MAINCK_4M_RC
 137:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 138:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 139:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \def CONFIG_SYSCLK_PRES
 140:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Initial CPU clock divider (mck)
 141:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 142:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * The MCK will run at
 143:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \f[
 144:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   f_{MCK} = \frac{f_{sys}}{\mathrm{CONFIG\_SYSCLK\_PRES}}\,\mbox{Hz}
 145:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \f]
 146:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * after initialization.
 147:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 148:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifndef CONFIG_SYSCLK_PRES
 149:.././hal/sam3u1c/inc/sam3u/sysclk.h **** # define CONFIG_SYSCLK_PRES  0
 150:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 151:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 152:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@}
 153:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 154:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //! \name Master Clock Sources (MCK)
 155:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 156:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_SLCK_RC              0       //!< Internal 32kHz RC oscillator as master source 
 157:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_SLCK_XTAL            1       //!< External 32kHz crystal oscillator as master so
 158:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_SLCK_BYPASS          2       //!< External 32kHz bypass oscillator as master sou
 159:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_4M_RC         3       //!< Internal 4MHz RC oscillator as master source c
 160:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_8M_RC         4       //!< Internal 8MHz RC oscillator as master source c
 161:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_12M_RC        5       //!< Internal 12MHz RC oscillator as master source 
 162:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_XTAL          6       //!< External crystal oscillator as master source c
 163:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_BYPASS        7       //!< External bypass oscillator as master source cl
 164:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_PLLACK               8       //!< Use PLLACK as master source clock
 165:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_UPLLCK               9       //!< Use UPLLCK as master source clock
 166:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@}
 167:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 168:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //! \name Master Clock Prescalers (MCK)
 169:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 170:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_1           PMC_MCKR_PRES_CLK_1     //!< Set master clock prescaler to 1
 171:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_2           PMC_MCKR_PRES_CLK_2     //!< Set master clock prescaler to 2
 172:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_4           PMC_MCKR_PRES_CLK_4     //!< Set master clock prescaler to 4
 173:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_8           PMC_MCKR_PRES_CLK_8     //!< Set master clock prescaler to 8
 174:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_16          PMC_MCKR_PRES_CLK_16    //!< Set master clock prescaler to 16
 175:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_32          PMC_MCKR_PRES_CLK_32    //!< Set master clock prescaler to 32
 176:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_64          PMC_MCKR_PRES_CLK_64    //!< Set master clock prescaler to 64
 177:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_3           PMC_MCKR_PRES_CLK_3     //!< Set master clock prescaler to 3
 178:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@}
 179:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 180:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 181:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \def CONFIG_USBCLK_SOURCE
 182:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Configuration symbol for the USB generic clock source
 183:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 184:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Sets the clock source to use for the USB. The source must also be properly
 185:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * configured.
 186:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 187:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Define this to one of the \c USBCLK_SRC_xxx settings. Leave it undefined if
 188:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * USB is not required.
 189:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 190:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef __DOXYGEN__
 191:.././hal/sam3u1c/inc/sam3u/sysclk.h **** # define CONFIG_USBCLK_SOURCE
 192:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 193:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 194:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 195:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \def CONFIG_USBCLK_DIV
 196:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Configuration symbol for the USB generic clock divider setting
 197:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 198:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Sets the clock division for the USB generic clock. If a USB clock source is
 199:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * selected with CONFIG_USBCLK_SOURCE, this configuration symbol must also be
 200:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * defined.
 201:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 202:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef __DOXYGEN__
 203:.././hal/sam3u1c/inc/sam3u/sysclk.h **** # define CONFIG_USBCLK_DIV
 204:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 205:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 206:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 207:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \name Querying the system clock
 208:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 209:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * The following functions may be used to query the current frequency of
 210:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * the system clock and the CPU and bus clocks derived from it.
 211:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * sysclk_get_main_hz() and sysclk_get_cpu_hz() can be assumed to be
 212:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * available on all platforms, although some platforms may define
 213:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * additional accessors for various chip-internal bus clocks. These are
 214:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * usually not intended to be queried directly by generic code.
 215:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 216:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 217:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 218:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 219:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 220:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 221:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \todo This function assumes that the main clock source never changes
 222:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * once it's been set up, and that PLL0 always runs at the compile-time
 223:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * configured default rate. While this is probably the most common
 224:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * configuration, which we want to support as a special case for
 225:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * performance reasons, we will at some point need to support more
 226:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * dynamic setups as well.
 227:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 228:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 229:.././hal/sam3u1c/inc/sam3u/sysclk.h **** extern uint32_t sysclk_initialized;
 230:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 231:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 232:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 233:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 234:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	if (!sysclk_initialized ) {
 235:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_4M_RC_HZ;
 236:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 237:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 238:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 239:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* Config system clock setting */
 240:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_SLCK_RC) {
 241:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_SLCK_32K_RC_HZ;
 242:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_SLCK_XTAL) {
 243:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_SLCK_32K_XTAL_HZ;
 244:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_SLCK_BYPASS) {
 245:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_SLCK_32K_BYPASS_HZ;
 246:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_4M_RC) {
 247:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_4M_RC_HZ;
 248:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_8M_RC) {
 249:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_8M_RC_HZ;
 250:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_12M_RC) {
 251:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_12M_RC_HZ;
 252:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_XTAL) {
 253:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_XTAL_HZ;
 254:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_BYPASS) {
 255:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_BYPASS_HZ;
 256:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 257:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef CONFIG_PLL0_SOURCE
 258:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
 259:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return pll_get_default_rate(0);
 260:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 261:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 262:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 263:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef CONFIG_PLL1_SOURCE
 264:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_UPLLCK) {
 265:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return PLL_UPLL_HZ;
 266:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 267:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 268:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	else {
 269:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
 270:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return 0;
 271:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 272:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 273:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 274:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 275:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock
 276:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 277:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \todo This function assumes that the CPU always runs at the system
 278:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * clock frequency. We want to support at least two more scenarios:
 279:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Fixed CPU/bus clock dividers (config symbols) and dynamic CPU/bus
 280:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * clock dividers (which may change at run time). Ditto for all the bus
 281:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * clocks.
 282:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 283:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 284:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 285:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 286:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 287:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
 288:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* prescaler, not an immediate value. */
 289:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	return sysclk_get_main_hz() /
 290:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
 291:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
 292:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 293:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 294:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 295:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Retrieves the current rate in Hz of the peripheral clocks.
 296:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 297:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \return Frequency of the peripheral clocks, in Hz.
 298:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 299:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline uint32_t sysclk_get_peripheral_hz(void)
 300:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 301:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
 302:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* prescaler, not an immediate value. */
 303:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	return sysclk_get_main_hz() /
 304:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
 305:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
 306:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 307:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 308:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 309:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Retrieves the current rate in Hz of the Peripheral Bus clock attached
 310:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *        to the specified peripheral.
 311:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 312:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \param module Pointer to the module's base address.
 313:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 314:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \return Frequency of the bus attached to the specified peripheral, in Hz.
 315:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 316:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline uint32_t sysclk_get_peripheral_bus_hz(const volatile void *module)
 317:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 318:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	UNUSED(module);
 319:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	return sysclk_get_peripheral_hz();
 320:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 321:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@}
 322:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 323:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //! \name Enabling and disabling synchronous clocks
 324:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 325:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 326:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 327:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Enable a peripheral's clock.
 328:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 329:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \param ul_id Id (number) of the peripheral clock.
 330:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 331:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
 332:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
  37              	 .loc 1 332 1
  38              	 .cfi_startproc
  39              	 
  40              	 
  41 0000 80B5     	 push {r7,lr}
  42              	.LCFI0:
  43              	 .cfi_def_cfa_offset 8
  44              	 .cfi_offset 7,-8
  45              	 .cfi_offset 14,-4
  46 0002 82B0     	 sub sp,sp,#8
  47              	.LCFI1:
  48              	 .cfi_def_cfa_offset 16
  49 0004 00AF     	 add r7,sp,#0
  50              	.LCFI2:
  51              	 .cfi_def_cfa_register 7
  52 0006 7860     	 str r0,[r7,#4]
 333:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	pmc_enable_periph_clk(ul_id);
  53              	 .loc 1 333 2
  54 0008 7868     	 ldr r0,[r7,#4]
  55 000a 034B     	 ldr r3,.L2
  56 000c 9847     	 blx r3
  57              	.LVL0:
 334:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
  58              	 .loc 1 334 1
  59 000e 00BF     	 nop
  60 0010 0837     	 adds r7,r7,#8
  61              	.LCFI3:
  62              	 .cfi_def_cfa_offset 8
  63 0012 BD46     	 mov sp,r7
  64              	.LCFI4:
  65              	 .cfi_def_cfa_register 13
  66              	 
  67 0014 80BD     	 pop {r7,pc}
  68              	.L3:
  69 0016 00BF     	 .align 2
  70              	.L2:
  71 0018 00000000 	 .word pmc_enable_periph_clk
  72              	 .cfi_endproc
  73              	.LFE87:
  75              	 .section .text.ioport_init,"ax",%progbits
  76              	 .align 1
  77              	 .syntax unified
  78              	 .thumb
  79              	 .thumb_func
  80              	 .fpu softvfp
  82              	ioport_init:
  83              	.LFB110:
  84              	 .file 2 ".././hal/sam3u1c/inc/ioport.h"
   1:.././hal/sam3u1c/inc/ioport.h **** /**
   2:.././hal/sam3u1c/inc/ioport.h ****  * \file
   3:.././hal/sam3u1c/inc/ioport.h ****  *
   4:.././hal/sam3u1c/inc/ioport.h ****  * \brief Common IOPORT service main header file for AVR, UC3 and ARM
   5:.././hal/sam3u1c/inc/ioport.h ****  *        architectures.
   6:.././hal/sam3u1c/inc/ioport.h ****  *
   7:.././hal/sam3u1c/inc/ioport.h ****  * Copyright (c) 2012-2014 Atmel Corporation. All rights reserved.
   8:.././hal/sam3u1c/inc/ioport.h ****  *
   9:.././hal/sam3u1c/inc/ioport.h ****  * \asf_license_start
  10:.././hal/sam3u1c/inc/ioport.h ****  *
  11:.././hal/sam3u1c/inc/ioport.h ****  * \page License
  12:.././hal/sam3u1c/inc/ioport.h ****  *
  13:.././hal/sam3u1c/inc/ioport.h ****  * Redistribution and use in source and binary forms, with or without
  14:.././hal/sam3u1c/inc/ioport.h ****  * modification, are permitted provided that the following conditions are met:
  15:.././hal/sam3u1c/inc/ioport.h ****  *
  16:.././hal/sam3u1c/inc/ioport.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:.././hal/sam3u1c/inc/ioport.h ****  *    this list of conditions and the following disclaimer.
  18:.././hal/sam3u1c/inc/ioport.h ****  *
  19:.././hal/sam3u1c/inc/ioport.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  20:.././hal/sam3u1c/inc/ioport.h ****  *    this list of conditions and the following disclaimer in the documentation
  21:.././hal/sam3u1c/inc/ioport.h ****  *    and/or other materials provided with the distribution.
  22:.././hal/sam3u1c/inc/ioport.h ****  *
  23:.././hal/sam3u1c/inc/ioport.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  24:.././hal/sam3u1c/inc/ioport.h ****  *    from this software without specific prior written permission.
  25:.././hal/sam3u1c/inc/ioport.h ****  *
  26:.././hal/sam3u1c/inc/ioport.h ****  * 4. This software may only be redistributed and used in connection with an
  27:.././hal/sam3u1c/inc/ioport.h ****  *    Atmel microcontroller product.
  28:.././hal/sam3u1c/inc/ioport.h ****  *
  29:.././hal/sam3u1c/inc/ioport.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  30:.././hal/sam3u1c/inc/ioport.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  31:.././hal/sam3u1c/inc/ioport.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  32:.././hal/sam3u1c/inc/ioport.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  33:.././hal/sam3u1c/inc/ioport.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:.././hal/sam3u1c/inc/ioport.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  35:.././hal/sam3u1c/inc/ioport.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  36:.././hal/sam3u1c/inc/ioport.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  37:.././hal/sam3u1c/inc/ioport.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:.././hal/sam3u1c/inc/ioport.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:.././hal/sam3u1c/inc/ioport.h ****  * POSSIBILITY OF SUCH DAMAGE.
  40:.././hal/sam3u1c/inc/ioport.h ****  *
  41:.././hal/sam3u1c/inc/ioport.h ****  * \asf_license_stop
  42:.././hal/sam3u1c/inc/ioport.h ****  *
  43:.././hal/sam3u1c/inc/ioport.h ****  */
  44:.././hal/sam3u1c/inc/ioport.h **** #ifndef IOPORT_H
  45:.././hal/sam3u1c/inc/ioport.h **** #define IOPORT_H
  46:.././hal/sam3u1c/inc/ioport.h **** 
  47:.././hal/sam3u1c/inc/ioport.h **** #ifdef __cplusplus
  48:.././hal/sam3u1c/inc/ioport.h **** extern "C" {
  49:.././hal/sam3u1c/inc/ioport.h **** #endif
  50:.././hal/sam3u1c/inc/ioport.h **** 
  51:.././hal/sam3u1c/inc/ioport.h **** #include <parts.h>
  52:.././hal/sam3u1c/inc/ioport.h **** #include <compiler.h>
  53:.././hal/sam3u1c/inc/ioport.h **** 
  54:.././hal/sam3u1c/inc/ioport.h **** /**
  55:.././hal/sam3u1c/inc/ioport.h ****  * \defgroup ioport_group Common IOPORT API
  56:.././hal/sam3u1c/inc/ioport.h ****  *
  57:.././hal/sam3u1c/inc/ioport.h ****  * See \ref ioport_quickstart.
  58:.././hal/sam3u1c/inc/ioport.h ****  *
  59:.././hal/sam3u1c/inc/ioport.h ****  * This is common IOPORT service for GPIO pin configuration and control in a
  60:.././hal/sam3u1c/inc/ioport.h ****  * standardized manner across the MEGA, MEGA_RF, XMEGA, UC3 and ARM devices.
  61:.././hal/sam3u1c/inc/ioport.h ****  *
  62:.././hal/sam3u1c/inc/ioport.h ****  * Port pin control code is optimized for each platform, and should produce
  63:.././hal/sam3u1c/inc/ioport.h ****  * both compact and fast execution times when used with constant values.
  64:.././hal/sam3u1c/inc/ioport.h ****  *
  65:.././hal/sam3u1c/inc/ioport.h ****  * \section dependencies Dependencies
  66:.././hal/sam3u1c/inc/ioport.h ****  * This driver depends on the following modules:
  67:.././hal/sam3u1c/inc/ioport.h ****  * - \ref sysclk_group for clock speed and functions.
  68:.././hal/sam3u1c/inc/ioport.h ****  * @{
  69:.././hal/sam3u1c/inc/ioport.h ****  */
  70:.././hal/sam3u1c/inc/ioport.h **** 
  71:.././hal/sam3u1c/inc/ioport.h **** /**
  72:.././hal/sam3u1c/inc/ioport.h ****  * \def IOPORT_CREATE_PIN(port, pin)
  73:.././hal/sam3u1c/inc/ioport.h ****  * \brief Create IOPORT pin number
  74:.././hal/sam3u1c/inc/ioport.h ****  *
  75:.././hal/sam3u1c/inc/ioport.h ****  * Create a IOPORT pin number for use with the IOPORT functions.
  76:.././hal/sam3u1c/inc/ioport.h ****  *
  77:.././hal/sam3u1c/inc/ioport.h ****  * \param port IOPORT port (e.g. PORTA, PA or PIOA depending on chosen
  78:.././hal/sam3u1c/inc/ioport.h ****  *             architecture)
  79:.././hal/sam3u1c/inc/ioport.h ****  * \param pin IOPORT zero-based index of the I/O pin
  80:.././hal/sam3u1c/inc/ioport.h ****  */
  81:.././hal/sam3u1c/inc/ioport.h **** 
  82:.././hal/sam3u1c/inc/ioport.h **** /** \brief IOPORT pin directions */
  83:.././hal/sam3u1c/inc/ioport.h **** enum ioport_direction {
  84:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_DIR_INPUT,  /*!< IOPORT input direction */
  85:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_DIR_OUTPUT, /*!< IOPORT output direction */
  86:.././hal/sam3u1c/inc/ioport.h **** };
  87:.././hal/sam3u1c/inc/ioport.h **** 
  88:.././hal/sam3u1c/inc/ioport.h **** /** \brief IOPORT levels */
  89:.././hal/sam3u1c/inc/ioport.h **** enum ioport_value {
  90:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_PIN_LEVEL_LOW,  /*!< IOPORT pin value low */
  91:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_PIN_LEVEL_HIGH, /*!< IOPORT pin value high */
  92:.././hal/sam3u1c/inc/ioport.h **** };
  93:.././hal/sam3u1c/inc/ioport.h **** 
  94:.././hal/sam3u1c/inc/ioport.h **** #if MEGA_RF
  95:.././hal/sam3u1c/inc/ioport.h **** /** \brief IOPORT edge sense modes */
  96:.././hal/sam3u1c/inc/ioport.h **** enum ioport_sense {
  97:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_LEVEL,     /*!< IOPORT sense low level  */
  98:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_BOTHEDGES, /*!< IOPORT sense both rising and falling edges */
  99:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_FALLING,   /*!< IOPORT sense falling edges */
 100:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_RISING,    /*!< IOPORT sense rising edges */
 101:.././hal/sam3u1c/inc/ioport.h **** };
 102:.././hal/sam3u1c/inc/ioport.h **** #elif SAM && !SAM4L
 103:.././hal/sam3u1c/inc/ioport.h **** /** \brief IOPORT edge sense modes */
 104:.././hal/sam3u1c/inc/ioport.h **** enum ioport_sense {
 105:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_BOTHEDGES, /*!< IOPORT sense both rising and falling edges */
 106:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_FALLING,   /*!< IOPORT sense falling edges */
 107:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_RISING,    /*!< IOPORT sense rising edges */
 108:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_LEVEL_LOW, /*!< IOPORT sense low level  */
 109:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_LEVEL_HIGH,/*!< IOPORT sense High level  */
 110:.././hal/sam3u1c/inc/ioport.h **** };
 111:.././hal/sam3u1c/inc/ioport.h **** #else
 112:.././hal/sam3u1c/inc/ioport.h **** enum ioport_sense {
 113:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_BOTHEDGES, /*!< IOPORT sense both rising and falling edges */
 114:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_RISING,    /*!< IOPORT sense rising edges */
 115:.././hal/sam3u1c/inc/ioport.h **** 	IOPORT_SENSE_FALLING,   /*!< IOPORT sense falling edges */
 116:.././hal/sam3u1c/inc/ioport.h **** };
 117:.././hal/sam3u1c/inc/ioport.h **** #endif
 118:.././hal/sam3u1c/inc/ioport.h **** 
 119:.././hal/sam3u1c/inc/ioport.h **** 
 120:.././hal/sam3u1c/inc/ioport.h **** #if XMEGA
 121:.././hal/sam3u1c/inc/ioport.h **** # include "xmega/ioport.h"
 122:.././hal/sam3u1c/inc/ioport.h **** # if defined(IOPORT_XMEGA_COMPAT)
 123:.././hal/sam3u1c/inc/ioport.h **** #  include "xmega/ioport_compat.h"
 124:.././hal/sam3u1c/inc/ioport.h **** # endif
 125:.././hal/sam3u1c/inc/ioport.h **** #elif MEGA
 126:.././hal/sam3u1c/inc/ioport.h **** #  include "mega/ioport.h"
 127:.././hal/sam3u1c/inc/ioport.h **** #elif UC3
 128:.././hal/sam3u1c/inc/ioport.h **** # include "uc3/ioport.h"
 129:.././hal/sam3u1c/inc/ioport.h **** #elif SAM
 130:.././hal/sam3u1c/inc/ioport.h **** # if SAM4L
 131:.././hal/sam3u1c/inc/ioport.h **** #  include "sam/ioport_gpio.h"
 132:.././hal/sam3u1c/inc/ioport.h **** # elif (SAMD20 | SAMD21)
 133:.././hal/sam3u1c/inc/ioport.h **** #  include "sam0/ioport.h"
 134:.././hal/sam3u1c/inc/ioport.h **** # else
 135:.././hal/sam3u1c/inc/ioport.h **** #  include "sam/ioport_pio.h"
 136:.././hal/sam3u1c/inc/ioport.h **** # endif
 137:.././hal/sam3u1c/inc/ioport.h **** #endif
 138:.././hal/sam3u1c/inc/ioport.h **** 
 139:.././hal/sam3u1c/inc/ioport.h **** /**
 140:.././hal/sam3u1c/inc/ioport.h ****  * \brief Initializes the IOPORT service, ready for use.
 141:.././hal/sam3u1c/inc/ioport.h ****  *
 142:.././hal/sam3u1c/inc/ioport.h ****  * This function must be called before using any other functions in the IOPORT
 143:.././hal/sam3u1c/inc/ioport.h ****  * service.
 144:.././hal/sam3u1c/inc/ioport.h ****  */
 145:.././hal/sam3u1c/inc/ioport.h **** static inline void ioport_init(void)
 146:.././hal/sam3u1c/inc/ioport.h **** {
  85              	 .loc 2 146 1
  86              	 .cfi_startproc
  87              	 
  88              	 
  89 0000 80B5     	 push {r7,lr}
  90              	.LCFI5:
  91              	 .cfi_def_cfa_offset 8
  92              	 .cfi_offset 7,-8
  93              	 .cfi_offset 14,-4
  94 0002 00AF     	 add r7,sp,#0
  95              	.LCFI6:
  96              	 .cfi_def_cfa_register 7
  97              	.LBB4:
  98              	.LBB5:
  99              	 .file 3 ".././hal/sam3u1c/inc/sam/ioport_pio.h"
   1:.././hal/sam3u1c/inc/sam/ioport_pio.h **** /**
   2:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * \file
   3:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
   4:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * \brief SAM architecture specific IOPORT service implementation header file.
   5:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
   6:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * Copyright (c) 2012-2014 Atmel Corporation. All rights reserved.
   7:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
   8:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * \asf_license_start
   9:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  10:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * \page License
  11:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  12:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * Redistribution and use in source and binary forms, with or without
  13:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * modification, are permitted provided that the following conditions are met:
  14:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  15:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *    this list of conditions and the following disclaimer.
  17:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  18:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *    and/or other materials provided with the distribution.
  21:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  22:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *    from this software without specific prior written permission.
  24:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  25:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * 4. This software may only be redistributed and used in connection with an
  26:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *    Atmel microcontroller product.
  27:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  28:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  40:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * \asf_license_stop
  41:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  42:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  */
  43:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #ifndef IOPORT_SAM_H
  44:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_SAM_H
  45:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  46:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #include <sysclk.h>
  47:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  48:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_CREATE_PIN(port, pin) ((IOPORT_ ## port) * 32 + (pin))
  49:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_BASE_ADDRESS (uintptr_t)PIOA
  50:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_PIO_OFFSET   ((uintptr_t)PIOB - (uintptr_t)PIOA)
  51:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  52:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_PIOA     0
  53:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_PIOB     1
  54:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_PIOC     2
  55:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_PIOD     3
  56:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_PIOE     4
  57:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_PIOF     5
  58:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  59:.././hal/sam3u1c/inc/sam/ioport_pio.h **** /**
  60:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * \weakgroup ioport_group
  61:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * \section ioport_modes IOPORT Modes
  62:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  63:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * For details on these please see the SAM Manual.
  64:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  *
  65:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  * @{
  66:.././hal/sam3u1c/inc/sam/ioport_pio.h ****  */
  67:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  68:.././hal/sam3u1c/inc/sam/ioport_pio.h **** /** \name IOPORT Mode bit definitions */
  69:.././hal/sam3u1c/inc/sam/ioport_pio.h **** /** @{ */
  70:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_MUX_MASK            (0x7 << 0) /*!< MUX bits mask */
  71:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_MUX_BIT0            (  1 << 0) /*!< MUX BIT0 mask */
  72:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  73:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #if SAM3N || SAM3S || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAMG || SAM4CP
  74:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_MUX_BIT1            (  1 << 1) /*!< MUX BIT1 mask */
  75:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
  76:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  77:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_MUX_A               (  0 << 0) /*!< MUX function A */
  78:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_MUX_B               (  1 << 0) /*!< MUX function B */
  79:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  80:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #if SAM3N || SAM3S || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAMG || SAM4CP
  81:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_MUX_C               (  2 << 0) /*!< MUX function C */
  82:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_MUX_D               (  3 << 0) /*!< MUX function D */
  83:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
  84:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  85:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_PULLUP              (  1 << 3) /*!< Pull-up */
  86:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  87:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #if SAM3N || SAM3S || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAMG || SAM4CP
  88:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_PULLDOWN            (  1 << 4) /*!< Pull-down */
  89:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
  90:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  91:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_OPEN_DRAIN          (  1 << 5) /*!< Open drain */
  92:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  93:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_GLITCH_FILTER       (  1 << 6) /*!< Glitch filter */
  94:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #define IOPORT_MODE_DEBOUNCE            (  1 << 7) /*!< Input debounce */
  95:.././hal/sam3u1c/inc/sam/ioport_pio.h **** /** @} */
  96:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  97:.././hal/sam3u1c/inc/sam/ioport_pio.h **** /** @} */
  98:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
  99:.././hal/sam3u1c/inc/sam/ioport_pio.h **** typedef uint32_t ioport_mode_t;
 100:.././hal/sam3u1c/inc/sam/ioport_pio.h **** typedef uint32_t ioport_pin_t;
 101:.././hal/sam3u1c/inc/sam/ioport_pio.h **** typedef uint32_t ioport_port_t;
 102:.././hal/sam3u1c/inc/sam/ioport_pio.h **** typedef uint32_t ioport_port_mask_t;
 103:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
 104:.././hal/sam3u1c/inc/sam/ioport_pio.h **** __always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
 105:.././hal/sam3u1c/inc/sam/ioport_pio.h **** {
 106:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	return pin >> 5;
 107:.././hal/sam3u1c/inc/sam/ioport_pio.h **** }
 108:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
 109:.././hal/sam3u1c/inc/sam/ioport_pio.h **** __always_inline static Pio *arch_ioport_port_to_base(ioport_port_t port)
 110:.././hal/sam3u1c/inc/sam/ioport_pio.h **** {
 111:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #if (SAM4C || SAM4CM || SAM4CP)
 112:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	if (port == IOPORT_PIOC) {
 113:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 		return (Pio *)(uintptr_t)PIOC;
 114:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #  ifdef ID_PIOD
 115:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	} else if (port == IOPORT_PIOD) {
 116:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 		return (Pio *)(uintptr_t)PIOD;
 117:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #  endif
 118:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	} else {
 119:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
 120:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 		       (IOPORT_PIO_OFFSET * port));
 121:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	}
 122:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #else
 123:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
 124:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	       (IOPORT_PIO_OFFSET * port));
 125:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
 126:.././hal/sam3u1c/inc/sam/ioport_pio.h **** }
 127:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
 128:.././hal/sam3u1c/inc/sam/ioport_pio.h **** __always_inline static Pio *arch_ioport_pin_to_base(ioport_pin_t pin)
 129:.././hal/sam3u1c/inc/sam/ioport_pio.h **** {
 130:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
 131:.././hal/sam3u1c/inc/sam/ioport_pio.h **** }
 132:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
 133:.././hal/sam3u1c/inc/sam/ioport_pio.h **** __always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
 134:.././hal/sam3u1c/inc/sam/ioport_pio.h **** {
 135:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	return 1U << (pin & 0x1F);
 136:.././hal/sam3u1c/inc/sam/ioport_pio.h **** }
 137:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 
 138:.././hal/sam3u1c/inc/sam/ioport_pio.h **** __always_inline static void arch_ioport_init(void)
 139:.././hal/sam3u1c/inc/sam/ioport_pio.h **** {
 140:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #ifdef ID_PIOA
 141:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	sysclk_enable_peripheral_clock(ID_PIOA);
 100              	 .loc 3 141 2
 101 0004 0A20     	 movs r0,#10
 102 0006 044B     	 ldr r3,.L5
 103 0008 9847     	 blx r3
 104              	.LVL1:
 142:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
 143:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #ifdef ID_PIOB
 144:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	sysclk_enable_peripheral_clock(ID_PIOB);
 105              	 .loc 3 144 2
 106 000a 0B20     	 movs r0,#11
 107 000c 024B     	 ldr r3,.L5
 108 000e 9847     	 blx r3
 109              	.LVL2:
 145:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
 146:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #ifdef ID_PIOC
 147:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	sysclk_enable_peripheral_clock(ID_PIOC);
 148:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
 149:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #ifdef ID_PIOD
 150:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	sysclk_enable_peripheral_clock(ID_PIOD);
 151:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
 152:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #ifdef ID_PIOE
 153:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	sysclk_enable_peripheral_clock(ID_PIOE);
 154:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
 155:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #ifdef ID_PIOF
 156:.././hal/sam3u1c/inc/sam/ioport_pio.h **** 	sysclk_enable_peripheral_clock(ID_PIOF);
 157:.././hal/sam3u1c/inc/sam/ioport_pio.h **** #endif
 158:.././hal/sam3u1c/inc/sam/ioport_pio.h **** }
 110              	 .loc 3 158 1
 111 0010 00BF     	 nop
 112              	.LBE5:
 113              	.LBE4:
 147:.././hal/sam3u1c/inc/ioport.h **** 	arch_ioport_init();
 148:.././hal/sam3u1c/inc/ioport.h **** }
 114              	 .loc 2 148 1
 115 0012 00BF     	 nop
 116 0014 80BD     	 pop {r7,pc}
 117              	.L6:
 118 0016 00BF     	 .align 2
 119              	.L5:
 120 0018 00000000 	 .word sysclk_enable_peripheral_clock
 121              	 .cfi_endproc
 122              	.LFE110:
 124              	 .section .text.iopins_sleep,"ax",%progbits
 125              	 .align 1
 126              	 .global iopins_sleep
 127              	 .syntax unified
 128              	 .thumb
 129              	 .thumb_func
 130              	 .fpu softvfp
 132              	iopins_sleep:
 133              	.LFB131:
 134              	 .file 4 ".././hal/sam3u1c/init.c"
   1:.././hal/sam3u1c/init.c **** /**
   2:.././hal/sam3u1c/init.c ****  * \file
   3:.././hal/sam3u1c/init.c ****  *
   4:.././hal/sam3u1c/init.c ****  * \brief SAM3U-EK board init.
   5:.././hal/sam3u1c/init.c ****  *
   6:.././hal/sam3u1c/init.c ****  * Copyright (c) 2011 - 2013 Atmel Corporation. All rights reserved.
   7:.././hal/sam3u1c/init.c ****  *
   8:.././hal/sam3u1c/init.c ****  * \asf_license_start
   9:.././hal/sam3u1c/init.c ****  *
  10:.././hal/sam3u1c/init.c ****  * \page License
  11:.././hal/sam3u1c/init.c ****  *
  12:.././hal/sam3u1c/init.c ****  * Redistribution and use in source and binary forms, with or without
  13:.././hal/sam3u1c/init.c ****  * modification, are permitted provided that the following conditions are met:
  14:.././hal/sam3u1c/init.c ****  *
  15:.././hal/sam3u1c/init.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:.././hal/sam3u1c/init.c ****  *    this list of conditions and the following disclaimer.
  17:.././hal/sam3u1c/init.c ****  *
  18:.././hal/sam3u1c/init.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/sam3u1c/init.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:.././hal/sam3u1c/init.c ****  *    and/or other materials provided with the distribution.
  21:.././hal/sam3u1c/init.c ****  *
  22:.././hal/sam3u1c/init.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:.././hal/sam3u1c/init.c ****  *    from this software without specific prior written permission.
  24:.././hal/sam3u1c/init.c ****  *
  25:.././hal/sam3u1c/init.c ****  * 4. This software may only be redistributed and used in connection with an
  26:.././hal/sam3u1c/init.c ****  *    Atmel microcontroller product.
  27:.././hal/sam3u1c/init.c ****  *
  28:.././hal/sam3u1c/init.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:.././hal/sam3u1c/init.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:.././hal/sam3u1c/init.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:.././hal/sam3u1c/init.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:.././hal/sam3u1c/init.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/sam3u1c/init.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:.././hal/sam3u1c/init.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:.././hal/sam3u1c/init.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:.././hal/sam3u1c/init.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:.././hal/sam3u1c/init.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:.././hal/sam3u1c/init.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:.././hal/sam3u1c/init.c ****  *
  40:.././hal/sam3u1c/init.c ****  * \asf_license_stop
  41:.././hal/sam3u1c/init.c ****  *
  42:.././hal/sam3u1c/init.c ****  */
  43:.././hal/sam3u1c/init.c **** 
  44:.././hal/sam3u1c/init.c **** #include "compiler.h"
  45:.././hal/sam3u1c/init.c **** #include "board.h"
  46:.././hal/sam3u1c/init.c **** #include "conf_board.h"
  47:.././hal/sam3u1c/init.c **** #include "gpio.h"
  48:.././hal/sam3u1c/init.c **** #include "ioport.h"
  49:.././hal/sam3u1c/init.c **** 
  50:.././hal/sam3u1c/init.c **** 
  51:.././hal/sam3u1c/init.c **** void iopins_sleep(void);
  52:.././hal/sam3u1c/init.c **** void iopins_normal(void);
  53:.././hal/sam3u1c/init.c **** 
  54:.././hal/sam3u1c/init.c **** void iopins_sleep(void)
  55:.././hal/sam3u1c/init.c **** {
 135              	 .loc 4 55 1
 136              	 .cfi_startproc
 137              	 
 138              	 
 139              	 
 140 0000 80B4     	 push {r7}
 141              	.LCFI7:
 142              	 .cfi_def_cfa_offset 4
 143              	 .cfi_offset 7,-4
 144 0002 00AF     	 add r7,sp,#0
 145              	.LCFI8:
 146              	 .cfi_def_cfa_register 7
  56:.././hal/sam3u1c/init.c **** 	/* LEDs Off */
  57:.././hal/sam3u1c/init.c **** 	
  58:.././hal/sam3u1c/init.c **** 	/* FPGA Program low */
  59:.././hal/sam3u1c/init.c **** 	
  60:.././hal/sam3u1c/init.c **** 	/* */
  61:.././hal/sam3u1c/init.c **** }
 147              	 .loc 4 61 1
 148 0004 00BF     	 nop
 149 0006 BD46     	 mov sp,r7
 150              	.LCFI9:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 0008 80BC     	 pop {r7}
 154              	.LCFI10:
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 000a 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE131:
 161              	 .section .text.iopins_normal,"ax",%progbits
 162              	 .align 1
 163              	 .global iopins_normal
 164              	 .syntax unified
 165              	 .thumb
 166              	 .thumb_func
 167              	 .fpu softvfp
 169              	iopins_normal:
 170              	.LFB132:
  62:.././hal/sam3u1c/init.c **** 
  63:.././hal/sam3u1c/init.c **** void iopins_normal(void)
  64:.././hal/sam3u1c/init.c **** {
 171              	 .loc 4 64 1
 172              	 .cfi_startproc
 173              	 
 174              	 
 175 0000 80B5     	 push {r7,lr}
 176              	.LCFI11:
 177              	 .cfi_def_cfa_offset 8
 178              	 .cfi_offset 7,-8
 179              	 .cfi_offset 14,-4
 180 0002 00AF     	 add r7,sp,#0
 181              	.LCFI12:
 182              	 .cfi_def_cfa_register 7
  65:.././hal/sam3u1c/init.c **** 	/* Configure LED pins */
  66:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
 183              	 .loc 4 66 2
 184 0004 4FF06051 	 mov r1,#939524096
 185 0008 1D20     	 movs r0,#29
 186 000a 0D4B     	 ldr r3,.L9
 187 000c 9847     	 blx r3
 188              	.LVL3:
  67:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
 189              	 .loc 4 67 2
 190 000e 4FF06051 	 mov r1,#939524096
 191 0012 1F20     	 movs r0,#31
 192 0014 0A4B     	 ldr r3,.L9
 193 0016 9847     	 blx r3
 194              	.LVL4:
  68:.././hal/sam3u1c/init.c **** 	//gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
  69:.././hal/sam3u1c/init.c **** 	
  70:.././hal/sam3u1c/init.c **** 	/* Configure MOSFET for turning on-off system */
  71:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_PWRON_GPIO, PIN_PWRON_FLAGS);
 195              	 .loc 4 71 2
 196 0018 4FF04051 	 mov r1,#805306368
 197 001c 1820     	 movs r0,#24
 198 001e 084B     	 ldr r3,.L9
 199 0020 9847     	 blx r3
 200              	.LVL5:
  72:.././hal/sam3u1c/init.c **** 	//board_sram_pwron();
  73:.././hal/sam3u1c/init.c **** 
  74:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_UART_CONSOLE
  75:.././hal/sam3u1c/init.c **** 	/* Configure UART pins */
  76:.././hal/sam3u1c/init.c **** 	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
 201              	 .loc 4 76 2
 202 0022 4FF00062 	 mov r2,#134217728
 203 0026 4FF4C051 	 mov r1,#6144
 204 002a 0648     	 ldr r0,.L9+4
 205 002c 064B     	 ldr r3,.L9+8
 206 002e 9847     	 blx r3
 207              	.LVL6:
  77:.././hal/sam3u1c/init.c **** #endif
  78:.././hal/sam3u1c/init.c **** 
  79:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_PWM_LED0
  80:.././hal/sam3u1c/init.c **** 	/* Configure PWM LED0 pin */
  81:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_PWM_LED0_GPIO, PIN_PWM_LED0_FLAGS);
  82:.././hal/sam3u1c/init.c **** #endif
  83:.././hal/sam3u1c/init.c **** 
  84:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_PWM_LED1
  85:.././hal/sam3u1c/init.c **** 	/* Configure PWM LED1 pin */
  86:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_PWM_LED1_GPIO, PIN_PWM_LED1_FLAGS);
  87:.././hal/sam3u1c/init.c **** #endif
  88:.././hal/sam3u1c/init.c **** 
  89:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_TWI0
  90:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);
  91:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);
  92:.././hal/sam3u1c/init.c **** #endif
  93:.././hal/sam3u1c/init.c **** 
  94:.././hal/sam3u1c/init.c **** 	/* Configure SPI pins */
  95:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_SPI
  96:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  97:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  98:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  99:.././hal/sam3u1c/init.c **** 
 100:.././hal/sam3u1c/init.c **** 	/**
 101:.././hal/sam3u1c/init.c **** 	 * For NPCS 1, 2, and 3, different PINs can be used to access the same NPCS line.
 102:.././hal/sam3u1c/init.c **** 	 * Depending on the application requirements, the default PIN may not be available.
 103:.././hal/sam3u1c/init.c **** 	 * Hence a different PIN should be selected using the CONF_BOARD_SPI_NPCS_GPIO and
 104:.././hal/sam3u1c/init.c **** 	 * CONF_BOARD_SPI_NPCS_FLAGS macros.
 105:.././hal/sam3u1c/init.c **** 	 */
 106:.././hal/sam3u1c/init.c **** 
 107:.././hal/sam3u1c/init.c **** #  ifdef CONF_BOARD_SPI_NPCS0
 108:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
 109:.././hal/sam3u1c/init.c **** #  endif
 110:.././hal/sam3u1c/init.c **** 
 111:.././hal/sam3u1c/init.c **** #endif /* CONF_BOARD_SPI */
 112:.././hal/sam3u1c/init.c **** 
 113:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_USART_RXD
 114:.././hal/sam3u1c/init.c **** 	/* Configure USART RXD pin */
 115:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_USART1_RXD_IDX, PIN_USART1_RXD_FLAGS);
 116:.././hal/sam3u1c/init.c **** #endif
 117:.././hal/sam3u1c/init.c **** 
 118:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_USART_TXD
 119:.././hal/sam3u1c/init.c **** 	/* Configure USART TXD pin */
 120:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_USART1_TXD_IDX, PIN_USART1_TXD_FLAGS);
 121:.././hal/sam3u1c/init.c **** #endif
 122:.././hal/sam3u1c/init.c **** 
 123:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_USART_SCK
 124:.././hal/sam3u1c/init.c **** 	/* Configure USART synchronous communication SCK pin */
 125:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_USART1_SCK_IDX, PIN_USART1_SCK_FLAGS);
 126:.././hal/sam3u1c/init.c **** #endif
 127:.././hal/sam3u1c/init.c **** 
 128:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_SMC_PSRAM
 129:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAG1);
 130:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAG1);
 131:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAG1);
 132:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAG1);
 133:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAG1);
 134:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAG1);
 135:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAG1);
 136:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAG1);
 137:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D8, PIN_EBI_DATA_BUS_FLAG1);
 138:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D9, PIN_EBI_DATA_BUS_FLAG1);
 139:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D10, PIN_EBI_DATA_BUS_FLAG1);
 140:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D11, PIN_EBI_DATA_BUS_FLAG1);
 141:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D12, PIN_EBI_DATA_BUS_FLAG1);
 142:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D13, PIN_EBI_DATA_BUS_FLAG1);
 143:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D14, PIN_EBI_DATA_BUS_FLAG1);
 144:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_DATA_BUS_D15, PIN_EBI_DATA_BUS_FLAG2);
 145:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
 146:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
 147:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_NCS0, PIN_EBI_NCS0_FLAGS);
 148:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_NBS0, PIN_EBI_ADDR_BUS_FLAG1);
 149:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_NBS1, PIN_EBI_ADDR_BUS_FLAG2);
 150:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A1, PIN_EBI_ADDR_BUS_FLAG1);
 151:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A2, PIN_EBI_ADDR_BUS_FLAG2);
 152:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A3, PIN_EBI_ADDR_BUS_FLAG2);
 153:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A4, PIN_EBI_ADDR_BUS_FLAG2);
 154:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A5, PIN_EBI_ADDR_BUS_FLAG2);
 155:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A6, PIN_EBI_ADDR_BUS_FLAG2);
 156:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A7, PIN_EBI_ADDR_BUS_FLAG2);
 157:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A8, PIN_EBI_ADDR_BUS_FLAG2);
 158:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A9, PIN_EBI_ADDR_BUS_FLAG2);
 159:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A10, PIN_EBI_ADDR_BUS_FLAG2);
 160:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A11, PIN_EBI_ADDR_BUS_FLAG2);
 161:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A12, PIN_EBI_ADDR_BUS_FLAG2);
 162:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A13, PIN_EBI_ADDR_BUS_FLAG2);
 163:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A14, PIN_EBI_ADDR_BUS_FLAG2);
 164:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A15, PIN_EBI_ADDR_BUS_FLAG2);
 165:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A16, PIN_EBI_ADDR_BUS_FLAG2);
 166:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A17, PIN_EBI_ADDR_BUS_FLAG2);
 167:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A18, PIN_EBI_ADDR_BUS_FLAG2);
 168:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A19, PIN_EBI_ADDR_BUS_FLAG2);
 169:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_EBI_ADDR_BUS_A20, PIN_EBI_ADDR_BUS_FLAG2);
 170:.././hal/sam3u1c/init.c **** #endif
 171:.././hal/sam3u1c/init.c **** 
 172:.././hal/sam3u1c/init.c **** 
 173:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_ISO7816_RST
 174:.././hal/sam3u1c/init.c **** 	/* Configure ISO7816 card reset pin */
 175:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_ISO7816_RST_IDX, PIN_ISO7816_RST_FLAG);
 176:.././hal/sam3u1c/init.c **** #endif
 177:.././hal/sam3u1c/init.c **** 
 178:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_ISO7816
 179:.././hal/sam3u1c/init.c **** 	/* Configure ISO7816 interface TXD & SCK pin */
 180:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
 181:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_USART0_SCK_IDX, PIN_USART0_SCK_FLAGS);
 182:.././hal/sam3u1c/init.c **** #endif
 183:.././hal/sam3u1c/init.c **** 
 184:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_TWI0
 185:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);
 186:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);
 187:.././hal/sam3u1c/init.c **** #endif
 188:.././hal/sam3u1c/init.c **** 
 189:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_PCK0
 190:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(PIN_PCK0, PIN_PCK0_FLAGS);
 191:.././hal/sam3u1c/init.c **** #endif
 192:.././hal/sam3u1c/init.c **** 
 193:.././hal/sam3u1c/init.c **** #ifdef CONF_BOARD_PCK1
 194:.././hal/sam3u1c/init.c **** gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
 208              	 .loc 4 194 1
 209 0030 4FF08051 	 mov r1,#268435456
 210 0034 3820     	 movs r0,#56
 211 0036 024B     	 ldr r3,.L9
 212 0038 9847     	 blx r3
 213              	.LVL7:
 195:.././hal/sam3u1c/init.c **** #endif
 196:.././hal/sam3u1c/init.c **** 
 197:.././hal/sam3u1c/init.c **** #if defined(CONF_BOARD_USB_PORT)
 198:.././hal/sam3u1c/init.c **** #  if defined(CONF_BOARD_USB_VBUS_DETECT)
 199:.././hal/sam3u1c/init.c **** 	gpio_configure_pin(USB_VBUS_PIN, USB_VBUS_FLAGS);
 200:.././hal/sam3u1c/init.c **** #  endif
 201:.././hal/sam3u1c/init.c **** #endif	
 202:.././hal/sam3u1c/init.c **** }
 214              	 .loc 4 202 1
 215 003a 00BF     	 nop
 216 003c 80BD     	 pop {r7,pc}
 217              	.L10:
 218 003e 00BF     	 .align 2
 219              	.L9:
 220 0040 00000000 	 .word pio_configure_pin
 221 0044 000C0E40 	 .word 1074662400
 222 0048 00000000 	 .word pio_configure_pin_group
 223              	 .cfi_endproc
 224              	.LFE132:
 226              	 .section .text.board_init,"ax",%progbits
 227              	 .align 1
 228              	 .global board_init
 229              	 .syntax unified
 230              	 .thumb
 231              	 .thumb_func
 232              	 .fpu softvfp
 234              	board_init:
 235              	.LFB133:
 203:.././hal/sam3u1c/init.c **** 
 204:.././hal/sam3u1c/init.c **** void board_init(void)
 205:.././hal/sam3u1c/init.c **** {
 236              	 .loc 4 205 1
 237              	 .cfi_startproc
 238              	 
 239              	 
 240 0000 80B5     	 push {r7,lr}
 241              	.LCFI13:
 242              	 .cfi_def_cfa_offset 8
 243              	 .cfi_offset 7,-8
 244              	 .cfi_offset 14,-4
 245 0002 00AF     	 add r7,sp,#0
 246              	.LCFI14:
 247              	 .cfi_def_cfa_register 7
 206:.././hal/sam3u1c/init.c **** #ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
 207:.././hal/sam3u1c/init.c **** 	/* Disable the watchdog */
 208:.././hal/sam3u1c/init.c **** 	WDT->WDT_MR = WDT_MR_WDDIS;
 248              	 .loc 4 208 5
 249 0004 044B     	 ldr r3,.L12
 250              	 .loc 4 208 14
 251 0006 4FF40042 	 mov r2,#32768
 252 000a 5A60     	 str r2,[r3,#4]
 209:.././hal/sam3u1c/init.c **** #endif
 210:.././hal/sam3u1c/init.c **** 
 211:.././hal/sam3u1c/init.c **** 	/* GPIO has been deprecated, the old code just keeps it for compatibility.
 212:.././hal/sam3u1c/init.c **** 	 * In new designs IOPORT is used instead.
 213:.././hal/sam3u1c/init.c **** 	 * Here IOPORT must be initialized for others to use before setting up IO.
 214:.././hal/sam3u1c/init.c **** 	 */
 215:.././hal/sam3u1c/init.c **** 	ioport_init();
 253              	 .loc 4 215 2
 254 000c 034B     	 ldr r3,.L12+4
 255 000e 9847     	 blx r3
 256              	.LVL8:
 216:.././hal/sam3u1c/init.c **** 
 217:.././hal/sam3u1c/init.c **** 	iopins_normal();
 257              	 .loc 4 217 2
 258 0010 034B     	 ldr r3,.L12+8
 259 0012 9847     	 blx r3
 260              	.LVL9:
 218:.././hal/sam3u1c/init.c **** 
 219:.././hal/sam3u1c/init.c **** }
 261              	 .loc 4 219 1
 262 0014 00BF     	 nop
 263 0016 80BD     	 pop {r7,pc}
 264              	.L13:
 265              	 .align 2
 266              	.L12:
 267 0018 50120E40 	 .word 1074664016
 268 001c 00000000 	 .word ioport_init
 269 0020 00000000 	 .word iopins_normal
 270              	 .cfi_endproc
 271              	.LFE133:
 273              	 .text
 274              	.Letext0:
 275              	 .file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 276              	 .file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 277              	 .file 7 ".././hal/sam3u1c/inc/sam3u1c.h"
 278              	 .file 8 ".././hal/sam3u1c/inc/core_cm3.h"
 279              	 .file 9 ".././hal/sam3u1c/inc/system_sam3u.h"
 280              	 .file 10 ".././hal/sam3u1c/inc/component/component_pio.h"
 281              	 .file 11 ".././hal/sam3u1c/inc/component/component_wdt.h"
 282              	 .file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 283              	 .file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 284              	 .file 14 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 285              	 .file 15 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 286              	 .file 16 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\stdlib.h"
 287              	 .file 17 ".././hal/sam3u1c/inc/interrupt/interrupt_sam_nvic.h"
 288              	 .file 18 ".././hal/sam3u1c/inc/pio.h"
 289              	 .file 19 ".././hal/sam3u1c/inc/pmc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 init.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:27     .text.sysclk_enable_peripheral_clock:00000000 $t
    {standard input}:34     .text.sysclk_enable_peripheral_clock:00000000 sysclk_enable_peripheral_clock
    {standard input}:71     .text.sysclk_enable_peripheral_clock:00000018 $d
    {standard input}:76     .text.ioport_init:00000000 $t
    {standard input}:82     .text.ioport_init:00000000 ioport_init
    {standard input}:120    .text.ioport_init:00000018 $d
    {standard input}:125    .text.iopins_sleep:00000000 $t
    {standard input}:132    .text.iopins_sleep:00000000 iopins_sleep
    {standard input}:162    .text.iopins_normal:00000000 $t
    {standard input}:169    .text.iopins_normal:00000000 iopins_normal
    {standard input}:220    .text.iopins_normal:00000040 $d
    {standard input}:227    .text.board_init:00000000 $t
    {standard input}:234    .text.board_init:00000000 board_init
    {standard input}:267    .text.board_init:00000018 $d
                           .group:00000000 wm4.0.2cd8a2cb7ff4c48cec7eeec776a1dd8c
                           .group:00000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:00000000 wm4.parts.h.45.afc900689b2c82332e69d798acedc875
                           .group:00000000 wm4.tpaste.h.45.af3ee36765243b162c88f7f944858426
                           .group:00000000 wm4.stringz.h.45.c4f6cbe0005e6c1d2139bc6c0e4f4722
                           .group:00000000 wm4.mrepeat.h.59.c5daaed201a4340b0edf435161d0b77f
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.sam3u1c.h.220.c0b54b5a55bc87791749ae17b1487779
                           .group:00000000 wm4.core_cm3.h.32.5c59c312db585622d253fdb887b0afb1
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm3.h.127.b561404f2a159dc517b409bc244d16c1
                           .group:00000000 wm4.component_adc.h.43.d49887380d07d1cd08cc4e37b3485e31
                           .group:00000000 wm4.component_adc12b.h.43.eadc09f1073923fb91f1f393cc397dcb
                           .group:00000000 wm4.component_chipid.h.43.15825c969b1cc9eeea3d9416499874c8
                           .group:00000000 wm4.component_dmac.h.43.cc8187b1cf6bfeadc91b14fdd28b9e8b
                           .group:00000000 wm4.component_efc.h.43.cb1b3997ad9ea3733ad421ecbfd02fdd
                           .group:00000000 wm4.component_gpbr.h.43.49b7e13894fe38b29f2243bbbe530227
                           .group:00000000 wm4.component_hsmci.h.43.7b7194c92e1480c038f3342f7cec440a
                           .group:00000000 wm4.component_matrix.h.43.1d209838fb75b4827119203a357141ee
                           .group:00000000 wm4.component_pdc.h.43.19528a5f9ef5a348234ea06f89069c55
                           .group:00000000 wm4.component_pio.h.43.163b46c3683ccf92e8de39a5554f50e8
                           .group:00000000 wm4.component_pmc.h.43.ee4f030602866917aeed15fb2b948de8
                           .group:00000000 wm4.component_pwm.h.43.ab6262a86f0aea354b43fe6dce7e7eb3
                           .group:00000000 wm4.component_rstc.h.43.4eb59dc2ddcf585fabf251d0c329fcdd
                           .group:00000000 wm4.component_rtc.h.43.ba8ccafc772b11d562a3cceab8b95072
                           .group:00000000 wm4.component_rtt.h.43.3206ef8f067e5e747c3c4c7e719c1429
                           .group:00000000 wm4.component_smc.h.43.907847915f1a5616734199d7e34424fa
                           .group:00000000 wm4.component_spi.h.43.a2a09df64ab768c0a32be55285c74ded
                           .group:00000000 wm4.component_ssc.h.43.d7c78f990c13fc511671b64798c4bcd0
                           .group:00000000 wm4.component_supc.h.43.7d17f8e5ed3ba815e84381152735062f
                           .group:00000000 wm4.component_tc.h.43.662eac8137408372b4f9d26c0b5f8621
                           .group:00000000 wm4.component_twi.h.43.eda18625bd851fc4605861f5b3240c0b
                           .group:00000000 wm4.component_uart.h.43.2d92735c5ea05c973661e1ba99a2f37c
                           .group:00000000 wm4.component_udphs.h.43.21cecd26a4e44df0013037f29f2716e4
                           .group:00000000 wm4.component_usart.h.43.7872f8f455adb38b67b9fbdb15657fbe
                           .group:00000000 wm4.component_wdt.h.43.e31e10a5469b62c3660b49ab250f802f
                           .group:00000000 wm4.instance_hsmci.h.43.e233236cc7fd5a805539a7ecc0e1d8d2
                           .group:00000000 wm4.instance_ssc.h.43.c0cfabc3b9f3bb60745c913111bce965
                           .group:00000000 wm4.instance_spi.h.43.570ae46af19e4179d9796872b9a8b9bc
                           .group:00000000 wm4.instance_tc0.h.43.049b3a82387d2961594190609e896a29
                           .group:00000000 wm4.instance_twi0.h.43.255dc0afa9e0d45eaea0a935eca2f103
                           .group:00000000 wm4.instance_twi1.h.43.652d1d407893f259f2a817544ba662c2
                           .group:00000000 wm4.instance_pwm.h.43.88294acec3ca56d6fc521038521a1567
                           .group:00000000 wm4.instance_usart0.h.43.e26677512aee3dd3bedd71d394410000
                           .group:00000000 wm4.instance_usart1.h.43.1ba97dbc6610d9fb3132b9d845688201
                           .group:00000000 wm4.instance_usart2.h.43.baa1bf30b3c5acdee90c4a1f50fe9ebd
                           .group:00000000 wm4.instance_udphs.h.43.b1ce94181e0d1f22877b81c6040a4363
                           .group:00000000 wm4.instance_adc12b.h.43.d73ed59e867ccdfdb846d9ef32a50c0c
                           .group:00000000 wm4.instance_adc.h.43.2b7611a00afeb4c555339b844d4b8456
                           .group:00000000 wm4.instance_dmac.h.43.ee72691d84889c8f285932be4a075ddb
                           .group:00000000 wm4.instance_smc.h.43.29610fd00979caaaa65821ad40e9da06
                           .group:00000000 wm4.instance_matrix.h.43.01ee474141594385374c41a29daeeefe
                           .group:00000000 wm4.instance_pmc.h.43.37430325ed7b8b24c3fe640c41c29ef5
                           .group:00000000 wm4.instance_uart.h.43.bd378395ba022bc8670c82ebe656fbbd
                           .group:00000000 wm4.instance_chipid.h.43.29cd8fb600f149aa58830fcc78fe36f9
                           .group:00000000 wm4.instance_efc0.h.43.6b85dba20721a7e9fc4350e78d193680
                           .group:00000000 wm4.instance_efc1.h.43.2c5e94fc4d2742678318d73450d08d57
                           .group:00000000 wm4.instance_pioa.h.43.eeb46cc3bfe01a1f28e67aa3a6851ed8
                           .group:00000000 wm4.instance_piob.h.43.652ce26b6c37ac56f9ed42a9216d9aca
                           .group:00000000 wm4.instance_rstc.h.43.c5de224364a50a85f237c0b864aa4c8f
                           .group:00000000 wm4.instance_supc.h.43.a5f1a5ca08f468ccf34ed3653e045f1f
                           .group:00000000 wm4.instance_rtt.h.43.8622b192c23334996132415e3095df7f
                           .group:00000000 wm4.instance_wdt.h.43.407ea53e133eacf09acf2c7fcb6b7524
                           .group:00000000 wm4.instance_rtc.h.43.f70b77f9180401c8d9d920cb4a1cd166
                           .group:00000000 wm4.instance_gpbr.h.43.9066cb40d557f6755101368854272348
                           .group:00000000 wm4.sam3u1c.h.312.ae446d8e874d34ca3df78faf190c678f
                           .group:00000000 wm4.pio_sam3u1c.h.43.18b24f16e1710ff2a400d88fe33c5107
                           .group:00000000 wm4.sam3u1c.h.442.cd4bbc3af493e98bc9b60c2905132ed0
                           .group:00000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:00000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.cdefs.h.49.2bf373aedffd8b393ccd11dc057e8547
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.compiler.h.88.0e6ad966134fa012ce9a34053d3f48aa
                           .group:00000000 wm4.interrupt_sam_nvic.h.45.4876da6c127868305d66389e87e0876f
                           .group:00000000 wm4.compiler.h.425.66dd29c210af3287ed85ec3553a3e6b1
                           .group:00000000 wm4.board.h.69.3670053ec9e880dbc2016be2b8dca792
                           .group:00000000 wm4.cw521.h.62.d34c289ace4a92d90be8fb389db40479
                           .group:00000000 wm4.conf_board.h.45.aac520ee9dd7e984e12efac1b366b8fe
                           .group:00000000 wm4.pio.h.45.95f22b0ea02ddc698ec54fc56bf6f38c
                           .group:00000000 wm4.sam_gpio.h.50.76a45c51855d665134f8211cd601d693
                           .group:00000000 wm4.conf_clock.h.45.5dc276d21b4d793a62f1a9757cc18d5c
                           .group:00000000 wm4.pmc.h.45.bbe1bf97a811e3b283420b2eeadf0b35
                           .group:00000000 wm4.osc.h.94.b766cddafe899eca01d775f7b2906680
                           .group:00000000 wm4.pll.h.45.a605c31ca466ae25752a678e8572be48
                           .group:00000000 wm4.sysclk.h.156.541a142b0016a365728ea1f7c0e3db84
                           .group:00000000 wm4.ioport_pio.h.48.ed5d46e6d54e52a0d911701ea78aab96

UNDEFINED SYMBOLS
pmc_enable_periph_clk
pio_configure_pin
pio_configure_pin_group
