   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "XPROGTarget.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .section .text.osc_get_rate,"ax",%progbits
  27              	 .align 1
  28              	 .arch armv7-m
  29              	 .syntax unified
  30              	 .thumb
  31              	 .thumb_func
  32              	 .fpu softvfp
  34              	osc_get_rate:
  35              	.LFB72:
  36              	 .file 1 ".././hal/sam3u1c/inc/sam3u/osc.h"
   1:.././hal/sam3u1c/inc/sam3u/osc.h **** /**
   2:.././hal/sam3u1c/inc/sam3u/osc.h ****  * \file
   3:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
   4:.././hal/sam3u1c/inc/sam3u/osc.h ****  * \brief Chip-specific oscillator management functions.
   5:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
   6:.././hal/sam3u1c/inc/sam3u/osc.h ****  * Copyright (c) 2011 - 2013 Atmel Corporation. All rights reserved.
   7:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
   8:.././hal/sam3u1c/inc/sam3u/osc.h ****  * \asf_license_start
   9:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
  10:.././hal/sam3u1c/inc/sam3u/osc.h ****  * \page License
  11:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
  12:.././hal/sam3u1c/inc/sam3u/osc.h ****  * Redistribution and use in source and binary forms, with or without
  13:.././hal/sam3u1c/inc/sam3u/osc.h ****  * modification, are permitted provided that the following conditions are met:
  14:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
  15:.././hal/sam3u1c/inc/sam3u/osc.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:.././hal/sam3u1c/inc/sam3u/osc.h ****  *    this list of conditions and the following disclaimer.
  17:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
  18:.././hal/sam3u1c/inc/sam3u/osc.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/sam3u1c/inc/sam3u/osc.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:.././hal/sam3u1c/inc/sam3u/osc.h ****  *    and/or other materials provided with the distribution.
  21:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
  22:.././hal/sam3u1c/inc/sam3u/osc.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:.././hal/sam3u1c/inc/sam3u/osc.h ****  *    from this software without specific prior written permission.
  24:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
  25:.././hal/sam3u1c/inc/sam3u/osc.h ****  * 4. This software may only be redistributed and used in connection with an
  26:.././hal/sam3u1c/inc/sam3u/osc.h ****  *    Atmel microcontroller product.
  27:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
  28:.././hal/sam3u1c/inc/sam3u/osc.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:.././hal/sam3u1c/inc/sam3u/osc.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:.././hal/sam3u1c/inc/sam3u/osc.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:.././hal/sam3u1c/inc/sam3u/osc.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:.././hal/sam3u1c/inc/sam3u/osc.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/sam3u1c/inc/sam3u/osc.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:.././hal/sam3u1c/inc/sam3u/osc.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:.././hal/sam3u1c/inc/sam3u/osc.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:.././hal/sam3u1c/inc/sam3u/osc.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:.././hal/sam3u1c/inc/sam3u/osc.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:.././hal/sam3u1c/inc/sam3u/osc.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
  40:.././hal/sam3u1c/inc/sam3u/osc.h ****  * \asf_license_stop
  41:.././hal/sam3u1c/inc/sam3u/osc.h ****  *
  42:.././hal/sam3u1c/inc/sam3u/osc.h ****  */
  43:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  44:.././hal/sam3u1c/inc/sam3u/osc.h **** #ifndef CHIP_OSC_H_INCLUDED
  45:.././hal/sam3u1c/inc/sam3u/osc.h **** #define CHIP_OSC_H_INCLUDED
  46:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  47:.././hal/sam3u1c/inc/sam3u/osc.h **** #include "board.h"
  48:.././hal/sam3u1c/inc/sam3u/osc.h **** #include "pmc.h"
  49:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  50:.././hal/sam3u1c/inc/sam3u/osc.h **** /// @cond 0
  51:.././hal/sam3u1c/inc/sam3u/osc.h **** /**INDENT-OFF**/
  52:.././hal/sam3u1c/inc/sam3u/osc.h **** #ifdef __cplusplus
  53:.././hal/sam3u1c/inc/sam3u/osc.h **** extern "C" {
  54:.././hal/sam3u1c/inc/sam3u/osc.h **** #endif
  55:.././hal/sam3u1c/inc/sam3u/osc.h **** /**INDENT-ON**/
  56:.././hal/sam3u1c/inc/sam3u/osc.h **** /// @endcond
  57:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  58:.././hal/sam3u1c/inc/sam3u/osc.h **** /*
  59:.././hal/sam3u1c/inc/sam3u/osc.h ****  * Below BOARD_XXX macros are related to the specific board, and
  60:.././hal/sam3u1c/inc/sam3u/osc.h ****  * should be defined by the board code, otherwise default value are used.
  61:.././hal/sam3u1c/inc/sam3u/osc.h ****  */
  62:.././hal/sam3u1c/inc/sam3u/osc.h **** #if !defined(BOARD_FREQ_SLCK_XTAL)
  63:.././hal/sam3u1c/inc/sam3u/osc.h **** #  warning The board slow clock xtal frequency has not been defined.
  64:.././hal/sam3u1c/inc/sam3u/osc.h **** #  define BOARD_FREQ_SLCK_XTAL      (32768UL)
  65:.././hal/sam3u1c/inc/sam3u/osc.h **** #endif
  66:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  67:.././hal/sam3u1c/inc/sam3u/osc.h **** #if !defined(BOARD_FREQ_SLCK_BYPASS)
  68:.././hal/sam3u1c/inc/sam3u/osc.h **** #  warning The board slow clock bypass frequency has not been defined.
  69:.././hal/sam3u1c/inc/sam3u/osc.h **** #  define BOARD_FREQ_SLCK_BYPASS    (32768UL)
  70:.././hal/sam3u1c/inc/sam3u/osc.h **** #endif
  71:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  72:.././hal/sam3u1c/inc/sam3u/osc.h **** #if !defined(BOARD_FREQ_MAINCK_XTAL)
  73:.././hal/sam3u1c/inc/sam3u/osc.h **** #  warning The board main clock xtal frequency has not been defined.
  74:.././hal/sam3u1c/inc/sam3u/osc.h **** #  define BOARD_FREQ_MAINCK_XTAL    (12000000UL)
  75:.././hal/sam3u1c/inc/sam3u/osc.h **** #endif
  76:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  77:.././hal/sam3u1c/inc/sam3u/osc.h **** #if !defined(BOARD_FREQ_MAINCK_BYPASS)
  78:.././hal/sam3u1c/inc/sam3u/osc.h **** #  warning The board main clock bypass frequency has not been defined.
  79:.././hal/sam3u1c/inc/sam3u/osc.h **** #  define BOARD_FREQ_MAINCK_BYPASS  (12000000UL)
  80:.././hal/sam3u1c/inc/sam3u/osc.h **** #endif
  81:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  82:.././hal/sam3u1c/inc/sam3u/osc.h **** #if !defined(BOARD_OSC_STARTUP_US)
  83:.././hal/sam3u1c/inc/sam3u/osc.h **** #  warning The board main clock xtal startup time has not been defined.
  84:.././hal/sam3u1c/inc/sam3u/osc.h **** #  define BOARD_OSC_STARTUP_US      (15625UL)
  85:.././hal/sam3u1c/inc/sam3u/osc.h **** #endif
  86:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  87:.././hal/sam3u1c/inc/sam3u/osc.h **** /**
  88:.././hal/sam3u1c/inc/sam3u/osc.h ****  * \weakgroup osc_group
  89:.././hal/sam3u1c/inc/sam3u/osc.h ****  * @{
  90:.././hal/sam3u1c/inc/sam3u/osc.h ****  */
  91:.././hal/sam3u1c/inc/sam3u/osc.h **** 
  92:.././hal/sam3u1c/inc/sam3u/osc.h **** //! \name Oscillator identifiers
  93:.././hal/sam3u1c/inc/sam3u/osc.h **** //@{
  94:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_SLCK_32K_RC             0    //!< Internal 32kHz RC oscillator.
  95:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_SLCK_32K_XTAL           1    //!< External 32kHz crystal oscillator.
  96:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_SLCK_32K_BYPASS         2    //!< External 32kHz bypass oscillator.
  97:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_4M_RC            3    //!< Internal 4MHz RC oscillator.
  98:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_8M_RC            4    //!< Internal 8MHz RC oscillator.
  99:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_12M_RC           5    //!< Internal 12MHz RC oscillator.
 100:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_XTAL             6    //!< External crystal oscillator.
 101:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_BYPASS           7    //!< External bypass oscillator.
 102:.././hal/sam3u1c/inc/sam3u/osc.h **** //@}
 103:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 104:.././hal/sam3u1c/inc/sam3u/osc.h **** //! \name Oscillator clock speed in hertz
 105:.././hal/sam3u1c/inc/sam3u/osc.h **** //@{
 106:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_SLCK_32K_RC_HZ          CHIP_FREQ_SLCK_RC               //!< Internal 32kHz RC oscillat
 107:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_SLCK_32K_XTAL_HZ        BOARD_FREQ_SLCK_XTAL            //!< External 32kHz crystal osc
 108:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_SLCK_32K_BYPASS_HZ      BOARD_FREQ_SLCK_BYPASS          //!< External 32kHz bypass osci
 109:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_4M_RC_HZ         CHIP_FREQ_MAINCK_RC_4MHZ        //!< Internal 4MHz RC oscillato
 110:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_8M_RC_HZ         CHIP_FREQ_MAINCK_RC_8MHZ        //!< Internal 8MHz RC oscillato
 111:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_12M_RC_HZ        CHIP_FREQ_MAINCK_RC_12MHZ       //!< Internal 12MHz RC oscillat
 112:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_XTAL_HZ          BOARD_FREQ_MAINCK_XTAL          //!< External crystal oscillato
 113:.././hal/sam3u1c/inc/sam3u/osc.h **** #define OSC_MAINCK_BYPASS_HZ        BOARD_FREQ_MAINCK_BYPASS        //!< External bypass oscillator
 114:.././hal/sam3u1c/inc/sam3u/osc.h **** //@}
 115:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 116:.././hal/sam3u1c/inc/sam3u/osc.h **** static inline void osc_enable(uint32_t ul_id)
 117:.././hal/sam3u1c/inc/sam3u/osc.h **** {
 118:.././hal/sam3u1c/inc/sam3u/osc.h **** 	switch (ul_id) {
 119:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_RC:
 120:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 121:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 122:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_XTAL:
 123:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
 124:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 125:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 126:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_BYPASS:
 127:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_switch_sclk_to_32kxtal(PMC_OSC_BYPASS);
 128:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 129:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 130:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 131:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_4M_RC:
 132:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_osc_enable_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
 133:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 134:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 135:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_8M_RC:
 136:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_osc_enable_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
 137:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 138:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 139:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_12M_RC:
 140:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_osc_enable_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
 141:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 142:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 143:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 144:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_XTAL:
 145:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
 146:.././hal/sam3u1c/inc/sam3u/osc.h **** 				BOARD_OSC_STARTUP_US, OSC_SLCK_32K_RC_HZ));
 147:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 148:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 149:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_BYPASS:
 150:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_osc_bypass_main_xtal();
 151:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 152:.././hal/sam3u1c/inc/sam3u/osc.h **** 	}
 153:.././hal/sam3u1c/inc/sam3u/osc.h **** }
 154:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 155:.././hal/sam3u1c/inc/sam3u/osc.h **** static inline void osc_disable(uint32_t ul_id)
 156:.././hal/sam3u1c/inc/sam3u/osc.h **** {
 157:.././hal/sam3u1c/inc/sam3u/osc.h **** 	switch (ul_id) {
 158:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_RC:
 159:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_XTAL:
 160:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_BYPASS:
 161:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 162:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 163:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_4M_RC:
 164:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_8M_RC:
 165:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_12M_RC:
 166:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_osc_disable_fastrc();
 167:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 168:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 169:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_XTAL:
 170:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_osc_disable_xtal(PMC_OSC_XTAL);
 171:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 172:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 173:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_BYPASS:
 174:.././hal/sam3u1c/inc/sam3u/osc.h **** 		pmc_osc_disable_xtal(PMC_OSC_BYPASS);
 175:.././hal/sam3u1c/inc/sam3u/osc.h **** 		break;
 176:.././hal/sam3u1c/inc/sam3u/osc.h **** 	}
 177:.././hal/sam3u1c/inc/sam3u/osc.h **** }
 178:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 179:.././hal/sam3u1c/inc/sam3u/osc.h **** static inline bool osc_is_ready(uint32_t ul_id)
 180:.././hal/sam3u1c/inc/sam3u/osc.h **** {
 181:.././hal/sam3u1c/inc/sam3u/osc.h **** 	switch (ul_id) {
 182:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_RC:
 183:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return 1;
 184:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 185:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_XTAL:
 186:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_BYPASS:
 187:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return pmc_osc_is_ready_32kxtal();
 188:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 189:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_4M_RC:
 190:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_8M_RC:
 191:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_12M_RC:
 192:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return pmc_osc_is_ready_fastrc();
 193:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 194:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_XTAL:
 195:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_BYPASS:
 196:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return pmc_osc_is_ready_main_xtal();
 197:.././hal/sam3u1c/inc/sam3u/osc.h **** 	}
 198:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 199:.././hal/sam3u1c/inc/sam3u/osc.h **** 	return 0;
 200:.././hal/sam3u1c/inc/sam3u/osc.h **** }
 201:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 202:.././hal/sam3u1c/inc/sam3u/osc.h **** static inline uint32_t osc_get_rate(uint32_t ul_id)
 203:.././hal/sam3u1c/inc/sam3u/osc.h **** {
  37              	 .loc 1 203 1
  38              	 .cfi_startproc
  39              	 
  40              	 
  41              	 
  42 0000 80B4     	 push {r7}
  43              	.LCFI0:
  44              	 .cfi_def_cfa_offset 4
  45              	 .cfi_offset 7,-4
  46 0002 83B0     	 sub sp,sp,#12
  47              	.LCFI1:
  48              	 .cfi_def_cfa_offset 16
  49 0004 00AF     	 add r7,sp,#0
  50              	.LCFI2:
  51              	 .cfi_def_cfa_register 7
  52 0006 7860     	 str r0,[r7,#4]
  53 0008 7B68     	 ldr r3,[r7,#4]
  54 000a 072B     	 cmp r3,#7
  55 000c 23D8     	 bhi .L2
  56 000e 01A2     	 adr r2,.L4
  57 0010 52F823F0 	 ldr pc,[r2,r3,lsl#2]
  58              	 .p2align 2
  59              	.L4:
  60 0014 35000000 	 .word .L11+1
  61 0018 3B000000 	 .word .L10+1
  62 001c 3F000000 	 .word .L9+1
  63 0020 43000000 	 .word .L8+1
  64 0024 47000000 	 .word .L7+1
  65 0028 4B000000 	 .word .L6+1
  66 002c 4F000000 	 .word .L5+1
  67 0030 53000000 	 .word .L3+1
  68              	 .p2align 1
  69              	.L11:
 204:.././hal/sam3u1c/inc/sam3u/osc.h **** 	switch (ul_id) {
 205:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_RC:
 206:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return OSC_SLCK_32K_RC_HZ;
  70              	 .loc 1 206 10
  71 0034 4FF4FA43 	 mov r3,#32000
  72 0038 0EE0     	 b .L12
  73              	.L10:
 207:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 208:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_XTAL:
 209:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return BOARD_FREQ_SLCK_XTAL;
  74              	 .loc 1 209 10
  75 003a 0023     	 movs r3,#0
  76 003c 0CE0     	 b .L12
  77              	.L9:
 210:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 211:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_SLCK_32K_BYPASS:
 212:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return BOARD_FREQ_SLCK_BYPASS;
  78              	 .loc 1 212 10
  79 003e 0023     	 movs r3,#0
  80 0040 0AE0     	 b .L12
  81              	.L8:
 213:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 214:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_4M_RC:
 215:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return OSC_MAINCK_4M_RC_HZ;
  82              	 .loc 1 215 10
  83 0042 084B     	 ldr r3,.L13
  84 0044 08E0     	 b .L12
  85              	.L7:
 216:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 217:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_8M_RC:
 218:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return OSC_MAINCK_8M_RC_HZ;
  86              	 .loc 1 218 10
  87 0046 084B     	 ldr r3,.L13+4
  88 0048 06E0     	 b .L12
  89              	.L6:
 219:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 220:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_12M_RC:
 221:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return OSC_MAINCK_12M_RC_HZ;
  90              	 .loc 1 221 10
  91 004a 084B     	 ldr r3,.L13+8
  92 004c 04E0     	 b .L12
  93              	.L5:
 222:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 223:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_XTAL:
 224:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return BOARD_FREQ_MAINCK_XTAL;
  94              	 .loc 1 224 10
  95 004e 074B     	 ldr r3,.L13+8
  96 0050 02E0     	 b .L12
  97              	.L3:
 225:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 226:.././hal/sam3u1c/inc/sam3u/osc.h **** 	case OSC_MAINCK_BYPASS:
 227:.././hal/sam3u1c/inc/sam3u/osc.h **** 		return BOARD_FREQ_MAINCK_BYPASS;
  98              	 .loc 1 227 10
  99 0052 064B     	 ldr r3,.L13+8
 100 0054 00E0     	 b .L12
 101              	.L2:
 228:.././hal/sam3u1c/inc/sam3u/osc.h **** 	}
 229:.././hal/sam3u1c/inc/sam3u/osc.h **** 
 230:.././hal/sam3u1c/inc/sam3u/osc.h **** 	return 0;
 102              	 .loc 1 230 9
 103 0056 0023     	 movs r3,#0
 104              	.L12:
 231:.././hal/sam3u1c/inc/sam3u/osc.h **** }
 105              	 .loc 1 231 1
 106 0058 1846     	 mov r0,r3
 107 005a 0C37     	 adds r7,r7,#12
 108              	.LCFI3:
 109              	 .cfi_def_cfa_offset 4
 110 005c BD46     	 mov sp,r7
 111              	.LCFI4:
 112              	 .cfi_def_cfa_register 13
 113              	 
 114 005e 80BC     	 pop {r7}
 115              	.LCFI5:
 116              	 .cfi_restore 7
 117              	 .cfi_def_cfa_offset 0
 118 0060 7047     	 bx lr
 119              	.L14:
 120 0062 00BF     	 .align 2
 121              	.L13:
 122 0064 00093D00 	 .word 4000000
 123 0068 00127A00 	 .word 8000000
 124 006c 001BB700 	 .word 12000000
 125              	 .cfi_endproc
 126              	.LFE72:
 128              	 .section .text.sysclk_get_main_hz,"ax",%progbits
 129              	 .align 1
 130              	 .syntax unified
 131              	 .thumb
 132              	 .thumb_func
 133              	 .fpu softvfp
 135              	sysclk_get_main_hz:
 136              	.LFB83:
 137              	 .file 2 ".././hal/sam3u1c/inc/sam3u/sysclk.h"
   1:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
   2:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \file
   3:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
   4:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Chip-specific system clock management functions.
   5:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
   6:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Copyright (c) 2011 - 2014 Atmel Corporation. All rights reserved.
   7:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
   8:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \asf_license_start
   9:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  10:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \page License
  11:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  12:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  15:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  18:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  22:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    from this software without specific prior written permission.
  24:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  25:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    Atmel microcontroller product.
  27:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  28:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  40:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \asf_license_stop
  41:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  42:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
  43:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  44:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifndef CHIP_SYSCLK_H_INCLUDED
  45:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define CHIP_SYSCLK_H_INCLUDED
  46:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  47:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #include <osc.h>
  48:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #include <pll.h>
  49:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  50:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
  51:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \page sysclk_quickstart Quick Start Guide for the System Clock Management service (SAM3U)
  52:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  53:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * This is the quick start guide for the \ref sysclk_group "System Clock Management"
  54:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * service, with step-by-step instructions on how to configure and use the service for
  55:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * specific use cases.
  56:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  57:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \section sysclk_quickstart_usecases System Clock Management use cases
  58:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * - \ref sysclk_quickstart_basic
  59:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  60:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \section sysclk_quickstart_basic Basic usage of the System Clock Management service
  61:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * This section will present a basic use case for the System Clock Management service.
  62:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * This use case will configure the main system clock to 96MHz, using an internal PLL
  63:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * module to multiply the frequency of a crystal attached to the microcontroller.
  64:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  65:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_prereq Prerequisites
  66:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  - None
  67:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  68:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps Initialization code
  69:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Add to the application initialization code:
  70:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \code
  71:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	sysclk_init();
  72:.././hal/sam3u1c/inc/sam3u/sysclk.h **** \endcode
  73:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  74:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps_workflow Workflow
  75:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * -# Configure the system clocks according to the settings in conf_clock.h:
  76:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    \code sysclk_init(); \endcode
  77:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  78:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_code Example code
  79:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   Add or uncomment the following in your conf_clock.h header file, commenting out all other
  80:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   definitions of the same symbol(s):
  81:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \code
  82:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_SYSCLK_SOURCE        SYSCLK_SRC_PLLACK
  83:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  84:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   // Fpll0 = (Fclk * PLL_mul) / PLL_div
  85:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_PLL0_SOURCE          PLL_SRC_MAINCK_XTAL
  86:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_PLL0_MUL             (96000000UL / BOARD_FREQ_MAINCK_XTAL)
  87:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_PLL0_DIV             1
  88:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
  89:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   // Fbus = Fsys / BUS_div
  90:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	   #define CONFIG_SYSCLK_PRES          SYSCLK_PRES_1
  91:.././hal/sam3u1c/inc/sam3u/sysclk.h **** \endcode
  92:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
  93:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_workflow Workflow
  94:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  -# Configure the main system clock to use the output of the PLL module as its source:
  95:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \code #define CONFIG_SYSCLK_SOURCE          SYSCLK_SRC_PLLACK \endcode
  96:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  -# Configure the PLL module to use the fast external fast crystal oscillator as its source:
  97:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \code #define CONFIG_PLL0_SOURCE            PLL_SRC_MAINCK_XTAL \endcode
  98:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  -# Configure the PLL module to multiply the external fast crystal oscillator frequency up to 96
  99:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \code
 100:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	#define CONFIG_PLL0_MUL             (96000000UL / BOARD_FREQ_MAINCK_XTAL)
 101:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	#define CONFIG_PLL0_DIV             1
 102:.././hal/sam3u1c/inc/sam3u/sysclk.h **** \endcode
 103:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   \note For user boards, \c BOARD_FREQ_MAINCK_XTAL should be defined in the board \c conf_board.
 104:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *         file as the frequency of the fast crystal attached to the microcontroller.
 105:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *  -# Configure the main clock to run at the full 96MHz, disable scaling of the main system clock 
 106:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    \code
 107:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	#define CONFIG_SYSCLK_PRES         SYSCLK_PRES_1
 108:.././hal/sam3u1c/inc/sam3u/sysclk.h **** \endcode
 109:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *    \note Some dividers are powers of two, while others are integer division factors. Refer to th
 110:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *          formulas in the conf_clock.h template commented above each division define.
 111:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 112:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 113:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /// @cond 0
 114:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**INDENT-OFF**/
 115:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef __cplusplus
 116:.././hal/sam3u1c/inc/sam3u/sysclk.h **** extern "C" {
 117:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 118:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**INDENT-ON**/
 119:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /// @endcond
 120:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 121:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 122:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \weakgroup sysclk_group
 123:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * @{
 124:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 125:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 126:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //! \name Configuration Symbols
 127:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 128:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 129:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \def CONFIG_SYSCLK_SOURCE
 130:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Initial/static main system clock source
 131:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 132:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * The main system clock will be configured to use this clock during
 133:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * initialization.
 134:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 135:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifndef CONFIG_SYSCLK_SOURCE
 136:.././hal/sam3u1c/inc/sam3u/sysclk.h **** # define CONFIG_SYSCLK_SOURCE   SYSCLK_SRC_MAINCK_4M_RC
 137:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 138:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 139:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \def CONFIG_SYSCLK_PRES
 140:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Initial CPU clock divider (mck)
 141:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 142:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * The MCK will run at
 143:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \f[
 144:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *   f_{MCK} = \frac{f_{sys}}{\mathrm{CONFIG\_SYSCLK\_PRES}}\,\mbox{Hz}
 145:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \f]
 146:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * after initialization.
 147:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 148:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifndef CONFIG_SYSCLK_PRES
 149:.././hal/sam3u1c/inc/sam3u/sysclk.h **** # define CONFIG_SYSCLK_PRES  0
 150:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 151:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 152:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@}
 153:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 154:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //! \name Master Clock Sources (MCK)
 155:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 156:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_SLCK_RC              0       //!< Internal 32kHz RC oscillator as master source 
 157:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_SLCK_XTAL            1       //!< External 32kHz crystal oscillator as master so
 158:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_SLCK_BYPASS          2       //!< External 32kHz bypass oscillator as master sou
 159:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_4M_RC         3       //!< Internal 4MHz RC oscillator as master source c
 160:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_8M_RC         4       //!< Internal 8MHz RC oscillator as master source c
 161:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_12M_RC        5       //!< Internal 12MHz RC oscillator as master source 
 162:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_XTAL          6       //!< External crystal oscillator as master source c
 163:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_MAINCK_BYPASS        7       //!< External bypass oscillator as master source cl
 164:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_PLLACK               8       //!< Use PLLACK as master source clock
 165:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_SRC_UPLLCK               9       //!< Use UPLLCK as master source clock
 166:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@}
 167:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 168:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //! \name Master Clock Prescalers (MCK)
 169:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 170:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_1           PMC_MCKR_PRES_CLK_1     //!< Set master clock prescaler to 1
 171:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_2           PMC_MCKR_PRES_CLK_2     //!< Set master clock prescaler to 2
 172:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_4           PMC_MCKR_PRES_CLK_4     //!< Set master clock prescaler to 4
 173:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_8           PMC_MCKR_PRES_CLK_8     //!< Set master clock prescaler to 8
 174:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_16          PMC_MCKR_PRES_CLK_16    //!< Set master clock prescaler to 16
 175:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_32          PMC_MCKR_PRES_CLK_32    //!< Set master clock prescaler to 32
 176:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_64          PMC_MCKR_PRES_CLK_64    //!< Set master clock prescaler to 64
 177:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #define SYSCLK_PRES_3           PMC_MCKR_PRES_CLK_3     //!< Set master clock prescaler to 3
 178:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@}
 179:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 180:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 181:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \def CONFIG_USBCLK_SOURCE
 182:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Configuration symbol for the USB generic clock source
 183:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 184:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Sets the clock source to use for the USB. The source must also be properly
 185:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * configured.
 186:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 187:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Define this to one of the \c USBCLK_SRC_xxx settings. Leave it undefined if
 188:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * USB is not required.
 189:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 190:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef __DOXYGEN__
 191:.././hal/sam3u1c/inc/sam3u/sysclk.h **** # define CONFIG_USBCLK_SOURCE
 192:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 193:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 194:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 195:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \def CONFIG_USBCLK_DIV
 196:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Configuration symbol for the USB generic clock divider setting
 197:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 198:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Sets the clock division for the USB generic clock. If a USB clock source is
 199:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * selected with CONFIG_USBCLK_SOURCE, this configuration symbol must also be
 200:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * defined.
 201:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 202:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef __DOXYGEN__
 203:.././hal/sam3u1c/inc/sam3u/sysclk.h **** # define CONFIG_USBCLK_DIV
 204:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 205:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 206:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 207:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \name Querying the system clock
 208:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 209:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * The following functions may be used to query the current frequency of
 210:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * the system clock and the CPU and bus clocks derived from it.
 211:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * sysclk_get_main_hz() and sysclk_get_cpu_hz() can be assumed to be
 212:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * available on all platforms, although some platforms may define
 213:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * additional accessors for various chip-internal bus clocks. These are
 214:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * usually not intended to be queried directly by generic code.
 215:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 216:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 217:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 218:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 219:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 220:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 221:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \todo This function assumes that the main clock source never changes
 222:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * once it's been set up, and that PLL0 always runs at the compile-time
 223:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * configured default rate. While this is probably the most common
 224:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * configuration, which we want to support as a special case for
 225:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * performance reasons, we will at some point need to support more
 226:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * dynamic setups as well.
 227:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 228:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 229:.././hal/sam3u1c/inc/sam3u/sysclk.h **** extern uint32_t sysclk_initialized;
 230:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 231:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 232:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 138              	 .loc 2 232 1
 139              	 .cfi_startproc
 140              	 
 141              	 
 142 0000 80B5     	 push {r7,lr}
 143              	.LCFI6:
 144              	 .cfi_def_cfa_offset 8
 145              	 .cfi_offset 7,-8
 146              	 .cfi_offset 14,-4
 147 0002 00AF     	 add r7,sp,#0
 148              	.LCFI7:
 149              	 .cfi_def_cfa_register 7
 233:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 234:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	if (!sysclk_initialized ) {
 235:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_4M_RC_HZ;
 236:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 237:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 238:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 239:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* Config system clock setting */
 240:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_SLCK_RC) {
 241:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_SLCK_32K_RC_HZ;
 242:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_SLCK_XTAL) {
 243:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_SLCK_32K_XTAL_HZ;
 244:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_SLCK_BYPASS) {
 245:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_SLCK_32K_BYPASS_HZ;
 246:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_4M_RC) {
 247:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_4M_RC_HZ;
 248:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_8M_RC) {
 249:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_8M_RC_HZ;
 250:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_12M_RC) {
 251:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_12M_RC_HZ;
 252:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_XTAL) {
 253:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_XTAL_HZ;
 254:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_BYPASS) {
 255:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return OSC_MAINCK_BYPASS_HZ;
 256:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 257:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef CONFIG_PLL0_SOURCE
 258:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
 259:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return pll_get_default_rate(0);
 150              	 .loc 2 259 10
 151 0004 0620     	 movs r0,#6
 152 0006 034B     	 ldr r3,.L17
 153 0008 9847     	 blx r3
 154              	.LVL0:
 155 000a 0346     	 mov r3,r0
 156 000c 1B01     	 lsls r3,r3,#4
 260:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 261:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 262:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 263:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #ifdef CONFIG_PLL1_SOURCE
 264:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_UPLLCK) {
 265:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return PLL_UPLL_HZ;
 266:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 267:.././hal/sam3u1c/inc/sam3u/sysclk.h **** #endif
 268:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	else {
 269:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
 270:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		return 0;
 271:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	}
 272:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 157              	 .loc 2 272 1
 158 000e 1846     	 mov r0,r3
 159 0010 80BD     	 pop {r7,pc}
 160              	.L18:
 161 0012 00BF     	 .align 2
 162              	.L17:
 163 0014 00000000 	 .word osc_get_rate
 164              	 .cfi_endproc
 165              	.LFE83:
 167              	 .section .text.sysclk_enable_peripheral_clock,"ax",%progbits
 168              	 .align 1
 169              	 .syntax unified
 170              	 .thumb
 171              	 .thumb_func
 172              	 .fpu softvfp
 174              	sysclk_enable_peripheral_clock:
 175              	.LFB87:
 273:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 274:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 275:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock
 276:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 277:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \todo This function assumes that the CPU always runs at the system
 278:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * clock frequency. We want to support at least two more scenarios:
 279:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * Fixed CPU/bus clock dividers (config symbols) and dynamic CPU/bus
 280:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * clock dividers (which may change at run time). Ditto for all the bus
 281:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * clocks.
 282:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 283:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 284:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 285:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 286:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 287:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
 288:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* prescaler, not an immediate value. */
 289:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	return sysclk_get_main_hz() /
 290:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
 291:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
 292:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 293:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 294:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 295:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Retrieves the current rate in Hz of the peripheral clocks.
 296:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 297:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \return Frequency of the peripheral clocks, in Hz.
 298:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 299:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline uint32_t sysclk_get_peripheral_hz(void)
 300:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 301:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
 302:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	/* prescaler, not an immediate value. */
 303:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	return sysclk_get_main_hz() /
 304:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
 305:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
 306:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 307:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 308:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 309:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Retrieves the current rate in Hz of the Peripheral Bus clock attached
 310:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *        to the specified peripheral.
 311:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 312:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \param module Pointer to the module's base address.
 313:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 314:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \return Frequency of the bus attached to the specified peripheral, in Hz.
 315:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 316:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline uint32_t sysclk_get_peripheral_bus_hz(const volatile void *module)
 317:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 318:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	UNUSED(module);
 319:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	return sysclk_get_peripheral_hz();
 320:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 321:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@}
 322:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 323:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //! \name Enabling and disabling synchronous clocks
 324:.././hal/sam3u1c/inc/sam3u/sysclk.h **** //@{
 325:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 326:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 327:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Enable a peripheral's clock.
 328:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 329:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \param ul_id Id (number) of the peripheral clock.
 330:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 331:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
 332:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 176              	 .loc 2 332 1
 177              	 .cfi_startproc
 178              	 
 179              	 
 180 0000 80B5     	 push {r7,lr}
 181              	.LCFI8:
 182              	 .cfi_def_cfa_offset 8
 183              	 .cfi_offset 7,-8
 184              	 .cfi_offset 14,-4
 185 0002 82B0     	 sub sp,sp,#8
 186              	.LCFI9:
 187              	 .cfi_def_cfa_offset 16
 188 0004 00AF     	 add r7,sp,#0
 189              	.LCFI10:
 190              	 .cfi_def_cfa_register 7
 191 0006 7860     	 str r0,[r7,#4]
 333:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	pmc_enable_periph_clk(ul_id);
 192              	 .loc 2 333 2
 193 0008 7868     	 ldr r0,[r7,#4]
 194 000a 034B     	 ldr r3,.L20
 195 000c 9847     	 blx r3
 196              	.LVL1:
 334:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 197              	 .loc 2 334 1
 198 000e 00BF     	 nop
 199 0010 0837     	 adds r7,r7,#8
 200              	.LCFI11:
 201              	 .cfi_def_cfa_offset 8
 202 0012 BD46     	 mov sp,r7
 203              	.LCFI12:
 204              	 .cfi_def_cfa_register 13
 205              	 
 206 0014 80BD     	 pop {r7,pc}
 207              	.L21:
 208 0016 00BF     	 .align 2
 209              	.L20:
 210 0018 00000000 	 .word pmc_enable_periph_clk
 211              	 .cfi_endproc
 212              	.LFE87:
 214              	 .section .text.sysclk_disable_peripheral_clock,"ax",%progbits
 215              	 .align 1
 216              	 .syntax unified
 217              	 .thumb
 218              	 .thumb_func
 219              	 .fpu softvfp
 221              	sysclk_disable_peripheral_clock:
 222              	.LFB88:
 335:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 
 336:.././hal/sam3u1c/inc/sam3u/sysclk.h **** /**
 337:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \brief Disable a peripheral's clock.
 338:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  *
 339:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  * \param ul_id Id (number) of the peripheral clock.
 340:.././hal/sam3u1c/inc/sam3u/sysclk.h ****  */
 341:.././hal/sam3u1c/inc/sam3u/sysclk.h **** static inline void sysclk_disable_peripheral_clock(uint32_t ul_id)
 342:.././hal/sam3u1c/inc/sam3u/sysclk.h **** {
 223              	 .loc 2 342 1
 224              	 .cfi_startproc
 225              	 
 226              	 
 227 0000 80B5     	 push {r7,lr}
 228              	.LCFI13:
 229              	 .cfi_def_cfa_offset 8
 230              	 .cfi_offset 7,-8
 231              	 .cfi_offset 14,-4
 232 0002 82B0     	 sub sp,sp,#8
 233              	.LCFI14:
 234              	 .cfi_def_cfa_offset 16
 235 0004 00AF     	 add r7,sp,#0
 236              	.LCFI15:
 237              	 .cfi_def_cfa_register 7
 238 0006 7860     	 str r0,[r7,#4]
 343:.././hal/sam3u1c/inc/sam3u/sysclk.h **** 	pmc_disable_periph_clk(ul_id);
 239              	 .loc 2 343 2
 240 0008 7868     	 ldr r0,[r7,#4]
 241 000a 034B     	 ldr r3,.L23
 242 000c 9847     	 blx r3
 243              	.LVL2:
 344:.././hal/sam3u1c/inc/sam3u/sysclk.h **** }
 244              	 .loc 2 344 1
 245 000e 00BF     	 nop
 246 0010 0837     	 adds r7,r7,#8
 247              	.LCFI16:
 248              	 .cfi_def_cfa_offset 8
 249 0012 BD46     	 mov sp,r7
 250              	.LCFI17:
 251              	 .cfi_def_cfa_register 13
 252              	 
 253 0014 80BD     	 pop {r7,pc}
 254              	.L24:
 255 0016 00BF     	 .align 2
 256              	.L23:
 257 0018 00000000 	 .word pmc_disable_periph_clk
 258              	 .cfi_endproc
 259              	.LFE88:
 261              	 .section .bss.IsSending,"aw",%nobits
 264              	IsSending:
 265 0000 00       	 .space 1
 266              	 .section .text.XPROGTarget_EnableTargetPDI,"ax",%progbits
 267              	 .align 1
 268              	 .global XPROGTarget_EnableTargetPDI
 269              	 .syntax unified
 270              	 .thumb
 271              	 .thumb_func
 272              	 .fpu softvfp
 274              	XPROGTarget_EnableTargetPDI:
 275              	.LFB175:
 276              	 .file 3 "XPROGTarget.c"
   1:XPROGTarget.c **** /*
   2:XPROGTarget.c ****              LUFA Library
   3:XPROGTarget.c ****      Copyright (C) Dean Camera, 2014.
   4:XPROGTarget.c **** 
   5:XPROGTarget.c ****   dean [at] fourwalledcubicle [dot] com
   6:XPROGTarget.c ****            www.lufa-lib.org
   7:XPROGTarget.c **** */
   8:XPROGTarget.c **** 
   9:XPROGTarget.c **** /*
  10:XPROGTarget.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:XPROGTarget.c **** 
  12:XPROGTarget.c ****   Permission to use, copy, modify, distribute, and sell this
  13:XPROGTarget.c ****   software and its documentation for any purpose is hereby granted
  14:XPROGTarget.c ****   without fee, provided that the above copyright notice appear in
  15:XPROGTarget.c ****   all copies and that both that the copyright notice and this
  16:XPROGTarget.c ****   permission notice and warranty disclaimer appear in supporting
  17:XPROGTarget.c ****   documentation, and that the name of the author not be used in
  18:XPROGTarget.c ****   advertising or publicity pertaining to distribution of the
  19:XPROGTarget.c ****   software without specific, written prior permission.
  20:XPROGTarget.c **** 
  21:XPROGTarget.c ****   The author disclaims all warranties with regard to this
  22:XPROGTarget.c ****   software, including all implied warranties of merchantability
  23:XPROGTarget.c ****   and fitness.  In no event shall the author be liable for any
  24:XPROGTarget.c ****   special, indirect or consequential damages or any damages
  25:XPROGTarget.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:XPROGTarget.c ****   in an action of contract, negligence or other tortious action,
  27:XPROGTarget.c ****   arising out of or in connection with the use or performance of
  28:XPROGTarget.c ****   this software.
  29:XPROGTarget.c **** */
  30:XPROGTarget.c **** 
  31:XPROGTarget.c **** /** \file
  32:XPROGTarget.c ****  *
  33:XPROGTarget.c ****  *  Target-related functions for the PDI Protocol decoder.
  34:XPROGTarget.c ****  */
  35:XPROGTarget.c **** 
  36:XPROGTarget.c **** #define  INCLUDE_FROM_XPROGTARGET_C
  37:XPROGTarget.c **** #include <asf.h>
  38:XPROGTarget.c **** #include "XPROGTarget.h"
  39:XPROGTarget.c **** #include "board.h"
  40:XPROGTarget.c **** #include "usart.h"
  41:XPROGTarget.c **** #include "sysclk.h"
  42:XPROGTarget.c **** #include "gpio.h"
  43:XPROGTarget.c **** #include "ioport.h"
  44:XPROGTarget.c **** #include "delay.h"
  45:XPROGTarget.c **** 
  46:XPROGTarget.c **** #include "cw521.h"
  47:XPROGTarget.c **** /** Flag to indicate if the USART is currently in Tx or Rx mode. */
  48:XPROGTarget.c **** static bool IsSending;
  49:XPROGTarget.c **** 
  50:XPROGTarget.c **** /** Enables the target's PDI interface, holding the target in reset until PDI mode is exited. */
  51:XPROGTarget.c **** void XPROGTarget_EnableTargetPDI(void)
  52:XPROGTarget.c **** {
 277              	 .loc 3 52 1
 278              	 .cfi_startproc
 279              	 
 280              	 
 281 0000 80B5     	 push {r7,lr}
 282              	.LCFI18:
 283              	 .cfi_def_cfa_offset 8
 284              	 .cfi_offset 7,-8
 285              	 .cfi_offset 14,-4
 286 0002 86B0     	 sub sp,sp,#24
 287              	.LCFI19:
 288              	 .cfi_def_cfa_offset 32
 289 0004 00AF     	 add r7,sp,#0
 290              	.LCFI20:
 291              	 .cfi_def_cfa_register 7
  53:XPROGTarget.c **** 	IsSending = false;
 292              	 .loc 3 53 12
 293 0006 214B     	 ldr r3,.L26
 294 0008 0022     	 movs r2,#0
 295 000a 1A70     	 strb r2,[r3]
  54:XPROGTarget.c **** 	
  55:XPROGTarget.c **** 	/* Turn on clock */
  56:XPROGTarget.c **** 	sysclk_enable_peripheral_clock(USART_PDI_ID);
 296              	 .loc 3 56 2
 297 000c 0E20     	 movs r0,#14
 298 000e 204B     	 ldr r3,.L26+4
 299 0010 9847     	 blx r3
 300              	.LVL3:
  57:XPROGTarget.c **** 
  58:XPROGTarget.c **** 	/* Set Tx and XCK as outputs, Rx as input */
  59:XPROGTarget.c **** 	gpio_configure_pin(PIN_PDIDTX_GPIO, PIN_PDIDTX_OUT_FLAGS);
 301              	 .loc 3 59 2
 302 0012 4FF04051 	 mov r1,#805306368
 303 0016 1420     	 movs r0,#20
 304 0018 1E4B     	 ldr r3,.L26+8
 305 001a 9847     	 blx r3
 306              	.LVL4:
  60:XPROGTarget.c **** 	gpio_configure_pin(PIN_PDIDRX_GPIO, PIN_PDIDRX_FLAGS);
 307              	 .loc 3 60 2
 308 001c 4FF02051 	 mov r1,#671088640
 309 0020 1520     	 movs r0,#21
 310 0022 1C4B     	 ldr r3,.L26+8
 311 0024 9847     	 blx r3
 312              	.LVL5:
  61:XPROGTarget.c **** 	gpio_configure_pin(PIN_PDIC_GPIO, PIN_PDIC_OUT_FLAGS);
 313              	 .loc 3 61 2
 314 0026 4FF04051 	 mov r1,#805306368
 315 002a 1820     	 movs r0,#24
 316 002c 194B     	 ldr r3,.L26+8
 317 002e 9847     	 blx r3
 318              	.LVL6:
  62:XPROGTarget.c **** 
  63:XPROGTarget.c **** #ifdef PIN_PDIDWR_GPIO
  64:XPROGTarget.c **** 	gpio_set_pin_high(PIN_PDIDWR_GPIO);
  65:XPROGTarget.c **** 	gpio_set_pin_high(PIN_PDICWR_GPIO);
  66:XPROGTarget.c **** #endif
  67:XPROGTarget.c **** 	
  68:XPROGTarget.c **** 
  69:XPROGTarget.c **** 	delay_us(50);
 319              	 .loc 3 69 2
 320 0030 1B20     	 movs r0,#27
 321 0032 194B     	 ldr r3,.L26+12
 322 0034 9847     	 blx r3
 323              	.LVL7:
  70:XPROGTarget.c **** 
  71:XPROGTarget.c **** 	/* Set DATA line high for at least 90ns to disable /RESET functionality */
  72:XPROGTarget.c **** 	gpio_set_pin_high(PIN_PDIDTX_GPIO);
 324              	 .loc 3 72 2
 325 0036 1420     	 movs r0,#20
 326 0038 184B     	 ldr r3,.L26+16
 327 003a 9847     	 blx r3
 328              	.LVL8:
  73:XPROGTarget.c **** 	delay_us(10);
 329              	 .loc 3 73 2
 330 003c 0620     	 movs r0,#6
 331 003e 164B     	 ldr r3,.L26+12
 332 0040 9847     	 blx r3
 333              	.LVL9:
  74:XPROGTarget.c **** 
  75:XPROGTarget.c **** 	/* Set up the synchronous USART for XMEGA communications - 8 data bits, even parity, 2 stop bits *
  76:XPROGTarget.c **** 	const sam_usart_opt_t usart_pdid_settings = {
 334              	 .loc 3 76 24
 335 0042 3B46     	 mov r3,r7
 336 0044 0022     	 movs r2,#0
 337 0046 1A60     	 str r2,[r3]
 338 0048 5A60     	 str r2,[r3,#4]
 339 004a 9A60     	 str r2,[r3,#8]
 340 004c DA60     	 str r2,[r3,#12]
 341 004e 1A61     	 str r2,[r3,#16]
 342 0050 5A61     	 str r2,[r3,#20]
 343 0052 134B     	 ldr r3,.L26+20
 344 0054 3B60     	 str r3,[r7]
 345 0056 C023     	 movs r3,#192
 346 0058 7B60     	 str r3,[r7,#4]
 347 005a 4FF40053 	 mov r3,#8192
 348 005e FB60     	 str r3,[r7,#12]
  77:XPROGTarget.c **** 		PDI_BAUD_RATE,
  78:XPROGTarget.c **** 		US_MR_CHRL_8_BIT,
  79:XPROGTarget.c **** 		US_MR_PAR_EVEN,
  80:XPROGTarget.c **** 		US_MR_NBSTOP_2_BIT,
  81:XPROGTarget.c **** 		US_MR_CHMODE_NORMAL
  82:XPROGTarget.c **** 	};
  83:XPROGTarget.c **** 	usart_init_sync_master(USART_PDI, &usart_pdid_settings, sysclk_get_main_hz());
 349              	 .loc 3 83 2
 350 0060 104B     	 ldr r3,.L26+24
 351 0062 9847     	 blx r3
 352              	.LVL10:
 353 0064 0246     	 mov r2,r0
 354 0066 3B46     	 mov r3,r7
 355 0068 1946     	 mov r1,r3
 356 006a 0F48     	 ldr r0,.L26+28
 357 006c 0F4B     	 ldr r3,.L26+32
 358 006e 9847     	 blx r3
 359              	.LVL11:
  84:XPROGTarget.c **** 
  85:XPROGTarget.c **** 	/* Turn on clock */
  86:XPROGTarget.c **** 	gpio_configure_pin(PIN_PDIC_GPIO, PIN_PDIC_USART_FLAGS);
 360              	 .loc 3 86 2
 361 0070 4FF08051 	 mov r1,#268435456
 362 0074 1820     	 movs r0,#24
 363 0076 074B     	 ldr r3,.L26+8
 364 0078 9847     	 blx r3
 365              	.LVL12:
  87:XPROGTarget.c **** 
  88:XPROGTarget.c **** 	/* Send two IDLEs of 12 bits each to enable PDI interface (need at least 16 idle bits) */
  89:XPROGTarget.c **** 	XPROGTarget_SendIdle();
 366              	 .loc 3 89 2
 367 007a 0D4B     	 ldr r3,.L26+36
 368 007c 9847     	 blx r3
 369              	.LVL13:
  90:XPROGTarget.c **** 	XPROGTarget_SendIdle();
 370              	 .loc 3 90 2
 371 007e 0C4B     	 ldr r3,.L26+36
 372 0080 9847     	 blx r3
 373              	.LVL14:
  91:XPROGTarget.c **** }
 374              	 .loc 3 91 1
 375 0082 00BF     	 nop
 376 0084 1837     	 adds r7,r7,#24
 377              	.LCFI21:
 378              	 .cfi_def_cfa_offset 8
 379 0086 BD46     	 mov sp,r7
 380              	.LCFI22:
 381              	 .cfi_def_cfa_register 13
 382              	 
 383 0088 80BD     	 pop {r7,pc}
 384              	.L27:
 385 008a 00BF     	 .align 2
 386              	.L26:
 387 008c 00000000 	 .word IsSending
 388 0090 00000000 	 .word sysclk_enable_peripheral_clock
 389 0094 00000000 	 .word pio_configure_pin
 390 0098 00000000 	 .word portable_delay_cycles
 391 009c 00000000 	 .word pio_set_pin_high
 392 00a0 20A10700 	 .word 500000
 393 00a4 00000000 	 .word sysclk_get_main_hz
 394 00a8 00400940 	 .word 1074348032
 395 00ac 00000000 	 .word usart_init_sync_master
 396 00b0 00000000 	 .word XPROGTarget_SendIdle
 397              	 .cfi_endproc
 398              	.LFE175:
 400              	 .section .text.XPROGTarget_DisableTargetPDI,"ax",%progbits
 401              	 .align 1
 402              	 .global XPROGTarget_DisableTargetPDI
 403              	 .syntax unified
 404              	 .thumb
 405              	 .thumb_func
 406              	 .fpu softvfp
 408              	XPROGTarget_DisableTargetPDI:
 409              	.LFB176:
  92:XPROGTarget.c **** 
  93:XPROGTarget.c **** /** Disables the target's PDI interface, exits programming mode and starts the target's application
  94:XPROGTarget.c **** void XPROGTarget_DisableTargetPDI(void)
  95:XPROGTarget.c **** {
 410              	 .loc 3 95 1
 411              	 .cfi_startproc
 412              	 
 413              	 
 414 0000 80B5     	 push {r7,lr}
 415              	.LCFI23:
 416              	 .cfi_def_cfa_offset 8
 417              	 .cfi_offset 7,-8
 418              	 .cfi_offset 14,-4
 419 0002 00AF     	 add r7,sp,#0
 420              	.LCFI24:
 421              	 .cfi_def_cfa_register 7
  96:XPROGTarget.c **** 	/* Switch to Rx mode to ensure that all pending transmissions are complete */
  97:XPROGTarget.c **** 	if (IsSending)
 422              	 .loc 3 97 6
 423 0004 0F4B     	 ldr r3,.L30
 424 0006 1B78     	 ldrb r3,[r3]
 425              	 .loc 3 97 5
 426 0008 002B     	 cmp r3,#0
 427 000a 01D0     	 beq .L29
  98:XPROGTarget.c **** 	  XPROGTarget_SetRxMode();
 428              	 .loc 3 98 4
 429 000c 0E4B     	 ldr r3,.L30+4
 430 000e 9847     	 blx r3
 431              	.LVL15:
 432              	.L29:
  99:XPROGTarget.c **** 
 100:XPROGTarget.c **** 	/* Turn off receiver and transmitter of the USART, clear settings */
 101:XPROGTarget.c **** 	usart_disable_rx(USART_PDI);
 433              	 .loc 3 101 2
 434 0010 0E48     	 ldr r0,.L30+8
 435 0012 0F4B     	 ldr r3,.L30+12
 436 0014 9847     	 blx r3
 437              	.LVL16:
 102:XPROGTarget.c **** 	usart_disable_tx(USART_PDI);
 438              	 .loc 3 102 2
 439 0016 0D48     	 ldr r0,.L30+8
 440 0018 0E4B     	 ldr r3,.L30+16
 441 001a 9847     	 blx r3
 442              	.LVL17:
 103:XPROGTarget.c **** 
 104:XPROGTarget.c **** 	/* Tristate all pins */
 105:XPROGTarget.c **** 	gpio_configure_pin(PIN_PDIC_GPIO, PIN_PDIC_IN_FLAGS);
 443              	 .loc 3 105 2
 444 001c 4FF02051 	 mov r1,#671088640
 445 0020 1820     	 movs r0,#24
 446 0022 0D4B     	 ldr r3,.L30+20
 447 0024 9847     	 blx r3
 448              	.LVL18:
 106:XPROGTarget.c **** 	gpio_configure_pin(PIN_PDIDRX_GPIO, PIN_PDIDRX_FLAGS);
 449              	 .loc 3 106 2
 450 0026 4FF02051 	 mov r1,#671088640
 451 002a 1520     	 movs r0,#21
 452 002c 0A4B     	 ldr r3,.L30+20
 453 002e 9847     	 blx r3
 454              	.LVL19:
 107:XPROGTarget.c **** 	gpio_configure_pin(PIN_PDIDTX_GPIO, PIN_PDIDTX_IN_FLAGS);
 455              	 .loc 3 107 2
 456 0030 4FF02051 	 mov r1,#671088640
 457 0034 1420     	 movs r0,#20
 458 0036 084B     	 ldr r3,.L30+20
 459 0038 9847     	 blx r3
 460              	.LVL20:
 108:XPROGTarget.c **** 	
 109:XPROGTarget.c **** #ifdef PIN_PDIDWR_GPIO
 110:XPROGTarget.c **** 	gpio_set_pin_low(PIN_PDICWR_GPIO);
 111:XPROGTarget.c **** 	gpio_set_pin_low(PIN_PDIDWR_GPIO);
 112:XPROGTarget.c **** #endif
 113:XPROGTarget.c **** 	
 114:XPROGTarget.c **** 	/* Turn off USART */
 115:XPROGTarget.c **** 	sysclk_disable_peripheral_clock(USART_PDI_ID);
 461              	 .loc 3 115 2
 462 003a 0E20     	 movs r0,#14
 463 003c 074B     	 ldr r3,.L30+24
 464 003e 9847     	 blx r3
 465              	.LVL21:
 116:XPROGTarget.c **** }
 466              	 .loc 3 116 1
 467 0040 00BF     	 nop
 468 0042 80BD     	 pop {r7,pc}
 469              	.L31:
 470              	 .align 2
 471              	.L30:
 472 0044 00000000 	 .word IsSending
 473 0048 00000000 	 .word XPROGTarget_SetRxMode
 474 004c 00400940 	 .word 1074348032
 475 0050 00000000 	 .word usart_disable_rx
 476 0054 00000000 	 .word usart_disable_tx
 477 0058 00000000 	 .word pio_configure_pin
 478 005c 00000000 	 .word sysclk_disable_peripheral_clock
 479              	 .cfi_endproc
 480              	.LFE176:
 482              	 .section .text.XPROGTarget_SendByte,"ax",%progbits
 483              	 .align 1
 484              	 .global XPROGTarget_SendByte
 485              	 .syntax unified
 486              	 .thumb
 487              	 .thumb_func
 488              	 .fpu softvfp
 490              	XPROGTarget_SendByte:
 491              	.LFB177:
 117:XPROGTarget.c **** 
 118:XPROGTarget.c **** /** Sends a byte via the USART.
 119:XPROGTarget.c ****  *
 120:XPROGTarget.c ****  *  \param[in] Byte  Byte to send through the USART
 121:XPROGTarget.c ****  */
 122:XPROGTarget.c **** void XPROGTarget_SendByte(const uint8_t data)
 123:XPROGTarget.c **** {
 492              	 .loc 3 123 1
 493              	 .cfi_startproc
 494              	 
 495              	 
 496 0000 80B5     	 push {r7,lr}
 497              	.LCFI25:
 498              	 .cfi_def_cfa_offset 8
 499              	 .cfi_offset 7,-8
 500              	 .cfi_offset 14,-4
 501 0002 82B0     	 sub sp,sp,#8
 502              	.LCFI26:
 503              	 .cfi_def_cfa_offset 16
 504 0004 00AF     	 add r7,sp,#0
 505              	.LCFI27:
 506              	 .cfi_def_cfa_register 7
 507 0006 0346     	 mov r3,r0
 508 0008 FB71     	 strb r3,[r7,#7]
 124:XPROGTarget.c **** 	/* Switch to Tx mode if currently in Rx mode */
 125:XPROGTarget.c **** 	if (!(IsSending))
 509              	 .loc 3 125 6
 510 000a 094B     	 ldr r3,.L34
 511 000c 1B78     	 ldrb r3,[r3]
 512 000e 83F00103 	 eor r3,r3,#1
 513 0012 DBB2     	 uxtb r3,r3
 514              	 .loc 3 125 5
 515 0014 002B     	 cmp r3,#0
 516 0016 01D0     	 beq .L33
 126:XPROGTarget.c **** 	  XPROGTarget_SetTxMode();
 517              	 .loc 3 126 4
 518 0018 064B     	 ldr r3,.L34+4
 519 001a 9847     	 blx r3
 520              	.LVL22:
 521              	.L33:
 127:XPROGTarget.c **** 
 128:XPROGTarget.c **** 	/* Wait until there is space in the hardware Tx buffer before writing */
 129:XPROGTarget.c **** 	usart_putchar(USART_PDI, data);	
 522              	 .loc 3 129 2
 523 001c FB79     	 ldrb r3,[r7,#7]
 524 001e 1946     	 mov r1,r3
 525 0020 0548     	 ldr r0,.L34+8
 526 0022 064B     	 ldr r3,.L34+12
 527 0024 9847     	 blx r3
 528              	.LVL23:
 130:XPROGTarget.c **** }
 529              	 .loc 3 130 1
 530 0026 00BF     	 nop
 531 0028 0837     	 adds r7,r7,#8
 532              	.LCFI28:
 533              	 .cfi_def_cfa_offset 8
 534 002a BD46     	 mov sp,r7
 535              	.LCFI29:
 536              	 .cfi_def_cfa_register 13
 537              	 
 538 002c 80BD     	 pop {r7,pc}
 539              	.L35:
 540 002e 00BF     	 .align 2
 541              	.L34:
 542 0030 00000000 	 .word IsSending
 543 0034 00000000 	 .word XPROGTarget_SetTxMode
 544 0038 00400940 	 .word 1074348032
 545 003c 00000000 	 .word usart_putchar
 546              	 .cfi_endproc
 547              	.LFE177:
 549              	 .section .text.XPROGTarget_ReceiveByte,"ax",%progbits
 550              	 .align 1
 551              	 .global XPROGTarget_ReceiveByte
 552              	 .syntax unified
 553              	 .thumb
 554              	 .thumb_func
 555              	 .fpu softvfp
 557              	XPROGTarget_ReceiveByte:
 558              	.LFB178:
 131:XPROGTarget.c **** 
 132:XPROGTarget.c **** /** Receives a byte via the hardware USART, blocking until data is received or timeout expired.
 133:XPROGTarget.c ****  *
 134:XPROGTarget.c ****  *  \return Received byte from the USART
 135:XPROGTarget.c ****  */
 136:XPROGTarget.c **** uint8_t XPROGTarget_ReceiveByte(void)
 137:XPROGTarget.c **** {
 559              	 .loc 3 137 1
 560              	 .cfi_startproc
 561              	 
 562              	 
 563 0000 80B5     	 push {r7,lr}
 564              	.LCFI30:
 565              	 .cfi_def_cfa_offset 8
 566              	 .cfi_offset 7,-8
 567              	 .cfi_offset 14,-4
 568 0002 82B0     	 sub sp,sp,#8
 569              	.LCFI31:
 570              	 .cfi_def_cfa_offset 16
 571 0004 00AF     	 add r7,sp,#0
 572              	.LCFI32:
 573              	 .cfi_def_cfa_register 7
 138:XPROGTarget.c **** 	uint32_t dummy_read;
 139:XPROGTarget.c **** 		
 140:XPROGTarget.c **** 	/* Switch to Rx mode if currently in Tx mode */
 141:XPROGTarget.c **** 	if (IsSending)
 574              	 .loc 3 141 6
 575 0006 0C4B     	 ldr r3,.L42
 576 0008 1B78     	 ldrb r3,[r3]
 577              	 .loc 3 141 5
 578 000a 002B     	 cmp r3,#0
 579 000c 01D0     	 beq .L41
 142:XPROGTarget.c **** 	  XPROGTarget_SetRxMode();
 580              	 .loc 3 142 4
 581 000e 0B4B     	 ldr r3,.L42+4
 582 0010 9847     	 blx r3
 583              	.LVL24:
 584              	.L41:
 143:XPROGTarget.c **** 
 144:XPROGTarget.c **** 	/* Wait until a byte has been received before reading */
 145:XPROGTarget.c **** 	//usart_getchar(USART_PDI, &dummy_read);
 146:XPROGTarget.c **** 	while((usart_read(USART_PDI, &dummy_read) == 1) && (TimeoutTicksRemaining));
 585              	 .loc 3 146 7
 586 0012 00BF     	 nop
 587              	.L39:
 588              	 .loc 3 146 9 discriminator 2
 589 0014 3B1D     	 adds r3,r7,#4
 590 0016 1946     	 mov r1,r3
 591 0018 0948     	 ldr r0,.L42+8
 592 001a 0A4B     	 ldr r3,.L42+12
 593 001c 9847     	 blx r3
 594              	.LVL25:
 595 001e 0346     	 mov r3,r0
 596              	 .loc 3 146 7 discriminator 2
 597 0020 012B     	 cmp r3,#1
 598 0022 03D1     	 bne .L38
 599              	 .loc 3 146 50 discriminator 1
 600 0024 084B     	 ldr r3,.L42+16
 601 0026 1B68     	 ldr r3,[r3]
 602 0028 002B     	 cmp r3,#0
 603 002a F3D1     	 bne .L39
 604              	.L38:
 147:XPROGTarget.c **** 
 148:XPROGTarget.c **** 	return dummy_read;
 605              	 .loc 3 148 9
 606 002c 7B68     	 ldr r3,[r7,#4]
 607 002e DBB2     	 uxtb r3,r3
 149:XPROGTarget.c **** }
 608              	 .loc 3 149 1
 609 0030 1846     	 mov r0,r3
 610 0032 0837     	 adds r7,r7,#8
 611              	.LCFI33:
 612              	 .cfi_def_cfa_offset 8
 613 0034 BD46     	 mov sp,r7
 614              	.LCFI34:
 615              	 .cfi_def_cfa_register 13
 616              	 
 617 0036 80BD     	 pop {r7,pc}
 618              	.L43:
 619              	 .align 2
 620              	.L42:
 621 0038 00000000 	 .word IsSending
 622 003c 00000000 	 .word XPROGTarget_SetRxMode
 623 0040 00400940 	 .word 1074348032
 624 0044 00000000 	 .word usart_read
 625 0048 00000000 	 .word TimeoutTicksRemaining
 626              	 .cfi_endproc
 627              	.LFE178:
 629              	 .section .text.XPROGTarget_SendIdle,"ax",%progbits
 630              	 .align 1
 631              	 .global XPROGTarget_SendIdle
 632              	 .syntax unified
 633              	 .thumb
 634              	 .thumb_func
 635              	 .fpu softvfp
 637              	XPROGTarget_SendIdle:
 638              	.LFB179:
 150:XPROGTarget.c **** 
 151:XPROGTarget.c **** /** Sends an IDLE via the USART to the attached target, consisting of a full frame of idle bits. */
 152:XPROGTarget.c **** void XPROGTarget_SendIdle(void)
 153:XPROGTarget.c **** {
 639              	 .loc 3 153 1
 640              	 .cfi_startproc
 641              	 
 642              	 
 643 0000 80B5     	 push {r7,lr}
 644              	.LCFI35:
 645              	 .cfi_def_cfa_offset 8
 646              	 .cfi_offset 7,-8
 647              	 .cfi_offset 14,-4
 648 0002 82B0     	 sub sp,sp,#8
 649              	.LCFI36:
 650              	 .cfi_def_cfa_offset 16
 651 0004 00AF     	 add r7,sp,#0
 652              	.LCFI37:
 653              	 .cfi_def_cfa_register 7
 154:XPROGTarget.c **** 	/* Switch to Tx mode if currently in Rx mode */
 155:XPROGTarget.c **** 	if (!(IsSending))
 654              	 .loc 3 155 6
 655 0006 1C4B     	 ldr r3,.L56
 656 0008 1B78     	 ldrb r3,[r3]
 657 000a 83F00103 	 eor r3,r3,#1
 658 000e DBB2     	 uxtb r3,r3
 659              	 .loc 3 155 5
 660 0010 002B     	 cmp r3,#0
 661 0012 01D0     	 beq .L45
 156:XPROGTarget.c **** 	  XPROGTarget_SetTxMode();
 662              	 .loc 3 156 4
 663 0014 194B     	 ldr r3,.L56+4
 664 0016 9847     	 blx r3
 665              	.LVL26:
 666              	.L45:
 667              	.LBB2:
 157:XPROGTarget.c **** 
 158:XPROGTarget.c **** 	/* Need to do nothing for a full frame to send an IDLE */
 159:XPROGTarget.c **** 	for (uint8_t i = 0; i < BITS_IN_USART_FRAME; i++)
 668              	 .loc 3 159 15
 669 0018 0023     	 movs r3,#0
 670 001a FB71     	 strb r3,[r7,#7]
 671              	 .loc 3 159 2
 672 001c 23E0     	 b .L46
 673              	.L53:
 160:XPROGTarget.c **** 	{
 161:XPROGTarget.c **** 		/* Wait for a full cycle of the clock */
 162:XPROGTarget.c **** 		while(gpio_pin_is_high(PIN_PDIC_GPIO) && TimeoutTicksRemaining);
 674              	 .loc 3 162 8
 675 001e 00BF     	 nop
 676              	.L48:
 677              	 .loc 3 162 9 discriminator 2
 678 0020 1820     	 movs r0,#24
 679 0022 174B     	 ldr r3,.L56+8
 680 0024 9847     	 blx r3
 681              	.LVL27:
 682 0026 0346     	 mov r3,r0
 683              	 .loc 3 162 8 discriminator 2
 684 0028 002B     	 cmp r3,#0
 685 002a 03D0     	 beq .L54
 686              	 .loc 3 162 41 discriminator 1
 687 002c 154B     	 ldr r3,.L56+12
 688 002e 1B68     	 ldr r3,[r3]
 689 0030 002B     	 cmp r3,#0
 690 0032 F5D1     	 bne .L48
 691              	.L54:
 163:XPROGTarget.c **** 		while(gpio_pin_is_low(PIN_PDIC_GPIO) && TimeoutTicksRemaining);
 692              	 .loc 3 163 8
 693 0034 00BF     	 nop
 694              	.L50:
 695              	 .loc 3 163 9 discriminator 2
 696 0036 1820     	 movs r0,#24
 697 0038 114B     	 ldr r3,.L56+8
 698 003a 9847     	 blx r3
 699              	.LVL28:
 700 003c 0346     	 mov r3,r0
 701              	 .loc 3 163 8 discriminator 2
 702 003e 002B     	 cmp r3,#0
 703 0040 03D1     	 bne .L55
 704              	 .loc 3 163 40 discriminator 1
 705 0042 104B     	 ldr r3,.L56+12
 706 0044 1B68     	 ldr r3,[r3]
 707 0046 002B     	 cmp r3,#0
 708 0048 F5D1     	 bne .L50
 709              	.L55:
 164:XPROGTarget.c **** 		while(gpio_pin_is_high(PIN_PDIC_GPIO) && TimeoutTicksRemaining);
 710              	 .loc 3 164 8
 711 004a 00BF     	 nop
 712              	.L52:
 713              	 .loc 3 164 9 discriminator 2
 714 004c 1820     	 movs r0,#24
 715 004e 0C4B     	 ldr r3,.L56+8
 716 0050 9847     	 blx r3
 717              	.LVL29:
 718 0052 0346     	 mov r3,r0
 719              	 .loc 3 164 8 discriminator 2
 720 0054 002B     	 cmp r3,#0
 721 0056 03D0     	 beq .L51
 722              	 .loc 3 164 41 discriminator 1
 723 0058 0A4B     	 ldr r3,.L56+12
 724 005a 1B68     	 ldr r3,[r3]
 725 005c 002B     	 cmp r3,#0
 726 005e F5D1     	 bne .L52
 727              	.L51:
 159:XPROGTarget.c **** 	{
 728              	 .loc 3 159 48 discriminator 2
 729 0060 FB79     	 ldrb r3,[r7,#7]
 730 0062 0133     	 adds r3,r3,#1
 731 0064 FB71     	 strb r3,[r7,#7]
 732              	.L46:
 159:XPROGTarget.c **** 	{
 733              	 .loc 3 159 2 discriminator 1
 734 0066 FB79     	 ldrb r3,[r7,#7]
 735 0068 0B2B     	 cmp r3,#11
 736 006a D8D9     	 bls .L53
 737              	.LBE2:
 165:XPROGTarget.c **** 	}
 166:XPROGTarget.c **** }
 738              	 .loc 3 166 1
 739 006c 00BF     	 nop
 740 006e 00BF     	 nop
 741 0070 0837     	 adds r7,r7,#8
 742              	.LCFI38:
 743              	 .cfi_def_cfa_offset 8
 744 0072 BD46     	 mov sp,r7
 745              	.LCFI39:
 746              	 .cfi_def_cfa_register 13
 747              	 
 748 0074 80BD     	 pop {r7,pc}
 749              	.L57:
 750 0076 00BF     	 .align 2
 751              	.L56:
 752 0078 00000000 	 .word IsSending
 753 007c 00000000 	 .word XPROGTarget_SetTxMode
 754 0080 00000000 	 .word pio_get_pin_value
 755 0084 00000000 	 .word TimeoutTicksRemaining
 756              	 .cfi_endproc
 757              	.LFE179:
 759              	 .section .text.XPROGTarget_SetTxMode,"ax",%progbits
 760              	 .align 1
 761              	 .syntax unified
 762              	 .thumb
 763              	 .thumb_func
 764              	 .fpu softvfp
 766              	XPROGTarget_SetTxMode:
 767              	.LFB180:
 167:XPROGTarget.c **** 
 168:XPROGTarget.c **** static void XPROGTarget_SetTxMode(void)
 169:XPROGTarget.c **** {
 768              	 .loc 3 169 1
 769              	 .cfi_startproc
 770              	 
 771              	 
 772 0000 80B5     	 push {r7,lr}
 773              	.LCFI40:
 774              	 .cfi_def_cfa_offset 8
 775              	 .cfi_offset 7,-8
 776              	 .cfi_offset 14,-4
 777 0002 00AF     	 add r7,sp,#0
 778              	.LCFI41:
 779              	 .cfi_def_cfa_register 7
 170:XPROGTarget.c **** 	/* Wait for a full cycle of the clock */
 171:XPROGTarget.c **** 	while(gpio_pin_is_high(PIN_PDIC_GPIO) && TimeoutTicksRemaining);
 780              	 .loc 3 171 7
 781 0004 00BF     	 nop
 782              	.L60:
 783              	 .loc 3 171 8 discriminator 2
 784 0006 1820     	 movs r0,#24
 785 0008 174B     	 ldr r3,.L67
 786 000a 9847     	 blx r3
 787              	.LVL30:
 788 000c 0346     	 mov r3,r0
 789              	 .loc 3 171 7 discriminator 2
 790 000e 002B     	 cmp r3,#0
 791 0010 03D0     	 beq .L65
 792              	 .loc 3 171 40 discriminator 1
 793 0012 164B     	 ldr r3,.L67+4
 794 0014 1B68     	 ldr r3,[r3]
 795 0016 002B     	 cmp r3,#0
 796 0018 F5D1     	 bne .L60
 797              	.L65:
 172:XPROGTarget.c **** 	while(gpio_pin_is_low(PIN_PDIC_GPIO) && TimeoutTicksRemaining);
 798              	 .loc 3 172 7
 799 001a 00BF     	 nop
 800              	.L62:
 801              	 .loc 3 172 8 discriminator 2
 802 001c 1820     	 movs r0,#24
 803 001e 124B     	 ldr r3,.L67
 804 0020 9847     	 blx r3
 805              	.LVL31:
 806 0022 0346     	 mov r3,r0
 807              	 .loc 3 172 7 discriminator 2
 808 0024 002B     	 cmp r3,#0
 809 0026 03D1     	 bne .L66
 810              	 .loc 3 172 39 discriminator 1
 811 0028 104B     	 ldr r3,.L67+4
 812 002a 1B68     	 ldr r3,[r3]
 813 002c 002B     	 cmp r3,#0
 814 002e F5D1     	 bne .L62
 815              	.L66:
 173:XPROGTarget.c **** 	while(gpio_pin_is_high(PIN_PDIC_GPIO) && TimeoutTicksRemaining);
 816              	 .loc 3 173 7
 817 0030 00BF     	 nop
 818              	.L64:
 819              	 .loc 3 173 8 discriminator 2
 820 0032 1820     	 movs r0,#24
 821 0034 0C4B     	 ldr r3,.L67
 822 0036 9847     	 blx r3
 823              	.LVL32:
 824 0038 0346     	 mov r3,r0
 825              	 .loc 3 173 7 discriminator 2
 826 003a 002B     	 cmp r3,#0
 827 003c 03D0     	 beq .L63
 828              	 .loc 3 173 40 discriminator 1
 829 003e 0B4B     	 ldr r3,.L67+4
 830 0040 1B68     	 ldr r3,[r3]
 831 0042 002B     	 cmp r3,#0
 832 0044 F5D1     	 bne .L64
 833              	.L63:
 174:XPROGTarget.c **** 		
 175:XPROGTarget.c **** 	usart_disable_rx(USART_PDI);
 834              	 .loc 3 175 2
 835 0046 0A48     	 ldr r0,.L67+8
 836 0048 0A4B     	 ldr r3,.L67+12
 837 004a 9847     	 blx r3
 838              	.LVL33:
 176:XPROGTarget.c **** 	usart_enable_tx(USART_PDI);
 839              	 .loc 3 176 2
 840 004c 0848     	 ldr r0,.L67+8
 841 004e 0A4B     	 ldr r3,.L67+16
 842 0050 9847     	 blx r3
 843              	.LVL34:
 177:XPROGTarget.c **** 	gpio_configure_pin(PIN_PDIDTX_GPIO, PIN_PDIDTX_USART_FLAGS);
 844              	 .loc 3 177 2
 845 0052 4FF00061 	 mov r1,#134217728
 846 0056 1420     	 movs r0,#20
 847 0058 084B     	 ldr r3,.L67+20
 848 005a 9847     	 blx r3
 849              	.LVL35:
 178:XPROGTarget.c **** 	
 179:XPROGTarget.c **** #ifdef PIN_PDIDWR_GPIO
 180:XPROGTarget.c **** 	gpio_set_pin_high(PIN_PDIDWR_GPIO);
 181:XPROGTarget.c **** 	gpio_set_pin_high(PIN_PDICWR_GPIO);
 182:XPROGTarget.c **** #endif
 183:XPROGTarget.c **** 
 184:XPROGTarget.c **** 	IsSending = true;
 850              	 .loc 3 184 12
 851 005c 084B     	 ldr r3,.L67+24
 852 005e 0122     	 movs r2,#1
 853 0060 1A70     	 strb r2,[r3]
 185:XPROGTarget.c **** }
 854              	 .loc 3 185 1
 855 0062 00BF     	 nop
 856 0064 80BD     	 pop {r7,pc}
 857              	.L68:
 858 0066 00BF     	 .align 2
 859              	.L67:
 860 0068 00000000 	 .word pio_get_pin_value
 861 006c 00000000 	 .word TimeoutTicksRemaining
 862 0070 00400940 	 .word 1074348032
 863 0074 00000000 	 .word usart_disable_rx
 864 0078 00000000 	 .word usart_enable_tx
 865 007c 00000000 	 .word pio_configure_pin
 866 0080 00000000 	 .word IsSending
 867              	 .cfi_endproc
 868              	.LFE180:
 870              	 .section .text.XPROGTarget_SetRxMode,"ax",%progbits
 871              	 .align 1
 872              	 .syntax unified
 873              	 .thumb
 874              	 .thumb_func
 875              	 .fpu softvfp
 877              	XPROGTarget_SetRxMode:
 878              	.LFB181:
 186:XPROGTarget.c **** 
 187:XPROGTarget.c **** static void XPROGTarget_SetRxMode(void)
 188:XPROGTarget.c **** {
 879              	 .loc 3 188 1
 880              	 .cfi_startproc
 881              	 
 882              	 
 883 0000 80B5     	 push {r7,lr}
 884              	.LCFI42:
 885              	 .cfi_def_cfa_offset 8
 886              	 .cfi_offset 7,-8
 887              	 .cfi_offset 14,-4
 888 0002 00AF     	 add r7,sp,#0
 889              	.LCFI43:
 890              	 .cfi_def_cfa_register 7
 189:XPROGTarget.c **** 	while(usart_is_tx_empty(USART_PDI) == 0);
 891              	 .loc 3 189 7
 892 0004 00BF     	 nop
 893              	.L70:
 894              	 .loc 3 189 8 discriminator 1
 895 0006 0B48     	 ldr r0,.L71
 896 0008 0B4B     	 ldr r3,.L71+4
 897 000a 9847     	 blx r3
 898              	.LVL36:
 899 000c 0346     	 mov r3,r0
 900              	 .loc 3 189 7 discriminator 1
 901 000e 002B     	 cmp r3,#0
 902 0010 F9D0     	 beq .L70
 190:XPROGTarget.c **** 
 191:XPROGTarget.c **** 	usart_disable_tx(USART_PDI);
 903              	 .loc 3 191 2
 904 0012 0848     	 ldr r0,.L71
 905 0014 094B     	 ldr r3,.L71+8
 906 0016 9847     	 blx r3
 907              	.LVL37:
 192:XPROGTarget.c **** 	usart_enable_rx(USART_PDI);
 908              	 .loc 3 192 2
 909 0018 0648     	 ldr r0,.L71
 910 001a 094B     	 ldr r3,.L71+12
 911 001c 9847     	 blx r3
 912              	.LVL38:
 193:XPROGTarget.c **** 	
 194:XPROGTarget.c **** 	gpio_configure_pin(PIN_PDIDTX_GPIO, PIN_PDIDTX_IN_FLAGS);
 913              	 .loc 3 194 2
 914 001e 4FF02051 	 mov r1,#671088640
 915 0022 1420     	 movs r0,#20
 916 0024 074B     	 ldr r3,.L71+16
 917 0026 9847     	 blx r3
 918              	.LVL39:
 195:XPROGTarget.c **** 	
 196:XPROGTarget.c **** #ifdef PIN_PDIDWR_GPIO
 197:XPROGTarget.c **** 	gpio_set_pin_low(PIN_PDIDWR_GPIO);
 198:XPROGTarget.c **** #endif
 199:XPROGTarget.c **** 	
 200:XPROGTarget.c **** 	IsSending = false;
 919              	 .loc 3 200 12
 920 0028 074B     	 ldr r3,.L71+20
 921 002a 0022     	 movs r2,#0
 922 002c 1A70     	 strb r2,[r3]
 201:XPROGTarget.c **** }
 923              	 .loc 3 201 1
 924 002e 00BF     	 nop
 925 0030 80BD     	 pop {r7,pc}
 926              	.L72:
 927 0032 00BF     	 .align 2
 928              	.L71:
 929 0034 00400940 	 .word 1074348032
 930 0038 00000000 	 .word usart_is_tx_empty
 931 003c 00000000 	 .word usart_disable_tx
 932 0040 00000000 	 .word usart_enable_rx
 933 0044 00000000 	 .word pio_configure_pin
 934 0048 00000000 	 .word IsSending
 935              	 .cfi_endproc
 936              	.LFE181:
 938              	 .text
 939              	.Letext0:
 940              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 941              	 .file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 942              	 .file 6 ".././hal/sam3u1c/inc/sam3u1c.h"
 943              	 .file 7 ".././hal/sam3u1c/inc/core_cm3.h"
 944              	 .file 8 ".././hal/sam3u1c/inc/system_sam3u.h"
 945              	 .file 9 ".././hal/sam3u1c/inc/component/component_usart.h"
 946              	 .file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 947              	 .file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 948              	 .file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 949              	 .file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 950              	 .file 14 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\include\\stdlib.h"
 951              	 .file 15 ".././hal/sam3u1c/inc/interrupt/interrupt_sam_nvic.h"
 952              	 .file 16 ".././hal/sam3u1c/inc/compiler.h"
 953              	 .file 17 ".././hal/sam3u1c/inc/sam3u/pll.h"
 954              	 .file 18 ".././hal/sam3u1c/inc/pio.h"
 955              	 .file 19 ".././hal/sam3u1c/inc/sam/sleepmgr.h"
 956              	 .file 20 ".././hal/sam3u1c/inc/usart.h"
 957              	 .file 21 "./conf_usb.h"
 958              	 .file 22 ".././hal/sam3u1c/inc/usb_protocol.h"
 959              	 .file 23 ".././hal/sam3u1c/inc/udi.h"
 960              	 .file 24 ".././hal/sam3u1c/inc/udc_desc.h"
 961              	 .file 25 ".././hal/sam3u1c/inc/udd.h"
 962              	 .file 26 ".././hal/sam3u1c/inc/udi_vendor.h"
 963              	 .file 27 ".././hal/sam3u1c/inc/udi_cdc.h"
 964              	 .file 28 "XPROGTimeout.h"
 965              	 .file 29 "XPROGNewAE.h"
 966              	 .file 30 ".././hal/sam3u1c/inc/sam/cycle_counter.h"
 967              	 .file 31 ".././hal/sam3u1c/inc/pmc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 XPROGTarget.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:27     .text.osc_get_rate:00000000 $t
    {standard input}:34     .text.osc_get_rate:00000000 osc_get_rate
    {standard input}:60     .text.osc_get_rate:00000014 $d
    {standard input}:68     .text.osc_get_rate:00000034 $t
    {standard input}:122    .text.osc_get_rate:00000064 $d
    {standard input}:129    .text.sysclk_get_main_hz:00000000 $t
    {standard input}:135    .text.sysclk_get_main_hz:00000000 sysclk_get_main_hz
    {standard input}:163    .text.sysclk_get_main_hz:00000014 $d
    {standard input}:168    .text.sysclk_enable_peripheral_clock:00000000 $t
    {standard input}:174    .text.sysclk_enable_peripheral_clock:00000000 sysclk_enable_peripheral_clock
    {standard input}:210    .text.sysclk_enable_peripheral_clock:00000018 $d
    {standard input}:215    .text.sysclk_disable_peripheral_clock:00000000 $t
    {standard input}:221    .text.sysclk_disable_peripheral_clock:00000000 sysclk_disable_peripheral_clock
    {standard input}:257    .text.sysclk_disable_peripheral_clock:00000018 $d
    {standard input}:264    .bss.IsSending:00000000 IsSending
    {standard input}:265    .bss.IsSending:00000000 $d
    {standard input}:267    .text.XPROGTarget_EnableTargetPDI:00000000 $t
    {standard input}:274    .text.XPROGTarget_EnableTargetPDI:00000000 XPROGTarget_EnableTargetPDI
    {standard input}:387    .text.XPROGTarget_EnableTargetPDI:0000008c $d
    {standard input}:637    .text.XPROGTarget_SendIdle:00000000 XPROGTarget_SendIdle
    {standard input}:401    .text.XPROGTarget_DisableTargetPDI:00000000 $t
    {standard input}:408    .text.XPROGTarget_DisableTargetPDI:00000000 XPROGTarget_DisableTargetPDI
    {standard input}:472    .text.XPROGTarget_DisableTargetPDI:00000044 $d
    {standard input}:877    .text.XPROGTarget_SetRxMode:00000000 XPROGTarget_SetRxMode
    {standard input}:483    .text.XPROGTarget_SendByte:00000000 $t
    {standard input}:490    .text.XPROGTarget_SendByte:00000000 XPROGTarget_SendByte
    {standard input}:542    .text.XPROGTarget_SendByte:00000030 $d
    {standard input}:766    .text.XPROGTarget_SetTxMode:00000000 XPROGTarget_SetTxMode
    {standard input}:550    .text.XPROGTarget_ReceiveByte:00000000 $t
    {standard input}:557    .text.XPROGTarget_ReceiveByte:00000000 XPROGTarget_ReceiveByte
    {standard input}:621    .text.XPROGTarget_ReceiveByte:00000038 $d
    {standard input}:630    .text.XPROGTarget_SendIdle:00000000 $t
    {standard input}:752    .text.XPROGTarget_SendIdle:00000078 $d
    {standard input}:760    .text.XPROGTarget_SetTxMode:00000000 $t
    {standard input}:860    .text.XPROGTarget_SetTxMode:00000068 $d
    {standard input}:871    .text.XPROGTarget_SetRxMode:00000000 $t
    {standard input}:929    .text.XPROGTarget_SetRxMode:00000034 $d
                           .group:00000000 wm4.0.84f01b7600eb36308f16331d3d2e9779
                           .group:00000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:00000000 wm4.parts.h.45.afc900689b2c82332e69d798acedc875
                           .group:00000000 wm4.tpaste.h.45.af3ee36765243b162c88f7f944858426
                           .group:00000000 wm4.stringz.h.45.c4f6cbe0005e6c1d2139bc6c0e4f4722
                           .group:00000000 wm4.mrepeat.h.59.c5daaed201a4340b0edf435161d0b77f
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.sam3u1c.h.220.c0b54b5a55bc87791749ae17b1487779
                           .group:00000000 wm4.core_cm3.h.32.5c59c312db585622d253fdb887b0afb1
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm3.h.127.b561404f2a159dc517b409bc244d16c1
                           .group:00000000 wm4.component_adc.h.43.d49887380d07d1cd08cc4e37b3485e31
                           .group:00000000 wm4.component_adc12b.h.43.eadc09f1073923fb91f1f393cc397dcb
                           .group:00000000 wm4.component_chipid.h.43.15825c969b1cc9eeea3d9416499874c8
                           .group:00000000 wm4.component_dmac.h.43.cc8187b1cf6bfeadc91b14fdd28b9e8b
                           .group:00000000 wm4.component_efc.h.43.cb1b3997ad9ea3733ad421ecbfd02fdd
                           .group:00000000 wm4.component_gpbr.h.43.49b7e13894fe38b29f2243bbbe530227
                           .group:00000000 wm4.component_hsmci.h.43.7b7194c92e1480c038f3342f7cec440a
                           .group:00000000 wm4.component_matrix.h.43.1d209838fb75b4827119203a357141ee
                           .group:00000000 wm4.component_pdc.h.43.19528a5f9ef5a348234ea06f89069c55
                           .group:00000000 wm4.component_pio.h.43.163b46c3683ccf92e8de39a5554f50e8
                           .group:00000000 wm4.component_pmc.h.43.ee4f030602866917aeed15fb2b948de8
                           .group:00000000 wm4.component_pwm.h.43.ab6262a86f0aea354b43fe6dce7e7eb3
                           .group:00000000 wm4.component_rstc.h.43.4eb59dc2ddcf585fabf251d0c329fcdd
                           .group:00000000 wm4.component_rtc.h.43.ba8ccafc772b11d562a3cceab8b95072
                           .group:00000000 wm4.component_rtt.h.43.3206ef8f067e5e747c3c4c7e719c1429
                           .group:00000000 wm4.component_smc.h.43.907847915f1a5616734199d7e34424fa
                           .group:00000000 wm4.component_spi.h.43.a2a09df64ab768c0a32be55285c74ded
                           .group:00000000 wm4.component_ssc.h.43.d7c78f990c13fc511671b64798c4bcd0
                           .group:00000000 wm4.component_supc.h.43.7d17f8e5ed3ba815e84381152735062f
                           .group:00000000 wm4.component_tc.h.43.662eac8137408372b4f9d26c0b5f8621
                           .group:00000000 wm4.component_twi.h.43.eda18625bd851fc4605861f5b3240c0b
                           .group:00000000 wm4.component_uart.h.43.2d92735c5ea05c973661e1ba99a2f37c
                           .group:00000000 wm4.component_udphs.h.43.21cecd26a4e44df0013037f29f2716e4
                           .group:00000000 wm4.component_usart.h.43.7872f8f455adb38b67b9fbdb15657fbe
                           .group:00000000 wm4.component_wdt.h.43.e31e10a5469b62c3660b49ab250f802f
                           .group:00000000 wm4.instance_hsmci.h.43.e233236cc7fd5a805539a7ecc0e1d8d2
                           .group:00000000 wm4.instance_ssc.h.43.c0cfabc3b9f3bb60745c913111bce965
                           .group:00000000 wm4.instance_spi.h.43.570ae46af19e4179d9796872b9a8b9bc
                           .group:00000000 wm4.instance_tc0.h.43.049b3a82387d2961594190609e896a29
                           .group:00000000 wm4.instance_twi0.h.43.255dc0afa9e0d45eaea0a935eca2f103
                           .group:00000000 wm4.instance_twi1.h.43.652d1d407893f259f2a817544ba662c2
                           .group:00000000 wm4.instance_pwm.h.43.88294acec3ca56d6fc521038521a1567
                           .group:00000000 wm4.instance_usart0.h.43.e26677512aee3dd3bedd71d394410000
                           .group:00000000 wm4.instance_usart1.h.43.1ba97dbc6610d9fb3132b9d845688201
                           .group:00000000 wm4.instance_usart2.h.43.baa1bf30b3c5acdee90c4a1f50fe9ebd
                           .group:00000000 wm4.instance_udphs.h.43.b1ce94181e0d1f22877b81c6040a4363
                           .group:00000000 wm4.instance_adc12b.h.43.d73ed59e867ccdfdb846d9ef32a50c0c
                           .group:00000000 wm4.instance_adc.h.43.2b7611a00afeb4c555339b844d4b8456
                           .group:00000000 wm4.instance_dmac.h.43.ee72691d84889c8f285932be4a075ddb
                           .group:00000000 wm4.instance_smc.h.43.29610fd00979caaaa65821ad40e9da06
                           .group:00000000 wm4.instance_matrix.h.43.01ee474141594385374c41a29daeeefe
                           .group:00000000 wm4.instance_pmc.h.43.37430325ed7b8b24c3fe640c41c29ef5
                           .group:00000000 wm4.instance_uart.h.43.bd378395ba022bc8670c82ebe656fbbd
                           .group:00000000 wm4.instance_chipid.h.43.29cd8fb600f149aa58830fcc78fe36f9
                           .group:00000000 wm4.instance_efc0.h.43.6b85dba20721a7e9fc4350e78d193680
                           .group:00000000 wm4.instance_efc1.h.43.2c5e94fc4d2742678318d73450d08d57
                           .group:00000000 wm4.instance_pioa.h.43.eeb46cc3bfe01a1f28e67aa3a6851ed8
                           .group:00000000 wm4.instance_piob.h.43.652ce26b6c37ac56f9ed42a9216d9aca
                           .group:00000000 wm4.instance_rstc.h.43.c5de224364a50a85f237c0b864aa4c8f
                           .group:00000000 wm4.instance_supc.h.43.a5f1a5ca08f468ccf34ed3653e045f1f
                           .group:00000000 wm4.instance_rtt.h.43.8622b192c23334996132415e3095df7f
                           .group:00000000 wm4.instance_wdt.h.43.407ea53e133eacf09acf2c7fcb6b7524
                           .group:00000000 wm4.instance_rtc.h.43.f70b77f9180401c8d9d920cb4a1cd166
                           .group:00000000 wm4.instance_gpbr.h.43.9066cb40d557f6755101368854272348
                           .group:00000000 wm4.sam3u1c.h.312.ae446d8e874d34ca3df78faf190c678f
                           .group:00000000 wm4.pio_sam3u1c.h.43.18b24f16e1710ff2a400d88fe33c5107
                           .group:00000000 wm4.sam3u1c.h.442.cd4bbc3af493e98bc9b60c2905132ed0
                           .group:00000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:00000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.cdefs.h.49.2bf373aedffd8b393ccd11dc057e8547
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.compiler.h.88.0e6ad966134fa012ce9a34053d3f48aa
                           .group:00000000 wm4.interrupt_sam_nvic.h.45.4876da6c127868305d66389e87e0876f
                           .group:00000000 wm4.compiler.h.425.66dd29c210af3287ed85ec3553a3e6b1
                           .group:00000000 wm4.conf_clock.h.45.5dc276d21b4d793a62f1a9757cc18d5c
                           .group:00000000 wm4.board.h.48.3fc21f768e842120f151448a98046af0
                           .group:00000000 wm4.cw521.h.62.38d76eca36ece19cb9950be38af128c7
                           .group:00000000 wm4.pmc.h.45.bbe1bf97a811e3b283420b2eeadf0b35
                           .group:00000000 wm4.osc.h.94.b766cddafe899eca01d775f7b2906680
                           .group:00000000 wm4.pll.h.45.a605c31ca466ae25752a678e8572be48
                           .group:00000000 wm4.sysclk.h.156.541a142b0016a365728ea1f7c0e3db84
                           .group:00000000 wm4.cycle_counter.h.44.fde38fb1acfd6555d72e65fae6e86af5
                           .group:00000000 wm4.delay.h.105.f2a8ab5e71eab0684cf6985b5c2fc9e8
                           .group:00000000 wm4.efc.h.45.ec5734119c630498df26106bacf9a684
                           .group:00000000 wm4.flash_efc.h.90.a4a39259055880dc10b861c5fe1b99e7
                           .group:00000000 wm4.pio.h.45.95f22b0ea02ddc698ec54fc56bf6f38c
                           .group:00000000 wm4.sam_gpio.h.50.76a45c51855d665134f8211cd601d693
                           .group:00000000 wm4.ioport_pio.h.44.373b34364b4ef25fac62017cd942a761
                           .group:00000000 wm4.sleep.h.45.ef10e1aee6f903405be19980a8333b7f
                           .group:00000000 wm4.smc.h.45.17a94aa976bb62b1109d03e8a314a569
                           .group:00000000 wm4.spi.h.45.712c66be09ffbac297c2e00923077297
                           .group:00000000 wm4.conf_sleepmgr.h.44.d825b913294720022fefe7201514fca3
                           .group:00000000 wm4.usart.h.46.eae6fe592b7ea0768efef8d312e7f44f
                           .group:00000000 wm4.usb_protocol_cdc.h.37.f6a736c1ba557ae596ae60fafc889d06
                           .group:00000000 wm4.conf_usb.h.38.caec09ff3c405b5325f1f32790b86cb2
                           .group:00000000 wm4.usb_atmel.h.45.c31b525dbe01f8d9e2022a03356ec174
                           .group:00000000 wm4.usb_protocol.h.63.850c58f3469fce50a9ac9a6854f7594b
                           .group:00000000 wm4.usb_protocol_vendor.h.45.83dfe073428ff799abc3ed1c7b04c77d
                           .group:00000000 wm4.udc_desc.h.77.5fec235bd7553e7256e345e020840072
                           .group:00000000 wm4.udd.h.103.3ccc59b50c14ec70568e6136eeb22d56
                           .group:00000000 wm4.udi_vendor.h.125.7b9085237d4d4a9757f4c148fba1918d
                           .group:00000000 wm4.udi_cdc.h.116.611453a0c813c5f2b6cd437c48e7eee8
                           .group:00000000 wm4.XMEGANVM.h.48.e7b2897ef70272e11c75543118cf4de6
                           .group:00000000 wm4.XPROGNewAE.h.44.1fab8fec0bc3c46aa52d18726018ea35
                           .group:00000000 wm4.XPROGTarget.h.45.eb85550bbf14ee8938dd582a0f86a3dd

UNDEFINED SYMBOLS
pmc_enable_periph_clk
pmc_disable_periph_clk
pio_configure_pin
portable_delay_cycles
pio_set_pin_high
usart_init_sync_master
usart_disable_rx
usart_disable_tx
usart_putchar
usart_read
TimeoutTicksRemaining
pio_get_pin_value
usart_enable_tx
usart_is_tx_empty
usart_enable_rx
